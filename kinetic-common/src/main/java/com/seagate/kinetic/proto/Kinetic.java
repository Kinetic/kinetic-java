// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kinetic.proto

package com.seagate.kinetic.proto;

public final class Kinetic {
  private Kinetic() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MessageOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .com.seagate.kinetic.proto.Message.Command command = 1;
    /**
     * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
     *
     * <pre>
     * The command contains the header, body and status as a single
     * unit that will be used to calculate the HMAC.
     * </pre>
     */
    boolean hasCommand();
    /**
     * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
     *
     * <pre>
     * The command contains the header, body and status as a single
     * unit that will be used to calculate the HMAC.
     * </pre>
     */
    com.seagate.kinetic.proto.Kinetic.Message.Command getCommand();
    /**
     * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
     *
     * <pre>
     * The command contains the header, body and status as a single
     * unit that will be used to calculate the HMAC.
     * </pre>
     */
    com.seagate.kinetic.proto.Kinetic.Message.CommandOrBuilder getCommandOrBuilder();

    // optional bytes hmac = 3;
    /**
     * <code>optional bytes hmac = 3;</code>
     *
     * <pre>
     *HMAC
     * </pre>
     */
    boolean hasHmac();
    /**
     * <code>optional bytes hmac = 3;</code>
     *
     * <pre>
     *HMAC
     * </pre>
     */
    com.google.protobuf.ByteString getHmac();
  }
  /**
   * Protobuf type {@code com.seagate.kinetic.proto.Message}
   *
   * <pre>
   **
   * Update summary:
   *
   * 1. Message is divided into the following logical sections.
   *
   * 1.1 Header.
   * 1.2 Body.
   * 1.3 Status.
   * 1.4 value.
   * 1.5 HMAC.
   * </pre>
   */
  public static final class Message extends
      com.google.protobuf.GeneratedMessage
      implements MessageOrBuilder {
    // Use Message.newBuilder() to construct.
    private Message(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Message(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Message defaultInstance;
    public static Message getDefaultInstance() {
      return defaultInstance;
    }

    public Message getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.seagate.kinetic.proto.Kinetic.Message.Command.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = command_.toBuilder();
              }
              command_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Command.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(command_);
                command_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              hmac_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.seagate.kinetic.proto.Kinetic.Message.class, com.seagate.kinetic.proto.Kinetic.Message.Builder.class);
    }

    public static com.google.protobuf.Parser<Message> PARSER =
        new com.google.protobuf.AbstractParser<Message>() {
      public Message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Message(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Message> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code com.seagate.kinetic.proto.Message.Synchronization}
     */
    public enum Synchronization
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INVALID_SYNCHRONIZATION = -1;</code>
       *
       * <pre>
       * Must come first, so default is invalid
       * </pre>
       */
      INVALID_SYNCHRONIZATION(0, -1),
      /**
       * <code>WRITETHROUGH = 1;</code>
       */
      WRITETHROUGH(1, 1),
      /**
       * <code>WRITEBACK = 2;</code>
       */
      WRITEBACK(2, 2),
      /**
       * <code>FLUSH = 3;</code>
       */
      FLUSH(3, 3),
      ;

      /**
       * <code>INVALID_SYNCHRONIZATION = -1;</code>
       *
       * <pre>
       * Must come first, so default is invalid
       * </pre>
       */
      public static final int INVALID_SYNCHRONIZATION_VALUE = -1;
      /**
       * <code>WRITETHROUGH = 1;</code>
       */
      public static final int WRITETHROUGH_VALUE = 1;
      /**
       * <code>WRITEBACK = 2;</code>
       */
      public static final int WRITEBACK_VALUE = 2;
      /**
       * <code>FLUSH = 3;</code>
       */
      public static final int FLUSH_VALUE = 3;


      public final int getNumber() { return value; }

      public static Synchronization valueOf(int value) {
        switch (value) {
          case -1: return INVALID_SYNCHRONIZATION;
          case 1: return WRITETHROUGH;
          case 2: return WRITEBACK;
          case 3: return FLUSH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Synchronization>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Synchronization>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Synchronization>() {
              public Synchronization findValueByNumber(int number) {
                return Synchronization.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.Message.getDescriptor().getEnumTypes().get(0);
      }

      private static final Synchronization[] VALUES = values();

      public static Synchronization valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Synchronization(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.seagate.kinetic.proto.Message.Synchronization)
    }

    /**
     * Protobuf enum {@code com.seagate.kinetic.proto.Message.Algorithm}
     *
     * <pre>
     *algorithm
     * </pre>
     */
    public enum Algorithm
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INVALID_ALGORITHM = -1;</code>
       *
       * <pre>
       * Must come first, so default is invalid
       * </pre>
       */
      INVALID_ALGORITHM(0, -1),
      /**
       * <code>SHA1 = 1;</code>
       *
       * <pre>
       * see NIST
       * </pre>
       */
      SHA1(1, 1),
      /**
       * <code>SHA2 = 2;</code>
       *
       * <pre>
       * see NIST
       * </pre>
       */
      SHA2(2, 2),
      /**
       * <code>SHA3 = 3;</code>
       *
       * <pre>
       * see NIST. The length of the tag determined the length of the hash
       * </pre>
       */
      SHA3(3, 3),
      /**
       * <code>CRC32 = 4;</code>
       *
       * <pre>
       * the CRC32 is the standard Ethernet CRC32. See IEEE
       * </pre>
       */
      CRC32(4, 4),
      /**
       * <code>CRC64 = 5;</code>
       *
       * <pre>
       * The CRC is ...
       * </pre>
       */
      CRC64(5, 5),
      ;

      /**
       * <code>INVALID_ALGORITHM = -1;</code>
       *
       * <pre>
       * Must come first, so default is invalid
       * </pre>
       */
      public static final int INVALID_ALGORITHM_VALUE = -1;
      /**
       * <code>SHA1 = 1;</code>
       *
       * <pre>
       * see NIST
       * </pre>
       */
      public static final int SHA1_VALUE = 1;
      /**
       * <code>SHA2 = 2;</code>
       *
       * <pre>
       * see NIST
       * </pre>
       */
      public static final int SHA2_VALUE = 2;
      /**
       * <code>SHA3 = 3;</code>
       *
       * <pre>
       * see NIST. The length of the tag determined the length of the hash
       * </pre>
       */
      public static final int SHA3_VALUE = 3;
      /**
       * <code>CRC32 = 4;</code>
       *
       * <pre>
       * the CRC32 is the standard Ethernet CRC32. See IEEE
       * </pre>
       */
      public static final int CRC32_VALUE = 4;
      /**
       * <code>CRC64 = 5;</code>
       *
       * <pre>
       * The CRC is ...
       * </pre>
       */
      public static final int CRC64_VALUE = 5;


      public final int getNumber() { return value; }

      public static Algorithm valueOf(int value) {
        switch (value) {
          case -1: return INVALID_ALGORITHM;
          case 1: return SHA1;
          case 2: return SHA2;
          case 3: return SHA3;
          case 4: return CRC32;
          case 5: return CRC64;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Algorithm>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Algorithm>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Algorithm>() {
              public Algorithm findValueByNumber(int number) {
                return Algorithm.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.Message.getDescriptor().getEnumTypes().get(1);
      }

      private static final Algorithm[] VALUES = values();

      public static Algorithm valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private Algorithm(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.seagate.kinetic.proto.Message.Algorithm)
    }

    /**
     * Protobuf enum {@code com.seagate.kinetic.proto.Message.MessageType}
     *
     * <pre>
     *operation code
     * </pre>
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INVALID_MESSAGE_TYPE = -1;</code>
       *
       * <pre>
       * Must come first, so default is invalid
       * </pre>
       */
      INVALID_MESSAGE_TYPE(0, -1),
      /**
       * <code>GET = 2;</code>
       *
       * <pre>
       *get operation
       * </pre>
       */
      GET(1, 2),
      /**
       * <code>GET_RESPONSE = 1;</code>
       */
      GET_RESPONSE(2, 1),
      /**
       * <code>PUT = 4;</code>
       *
       * <pre>
       *put operation
       * </pre>
       */
      PUT(3, 4),
      /**
       * <code>PUT_RESPONSE = 3;</code>
       */
      PUT_RESPONSE(4, 3),
      /**
       * <code>DELETE = 6;</code>
       */
      DELETE(5, 6),
      /**
       * <code>DELETE_RESPONSE = 5;</code>
       */
      DELETE_RESPONSE(6, 5),
      /**
       * <code>GETNEXT = 8;</code>
       */
      GETNEXT(7, 8),
      /**
       * <code>GETNEXT_RESPONSE = 7;</code>
       */
      GETNEXT_RESPONSE(8, 7),
      /**
       * <code>GETPREVIOUS = 10;</code>
       */
      GETPREVIOUS(9, 10),
      /**
       * <code>GETPREVIOUS_RESPONSE = 9;</code>
       */
      GETPREVIOUS_RESPONSE(10, 9),
      /**
       * <code>GETKEYRANGE = 12;</code>
       */
      GETKEYRANGE(11, 12),
      /**
       * <code>GETKEYRANGE_RESPONSE = 11;</code>
       */
      GETKEYRANGE_RESPONSE(12, 11),
      /**
       * <code>GETVERSION = 16;</code>
       */
      GETVERSION(13, 16),
      /**
       * <code>GETVERSION_RESPONSE = 15;</code>
       */
      GETVERSION_RESPONSE(14, 15),
      /**
       * <code>SETUP = 22;</code>
       */
      SETUP(15, 22),
      /**
       * <code>SETUP_RESPONSE = 21;</code>
       */
      SETUP_RESPONSE(16, 21),
      /**
       * <code>GETLOG = 24;</code>
       */
      GETLOG(17, 24),
      /**
       * <code>GETLOG_RESPONSE = 23;</code>
       */
      GETLOG_RESPONSE(18, 23),
      /**
       * <code>SECURITY = 26;</code>
       */
      SECURITY(19, 26),
      /**
       * <code>SECURITY_RESPONSE = 25;</code>
       */
      SECURITY_RESPONSE(20, 25),
      /**
       * <code>PEER2PEERPUSH = 28;</code>
       *
       * <pre>
       *peer to peer push operation
       * </pre>
       */
      PEER2PEERPUSH(21, 28),
      /**
       * <code>PEER2PEERPUSH_RESPONSE = 27;</code>
       */
      PEER2PEERPUSH_RESPONSE(22, 27),
      /**
       * <code>NOOP = 30;</code>
       */
      NOOP(23, 30),
      /**
       * <code>NOOP_RESPONSE = 29;</code>
       */
      NOOP_RESPONSE(24, 29),
      /**
       * <code>FLUSHALLDATA = 32;</code>
       */
      FLUSHALLDATA(25, 32),
      /**
       * <code>FLUSHALLDATA_RESPONSE = 31;</code>
       */
      FLUSHALLDATA_RESPONSE(26, 31),
      ;

      /**
       * <code>INVALID_MESSAGE_TYPE = -1;</code>
       *
       * <pre>
       * Must come first, so default is invalid
       * </pre>
       */
      public static final int INVALID_MESSAGE_TYPE_VALUE = -1;
      /**
       * <code>GET = 2;</code>
       *
       * <pre>
       *get operation
       * </pre>
       */
      public static final int GET_VALUE = 2;
      /**
       * <code>GET_RESPONSE = 1;</code>
       */
      public static final int GET_RESPONSE_VALUE = 1;
      /**
       * <code>PUT = 4;</code>
       *
       * <pre>
       *put operation
       * </pre>
       */
      public static final int PUT_VALUE = 4;
      /**
       * <code>PUT_RESPONSE = 3;</code>
       */
      public static final int PUT_RESPONSE_VALUE = 3;
      /**
       * <code>DELETE = 6;</code>
       */
      public static final int DELETE_VALUE = 6;
      /**
       * <code>DELETE_RESPONSE = 5;</code>
       */
      public static final int DELETE_RESPONSE_VALUE = 5;
      /**
       * <code>GETNEXT = 8;</code>
       */
      public static final int GETNEXT_VALUE = 8;
      /**
       * <code>GETNEXT_RESPONSE = 7;</code>
       */
      public static final int GETNEXT_RESPONSE_VALUE = 7;
      /**
       * <code>GETPREVIOUS = 10;</code>
       */
      public static final int GETPREVIOUS_VALUE = 10;
      /**
       * <code>GETPREVIOUS_RESPONSE = 9;</code>
       */
      public static final int GETPREVIOUS_RESPONSE_VALUE = 9;
      /**
       * <code>GETKEYRANGE = 12;</code>
       */
      public static final int GETKEYRANGE_VALUE = 12;
      /**
       * <code>GETKEYRANGE_RESPONSE = 11;</code>
       */
      public static final int GETKEYRANGE_RESPONSE_VALUE = 11;
      /**
       * <code>GETVERSION = 16;</code>
       */
      public static final int GETVERSION_VALUE = 16;
      /**
       * <code>GETVERSION_RESPONSE = 15;</code>
       */
      public static final int GETVERSION_RESPONSE_VALUE = 15;
      /**
       * <code>SETUP = 22;</code>
       */
      public static final int SETUP_VALUE = 22;
      /**
       * <code>SETUP_RESPONSE = 21;</code>
       */
      public static final int SETUP_RESPONSE_VALUE = 21;
      /**
       * <code>GETLOG = 24;</code>
       */
      public static final int GETLOG_VALUE = 24;
      /**
       * <code>GETLOG_RESPONSE = 23;</code>
       */
      public static final int GETLOG_RESPONSE_VALUE = 23;
      /**
       * <code>SECURITY = 26;</code>
       */
      public static final int SECURITY_VALUE = 26;
      /**
       * <code>SECURITY_RESPONSE = 25;</code>
       */
      public static final int SECURITY_RESPONSE_VALUE = 25;
      /**
       * <code>PEER2PEERPUSH = 28;</code>
       *
       * <pre>
       *peer to peer push operation
       * </pre>
       */
      public static final int PEER2PEERPUSH_VALUE = 28;
      /**
       * <code>PEER2PEERPUSH_RESPONSE = 27;</code>
       */
      public static final int PEER2PEERPUSH_RESPONSE_VALUE = 27;
      /**
       * <code>NOOP = 30;</code>
       */
      public static final int NOOP_VALUE = 30;
      /**
       * <code>NOOP_RESPONSE = 29;</code>
       */
      public static final int NOOP_RESPONSE_VALUE = 29;
      /**
       * <code>FLUSHALLDATA = 32;</code>
       */
      public static final int FLUSHALLDATA_VALUE = 32;
      /**
       * <code>FLUSHALLDATA_RESPONSE = 31;</code>
       */
      public static final int FLUSHALLDATA_RESPONSE_VALUE = 31;


      public final int getNumber() { return value; }

      public static MessageType valueOf(int value) {
        switch (value) {
          case -1: return INVALID_MESSAGE_TYPE;
          case 2: return GET;
          case 1: return GET_RESPONSE;
          case 4: return PUT;
          case 3: return PUT_RESPONSE;
          case 6: return DELETE;
          case 5: return DELETE_RESPONSE;
          case 8: return GETNEXT;
          case 7: return GETNEXT_RESPONSE;
          case 10: return GETPREVIOUS;
          case 9: return GETPREVIOUS_RESPONSE;
          case 12: return GETKEYRANGE;
          case 11: return GETKEYRANGE_RESPONSE;
          case 16: return GETVERSION;
          case 15: return GETVERSION_RESPONSE;
          case 22: return SETUP;
          case 21: return SETUP_RESPONSE;
          case 24: return GETLOG;
          case 23: return GETLOG_RESPONSE;
          case 26: return SECURITY;
          case 25: return SECURITY_RESPONSE;
          case 28: return PEER2PEERPUSH;
          case 27: return PEER2PEERPUSH_RESPONSE;
          case 30: return NOOP;
          case 29: return NOOP_RESPONSE;
          case 32: return FLUSHALLDATA;
          case 31: return FLUSHALLDATA_RESPONSE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.Message.getDescriptor().getEnumTypes().get(2);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private MessageType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:com.seagate.kinetic.proto.Message.MessageType)
    }

    public interface CommandOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .com.seagate.kinetic.proto.Message.Header header = 1;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
       *
       * <pre>
       *message header
       * </pre>
       */
      boolean hasHeader();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
       *
       * <pre>
       *message header
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Header getHeader();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
       *
       * <pre>
       *message header
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.HeaderOrBuilder getHeaderOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.Body body = 2;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
       *
       * <pre>
       *message body
       * </pre>
       */
      boolean hasBody();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
       *
       * <pre>
       *message body
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Body getBody();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
       *
       * <pre>
       *message body
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.BodyOrBuilder getBodyOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.Status status = 3;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
       *
       * <pre>
       *operation status
       * </pre>
       */
      boolean hasStatus();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
       *
       * <pre>
       *operation status
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Status getStatus();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
       *
       * <pre>
       *operation status
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder getStatusOrBuilder();
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.Command}
     */
    public static final class Command extends
        com.google.protobuf.GeneratedMessage
        implements CommandOrBuilder {
      // Use Command.newBuilder() to construct.
      private Command(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Command(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Command defaultInstance;
      public static Command getDefaultInstance() {
        return defaultInstance;
      }

      public Command getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Command(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.seagate.kinetic.proto.Kinetic.Message.Header.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = header_.toBuilder();
                }
                header_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Header.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(header_);
                  header_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                com.seagate.kinetic.proto.Kinetic.Message.Body.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = body_.toBuilder();
                }
                body_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Body.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(body_);
                  body_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                com.seagate.kinetic.proto.Kinetic.Message.Status.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = status_.toBuilder();
                }
                status_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Status.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(status_);
                  status_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Command_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Command_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.Command.class, com.seagate.kinetic.proto.Kinetic.Message.Command.Builder.class);
      }

      public static com.google.protobuf.Parser<Command> PARSER =
          new com.google.protobuf.AbstractParser<Command>() {
        public Command parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Command(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Command> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .com.seagate.kinetic.proto.Message.Header header = 1;
      public static final int HEADER_FIELD_NUMBER = 1;
      private com.seagate.kinetic.proto.Kinetic.Message.Header header_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
       *
       * <pre>
       *message header
       * </pre>
       */
      public boolean hasHeader() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
       *
       * <pre>
       *message header
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Header getHeader() {
        return header_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
       *
       * <pre>
       *message header
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.HeaderOrBuilder getHeaderOrBuilder() {
        return header_;
      }

      // optional .com.seagate.kinetic.proto.Message.Body body = 2;
      public static final int BODY_FIELD_NUMBER = 2;
      private com.seagate.kinetic.proto.Kinetic.Message.Body body_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
       *
       * <pre>
       *message body
       * </pre>
       */
      public boolean hasBody() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
       *
       * <pre>
       *message body
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Body getBody() {
        return body_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
       *
       * <pre>
       *message body
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.BodyOrBuilder getBodyOrBuilder() {
        return body_;
      }

      // optional .com.seagate.kinetic.proto.Message.Status status = 3;
      public static final int STATUS_FIELD_NUMBER = 3;
      private com.seagate.kinetic.proto.Kinetic.Message.Status status_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
       *
       * <pre>
       *operation status
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
       *
       * <pre>
       *operation status
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Status getStatus() {
        return status_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
       *
       * <pre>
       *operation status
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder getStatusOrBuilder() {
        return status_;
      }

      private void initFields() {
        header_ = com.seagate.kinetic.proto.Kinetic.Message.Header.getDefaultInstance();
        body_ = com.seagate.kinetic.proto.Kinetic.Message.Body.getDefaultInstance();
        status_ = com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, header_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, body_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, status_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, header_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, body_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, status_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Command parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Command prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.Command}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.CommandOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Command_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Command_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.Command.class, com.seagate.kinetic.proto.Kinetic.Message.Command.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.Command.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getHeaderFieldBuilder();
            getBodyFieldBuilder();
            getStatusFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (headerBuilder_ == null) {
            header_ = com.seagate.kinetic.proto.Kinetic.Message.Header.getDefaultInstance();
          } else {
            headerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (bodyBuilder_ == null) {
            body_ = com.seagate.kinetic.proto.Kinetic.Message.Body.getDefaultInstance();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (statusBuilder_ == null) {
            status_ = com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
          } else {
            statusBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Command_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Command getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.Command.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Command build() {
          com.seagate.kinetic.proto.Kinetic.Message.Command result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Command buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.Command result = new com.seagate.kinetic.proto.Kinetic.Message.Command(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (headerBuilder_ == null) {
            result.header_ = header_;
          } else {
            result.header_ = headerBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (bodyBuilder_ == null) {
            result.body_ = body_;
          } else {
            result.body_ = bodyBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (statusBuilder_ == null) {
            result.status_ = status_;
          } else {
            result.status_ = statusBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Command) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Command)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Command other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.Command.getDefaultInstance()) return this;
          if (other.hasHeader()) {
            mergeHeader(other.getHeader());
          }
          if (other.hasBody()) {
            mergeBody(other.getBody());
          }
          if (other.hasStatus()) {
            mergeStatus(other.getStatus());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.Command parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Command) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .com.seagate.kinetic.proto.Message.Header header = 1;
        private com.seagate.kinetic.proto.Kinetic.Message.Header header_ = com.seagate.kinetic.proto.Kinetic.Message.Header.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Header, com.seagate.kinetic.proto.Kinetic.Message.Header.Builder, com.seagate.kinetic.proto.Kinetic.Message.HeaderOrBuilder> headerBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        public boolean hasHeader() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Header getHeader() {
          if (headerBuilder_ == null) {
            return header_;
          } else {
            return headerBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        public Builder setHeader(com.seagate.kinetic.proto.Kinetic.Message.Header value) {
          if (headerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            header_ = value;
            onChanged();
          } else {
            headerBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        public Builder setHeader(
            com.seagate.kinetic.proto.Kinetic.Message.Header.Builder builderForValue) {
          if (headerBuilder_ == null) {
            header_ = builderForValue.build();
            onChanged();
          } else {
            headerBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        public Builder mergeHeader(com.seagate.kinetic.proto.Kinetic.Message.Header value) {
          if (headerBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                header_ != com.seagate.kinetic.proto.Kinetic.Message.Header.getDefaultInstance()) {
              header_ =
                com.seagate.kinetic.proto.Kinetic.Message.Header.newBuilder(header_).mergeFrom(value).buildPartial();
            } else {
              header_ = value;
            }
            onChanged();
          } else {
            headerBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        public Builder clearHeader() {
          if (headerBuilder_ == null) {
            header_ = com.seagate.kinetic.proto.Kinetic.Message.Header.getDefaultInstance();
            onChanged();
          } else {
            headerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Header.Builder getHeaderBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getHeaderFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.HeaderOrBuilder getHeaderOrBuilder() {
          if (headerBuilder_ != null) {
            return headerBuilder_.getMessageOrBuilder();
          } else {
            return header_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Header header = 1;</code>
         *
         * <pre>
         *message header
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Header, com.seagate.kinetic.proto.Kinetic.Message.Header.Builder, com.seagate.kinetic.proto.Kinetic.Message.HeaderOrBuilder> 
            getHeaderFieldBuilder() {
          if (headerBuilder_ == null) {
            headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.Header, com.seagate.kinetic.proto.Kinetic.Message.Header.Builder, com.seagate.kinetic.proto.Kinetic.Message.HeaderOrBuilder>(
                    header_,
                    getParentForChildren(),
                    isClean());
            header_ = null;
          }
          return headerBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.Body body = 2;
        private com.seagate.kinetic.proto.Kinetic.Message.Body body_ = com.seagate.kinetic.proto.Kinetic.Message.Body.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Body, com.seagate.kinetic.proto.Kinetic.Message.Body.Builder, com.seagate.kinetic.proto.Kinetic.Message.BodyOrBuilder> bodyBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        public boolean hasBody() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Body getBody() {
          if (bodyBuilder_ == null) {
            return body_;
          } else {
            return bodyBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        public Builder setBody(com.seagate.kinetic.proto.Kinetic.Message.Body value) {
          if (bodyBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            body_ = value;
            onChanged();
          } else {
            bodyBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        public Builder setBody(
            com.seagate.kinetic.proto.Kinetic.Message.Body.Builder builderForValue) {
          if (bodyBuilder_ == null) {
            body_ = builderForValue.build();
            onChanged();
          } else {
            bodyBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        public Builder mergeBody(com.seagate.kinetic.proto.Kinetic.Message.Body value) {
          if (bodyBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                body_ != com.seagate.kinetic.proto.Kinetic.Message.Body.getDefaultInstance()) {
              body_ =
                com.seagate.kinetic.proto.Kinetic.Message.Body.newBuilder(body_).mergeFrom(value).buildPartial();
            } else {
              body_ = value;
            }
            onChanged();
          } else {
            bodyBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        public Builder clearBody() {
          if (bodyBuilder_ == null) {
            body_ = com.seagate.kinetic.proto.Kinetic.Message.Body.getDefaultInstance();
            onChanged();
          } else {
            bodyBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Body.Builder getBodyBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getBodyFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.BodyOrBuilder getBodyOrBuilder() {
          if (bodyBuilder_ != null) {
            return bodyBuilder_.getMessageOrBuilder();
          } else {
            return body_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Body body = 2;</code>
         *
         * <pre>
         *message body
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Body, com.seagate.kinetic.proto.Kinetic.Message.Body.Builder, com.seagate.kinetic.proto.Kinetic.Message.BodyOrBuilder> 
            getBodyFieldBuilder() {
          if (bodyBuilder_ == null) {
            bodyBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.Body, com.seagate.kinetic.proto.Kinetic.Message.Body.Builder, com.seagate.kinetic.proto.Kinetic.Message.BodyOrBuilder>(
                    body_,
                    getParentForChildren(),
                    isClean());
            body_ = null;
          }
          return bodyBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.Status status = 3;
        private com.seagate.kinetic.proto.Kinetic.Message.Status status_ = com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Status, com.seagate.kinetic.proto.Kinetic.Message.Status.Builder, com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder> statusBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Status getStatus() {
          if (statusBuilder_ == null) {
            return status_;
          } else {
            return statusBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        public Builder setStatus(com.seagate.kinetic.proto.Kinetic.Message.Status value) {
          if (statusBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            status_ = value;
            onChanged();
          } else {
            statusBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        public Builder setStatus(
            com.seagate.kinetic.proto.Kinetic.Message.Status.Builder builderForValue) {
          if (statusBuilder_ == null) {
            status_ = builderForValue.build();
            onChanged();
          } else {
            statusBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        public Builder mergeStatus(com.seagate.kinetic.proto.Kinetic.Message.Status value) {
          if (statusBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                status_ != com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance()) {
              status_ =
                com.seagate.kinetic.proto.Kinetic.Message.Status.newBuilder(status_).mergeFrom(value).buildPartial();
            } else {
              status_ = value;
            }
            onChanged();
          } else {
            statusBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        public Builder clearStatus() {
          if (statusBuilder_ == null) {
            status_ = com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
            onChanged();
          } else {
            statusBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Status.Builder getStatusBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getStatusFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder getStatusOrBuilder() {
          if (statusBuilder_ != null) {
            return statusBuilder_.getMessageOrBuilder();
          } else {
            return status_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 3;</code>
         *
         * <pre>
         *operation status
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Status, com.seagate.kinetic.proto.Kinetic.Message.Status.Builder, com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder> 
            getStatusFieldBuilder() {
          if (statusBuilder_ == null) {
            statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.Status, com.seagate.kinetic.proto.Kinetic.Message.Status.Builder, com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder>(
                    status_,
                    getParentForChildren(),
                    isClean());
            status_ = null;
          }
          return statusBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Command)
      }

      static {
        defaultInstance = new Command(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Command)
    }

    public interface HeaderOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int64 clusterVersion = 1;
      /**
       * <code>optional int64 clusterVersion = 1;</code>
       *
       * <pre>
       * "cluster" is the version number of the cluster definition. If this is incompatible,
       * the request is rejected. If it is missing, it is assumed to be 0. (0 allows systems not
       * using cluster vesioning to ignore this field in the header and in the setup.)
       * </pre>
       */
      boolean hasClusterVersion();
      /**
       * <code>optional int64 clusterVersion = 1;</code>
       *
       * <pre>
       * "cluster" is the version number of the cluster definition. If this is incompatible,
       * the request is rejected. If it is missing, it is assumed to be 0. (0 allows systems not
       * using cluster vesioning to ignore this field in the header and in the setup.)
       * </pre>
       */
      long getClusterVersion();

      // optional int64 identity = 2;
      /**
       * <code>optional int64 identity = 2;</code>
       *
       * <pre>
       * The hmac of the request provides the authentication and (indirectly) the authority of the identity.
       * The "identity" identifies the requester and the key and algorithm to be used for hmac. (See security document).
       * </pre>
       */
      boolean hasIdentity();
      /**
       * <code>optional int64 identity = 2;</code>
       *
       * <pre>
       * The hmac of the request provides the authentication and (indirectly) the authority of the identity.
       * The "identity" identifies the requester and the key and algorithm to be used for hmac. (See security document).
       * </pre>
       */
      long getIdentity();

      // optional int64 connectionID = 3;
      /**
       * <code>optional int64 connectionID = 3;</code>
       *
       * <pre>
       * A unique number for this connection between the source and target. On the first request
       * to the drive, this should be the time of day in seconds since 1970. The drive can change this
       * number and the client must continue to use the new number and the number must remain
       * constant during the session. (See security document).
       * </pre>
       */
      boolean hasConnectionID();
      /**
       * <code>optional int64 connectionID = 3;</code>
       *
       * <pre>
       * A unique number for this connection between the source and target. On the first request
       * to the drive, this should be the time of day in seconds since 1970. The drive can change this
       * number and the client must continue to use the new number and the number must remain
       * constant during the session. (See security document).
       * </pre>
       */
      long getConnectionID();

      // optional int64 sequence = 4;
      /**
       * <code>optional int64 sequence = 4;</code>
       *
       * <pre>
       * the sequence of this request in this TCP connection. As long as this value is getting larger we have
       * strong ordering and replay prevention within a session. This combined with the time and connectionID
       * provides strong ordering between sessions. (See security document).
       * </pre>
       */
      boolean hasSequence();
      /**
       * <code>optional int64 sequence = 4;</code>
       *
       * <pre>
       * the sequence of this request in this TCP connection. As long as this value is getting larger we have
       * strong ordering and replay prevention within a session. This combined with the time and connectionID
       * provides strong ordering between sessions. (See security document).
       * </pre>
       */
      long getSequence();

      // optional int64 ackSequence = 6;
      /**
       * <code>optional int64 ackSequence = 6;</code>
       *
       * <pre>
       *co-related sequence
       * </pre>
       */
      boolean hasAckSequence();
      /**
       * <code>optional int64 ackSequence = 6;</code>
       *
       * <pre>
       *co-related sequence
       * </pre>
       */
      long getAckSequence();

      // optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;</code>
       *
       * <pre>
       *operation code - put/get/delete/GetLog, etc.
       * </pre>
       */
      boolean hasMessageType();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;</code>
       *
       * <pre>
       *operation code - put/get/delete/GetLog, etc.
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.MessageType getMessageType();

      // optional int64 timeout = 9;
      /**
       * <code>optional int64 timeout = 9;</code>
       *
       * <pre>
       * Request timeout (in ms). This is the amount of time that this request should take. If this timeout
       * is triggered, there are three possible results that can be returned.
       *   - SERVICE_BUSY meaning that the request was still on the queue waiting to be executed
       *   - EXPIRED meaning that a long running operation was stopped because the time expired.
       *   - DATA_ERROR meaning that the request was in process, but that the error recovery was not
       *          complete at the time that the time expired
       * </pre>
       */
      boolean hasTimeout();
      /**
       * <code>optional int64 timeout = 9;</code>
       *
       * <pre>
       * Request timeout (in ms). This is the amount of time that this request should take. If this timeout
       * is triggered, there are three possible results that can be returned.
       *   - SERVICE_BUSY meaning that the request was still on the queue waiting to be executed
       *   - EXPIRED meaning that a long running operation was stopped because the time expired.
       *   - DATA_ERROR meaning that the request was in process, but that the error recovery was not
       *          complete at the time that the time expired
       * </pre>
       */
      long getTimeout();

      // optional bool earlyExit = 10;
      /**
       * <code>optional bool earlyExit = 10;</code>
       *
       * <pre>
       * If true, requests will not attempt multi revolution recoveries even if the timeout has not occurred.
       * In this case the result will be DATA_ERROR. To have the drive exhaust all possible error recovery, leave
       * this field off or set to false, and make sure that the timeout is set to be longer than any possible queue
       * time and error recovery time. On a disk drive, the maximum error recovery time could be seconds.
       * Once all possible data recovery operations are complete and have not succeeded, PERM_DATA_ERROR will be
       * returned.
       * </pre>
       */
      boolean hasEarlyExit();
      /**
       * <code>optional bool earlyExit = 10;</code>
       *
       * <pre>
       * If true, requests will not attempt multi revolution recoveries even if the timeout has not occurred.
       * In this case the result will be DATA_ERROR. To have the drive exhaust all possible error recovery, leave
       * this field off or set to false, and make sure that the timeout is set to be longer than any possible queue
       * time and error recovery time. On a disk drive, the maximum error recovery time could be seconds.
       * Once all possible data recovery operations are complete and have not succeeded, PERM_DATA_ERROR will be
       * returned.
       * </pre>
       */
      boolean getEarlyExit();

      // optional bool backgroundScan = 11;
      /**
       * <code>optional bool backgroundScan = 11;</code>
       *
       * <pre>
       * A hint that this request is part of a background scan, this is a hint that can allow the drive
       * to do it's background read process on this record. This allows the drive not to do it's own
       * background scan.
       * </pre>
       */
      boolean hasBackgroundScan();
      /**
       * <code>optional bool backgroundScan = 11;</code>
       *
       * <pre>
       * A hint that this request is part of a background scan, this is a hint that can allow the drive
       * to do it's background read process on this record. This allows the drive not to do it's own
       * background scan.
       * </pre>
       */
      boolean getBackgroundScan();
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.Header}
     *
     * <pre>
     *message header
     * </pre>
     */
    public static final class Header extends
        com.google.protobuf.GeneratedMessage
        implements HeaderOrBuilder {
      // Use Header.newBuilder() to construct.
      private Header(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Header(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Header defaultInstance;
      public static Header getDefaultInstance() {
        return defaultInstance;
      }

      public Header getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Header(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                clusterVersion_ = input.readInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                identity_ = input.readInt64();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                connectionID_ = input.readInt64();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                sequence_ = input.readInt64();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000010;
                ackSequence_ = input.readInt64();
                break;
              }
              case 56: {
                int rawValue = input.readEnum();
                com.seagate.kinetic.proto.Kinetic.Message.MessageType value = com.seagate.kinetic.proto.Kinetic.Message.MessageType.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(7, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  messageType_ = value;
                }
                break;
              }
              case 72: {
                bitField0_ |= 0x00000040;
                timeout_ = input.readInt64();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000080;
                earlyExit_ = input.readBool();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000100;
                backgroundScan_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Header_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Header_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.Header.class, com.seagate.kinetic.proto.Kinetic.Message.Header.Builder.class);
      }

      public static com.google.protobuf.Parser<Header> PARSER =
          new com.google.protobuf.AbstractParser<Header>() {
        public Header parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Header(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Header> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int64 clusterVersion = 1;
      public static final int CLUSTERVERSION_FIELD_NUMBER = 1;
      private long clusterVersion_;
      /**
       * <code>optional int64 clusterVersion = 1;</code>
       *
       * <pre>
       * "cluster" is the version number of the cluster definition. If this is incompatible,
       * the request is rejected. If it is missing, it is assumed to be 0. (0 allows systems not
       * using cluster vesioning to ignore this field in the header and in the setup.)
       * </pre>
       */
      public boolean hasClusterVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 clusterVersion = 1;</code>
       *
       * <pre>
       * "cluster" is the version number of the cluster definition. If this is incompatible,
       * the request is rejected. If it is missing, it is assumed to be 0. (0 allows systems not
       * using cluster vesioning to ignore this field in the header and in the setup.)
       * </pre>
       */
      public long getClusterVersion() {
        return clusterVersion_;
      }

      // optional int64 identity = 2;
      public static final int IDENTITY_FIELD_NUMBER = 2;
      private long identity_;
      /**
       * <code>optional int64 identity = 2;</code>
       *
       * <pre>
       * The hmac of the request provides the authentication and (indirectly) the authority of the identity.
       * The "identity" identifies the requester and the key and algorithm to be used for hmac. (See security document).
       * </pre>
       */
      public boolean hasIdentity() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int64 identity = 2;</code>
       *
       * <pre>
       * The hmac of the request provides the authentication and (indirectly) the authority of the identity.
       * The "identity" identifies the requester and the key and algorithm to be used for hmac. (See security document).
       * </pre>
       */
      public long getIdentity() {
        return identity_;
      }

      // optional int64 connectionID = 3;
      public static final int CONNECTIONID_FIELD_NUMBER = 3;
      private long connectionID_;
      /**
       * <code>optional int64 connectionID = 3;</code>
       *
       * <pre>
       * A unique number for this connection between the source and target. On the first request
       * to the drive, this should be the time of day in seconds since 1970. The drive can change this
       * number and the client must continue to use the new number and the number must remain
       * constant during the session. (See security document).
       * </pre>
       */
      public boolean hasConnectionID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int64 connectionID = 3;</code>
       *
       * <pre>
       * A unique number for this connection between the source and target. On the first request
       * to the drive, this should be the time of day in seconds since 1970. The drive can change this
       * number and the client must continue to use the new number and the number must remain
       * constant during the session. (See security document).
       * </pre>
       */
      public long getConnectionID() {
        return connectionID_;
      }

      // optional int64 sequence = 4;
      public static final int SEQUENCE_FIELD_NUMBER = 4;
      private long sequence_;
      /**
       * <code>optional int64 sequence = 4;</code>
       *
       * <pre>
       * the sequence of this request in this TCP connection. As long as this value is getting larger we have
       * strong ordering and replay prevention within a session. This combined with the time and connectionID
       * provides strong ordering between sessions. (See security document).
       * </pre>
       */
      public boolean hasSequence() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int64 sequence = 4;</code>
       *
       * <pre>
       * the sequence of this request in this TCP connection. As long as this value is getting larger we have
       * strong ordering and replay prevention within a session. This combined with the time and connectionID
       * provides strong ordering between sessions. (See security document).
       * </pre>
       */
      public long getSequence() {
        return sequence_;
      }

      // optional int64 ackSequence = 6;
      public static final int ACKSEQUENCE_FIELD_NUMBER = 6;
      private long ackSequence_;
      /**
       * <code>optional int64 ackSequence = 6;</code>
       *
       * <pre>
       *co-related sequence
       * </pre>
       */
      public boolean hasAckSequence() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int64 ackSequence = 6;</code>
       *
       * <pre>
       *co-related sequence
       * </pre>
       */
      public long getAckSequence() {
        return ackSequence_;
      }

      // optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;
      public static final int MESSAGETYPE_FIELD_NUMBER = 7;
      private com.seagate.kinetic.proto.Kinetic.Message.MessageType messageType_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;</code>
       *
       * <pre>
       *operation code - put/get/delete/GetLog, etc.
       * </pre>
       */
      public boolean hasMessageType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;</code>
       *
       * <pre>
       *operation code - put/get/delete/GetLog, etc.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.MessageType getMessageType() {
        return messageType_;
      }

      // optional int64 timeout = 9;
      public static final int TIMEOUT_FIELD_NUMBER = 9;
      private long timeout_;
      /**
       * <code>optional int64 timeout = 9;</code>
       *
       * <pre>
       * Request timeout (in ms). This is the amount of time that this request should take. If this timeout
       * is triggered, there are three possible results that can be returned.
       *   - SERVICE_BUSY meaning that the request was still on the queue waiting to be executed
       *   - EXPIRED meaning that a long running operation was stopped because the time expired.
       *   - DATA_ERROR meaning that the request was in process, but that the error recovery was not
       *          complete at the time that the time expired
       * </pre>
       */
      public boolean hasTimeout() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int64 timeout = 9;</code>
       *
       * <pre>
       * Request timeout (in ms). This is the amount of time that this request should take. If this timeout
       * is triggered, there are three possible results that can be returned.
       *   - SERVICE_BUSY meaning that the request was still on the queue waiting to be executed
       *   - EXPIRED meaning that a long running operation was stopped because the time expired.
       *   - DATA_ERROR meaning that the request was in process, but that the error recovery was not
       *          complete at the time that the time expired
       * </pre>
       */
      public long getTimeout() {
        return timeout_;
      }

      // optional bool earlyExit = 10;
      public static final int EARLYEXIT_FIELD_NUMBER = 10;
      private boolean earlyExit_;
      /**
       * <code>optional bool earlyExit = 10;</code>
       *
       * <pre>
       * If true, requests will not attempt multi revolution recoveries even if the timeout has not occurred.
       * In this case the result will be DATA_ERROR. To have the drive exhaust all possible error recovery, leave
       * this field off or set to false, and make sure that the timeout is set to be longer than any possible queue
       * time and error recovery time. On a disk drive, the maximum error recovery time could be seconds.
       * Once all possible data recovery operations are complete and have not succeeded, PERM_DATA_ERROR will be
       * returned.
       * </pre>
       */
      public boolean hasEarlyExit() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional bool earlyExit = 10;</code>
       *
       * <pre>
       * If true, requests will not attempt multi revolution recoveries even if the timeout has not occurred.
       * In this case the result will be DATA_ERROR. To have the drive exhaust all possible error recovery, leave
       * this field off or set to false, and make sure that the timeout is set to be longer than any possible queue
       * time and error recovery time. On a disk drive, the maximum error recovery time could be seconds.
       * Once all possible data recovery operations are complete and have not succeeded, PERM_DATA_ERROR will be
       * returned.
       * </pre>
       */
      public boolean getEarlyExit() {
        return earlyExit_;
      }

      // optional bool backgroundScan = 11;
      public static final int BACKGROUNDSCAN_FIELD_NUMBER = 11;
      private boolean backgroundScan_;
      /**
       * <code>optional bool backgroundScan = 11;</code>
       *
       * <pre>
       * A hint that this request is part of a background scan, this is a hint that can allow the drive
       * to do it's background read process on this record. This allows the drive not to do it's own
       * background scan.
       * </pre>
       */
      public boolean hasBackgroundScan() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool backgroundScan = 11;</code>
       *
       * <pre>
       * A hint that this request is part of a background scan, this is a hint that can allow the drive
       * to do it's background read process on this record. This allows the drive not to do it's own
       * background scan.
       * </pre>
       */
      public boolean getBackgroundScan() {
        return backgroundScan_;
      }

      private void initFields() {
        clusterVersion_ = 0L;
        identity_ = 0L;
        connectionID_ = 0L;
        sequence_ = 0L;
        ackSequence_ = 0L;
        messageType_ = com.seagate.kinetic.proto.Kinetic.Message.MessageType.INVALID_MESSAGE_TYPE;
        timeout_ = 0L;
        earlyExit_ = false;
        backgroundScan_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, clusterVersion_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt64(2, identity_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeInt64(3, connectionID_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeInt64(4, sequence_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt64(6, ackSequence_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(7, messageType_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeInt64(9, timeout_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBool(10, earlyExit_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBool(11, backgroundScan_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, clusterVersion_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, identity_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, connectionID_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, sequence_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(6, ackSequence_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(7, messageType_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(9, timeout_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, earlyExit_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(11, backgroundScan_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Header parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Header prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.Header}
       *
       * <pre>
       *message header
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.HeaderOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Header_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Header_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.Header.class, com.seagate.kinetic.proto.Kinetic.Message.Header.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.Header.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          clusterVersion_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          identity_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000002);
          connectionID_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000004);
          sequence_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000008);
          ackSequence_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000010);
          messageType_ = com.seagate.kinetic.proto.Kinetic.Message.MessageType.INVALID_MESSAGE_TYPE;
          bitField0_ = (bitField0_ & ~0x00000020);
          timeout_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000040);
          earlyExit_ = false;
          bitField0_ = (bitField0_ & ~0x00000080);
          backgroundScan_ = false;
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Header_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Header getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.Header.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Header build() {
          com.seagate.kinetic.proto.Kinetic.Message.Header result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Header buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.Header result = new com.seagate.kinetic.proto.Kinetic.Message.Header(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.clusterVersion_ = clusterVersion_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.identity_ = identity_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.connectionID_ = connectionID_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.sequence_ = sequence_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.ackSequence_ = ackSequence_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.messageType_ = messageType_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.timeout_ = timeout_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.earlyExit_ = earlyExit_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.backgroundScan_ = backgroundScan_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Header) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Header)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Header other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.Header.getDefaultInstance()) return this;
          if (other.hasClusterVersion()) {
            setClusterVersion(other.getClusterVersion());
          }
          if (other.hasIdentity()) {
            setIdentity(other.getIdentity());
          }
          if (other.hasConnectionID()) {
            setConnectionID(other.getConnectionID());
          }
          if (other.hasSequence()) {
            setSequence(other.getSequence());
          }
          if (other.hasAckSequence()) {
            setAckSequence(other.getAckSequence());
          }
          if (other.hasMessageType()) {
            setMessageType(other.getMessageType());
          }
          if (other.hasTimeout()) {
            setTimeout(other.getTimeout());
          }
          if (other.hasEarlyExit()) {
            setEarlyExit(other.getEarlyExit());
          }
          if (other.hasBackgroundScan()) {
            setBackgroundScan(other.getBackgroundScan());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.Header parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Header) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int64 clusterVersion = 1;
        private long clusterVersion_ ;
        /**
         * <code>optional int64 clusterVersion = 1;</code>
         *
         * <pre>
         * "cluster" is the version number of the cluster definition. If this is incompatible,
         * the request is rejected. If it is missing, it is assumed to be 0. (0 allows systems not
         * using cluster vesioning to ignore this field in the header and in the setup.)
         * </pre>
         */
        public boolean hasClusterVersion() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 clusterVersion = 1;</code>
         *
         * <pre>
         * "cluster" is the version number of the cluster definition. If this is incompatible,
         * the request is rejected. If it is missing, it is assumed to be 0. (0 allows systems not
         * using cluster vesioning to ignore this field in the header and in the setup.)
         * </pre>
         */
        public long getClusterVersion() {
          return clusterVersion_;
        }
        /**
         * <code>optional int64 clusterVersion = 1;</code>
         *
         * <pre>
         * "cluster" is the version number of the cluster definition. If this is incompatible,
         * the request is rejected. If it is missing, it is assumed to be 0. (0 allows systems not
         * using cluster vesioning to ignore this field in the header and in the setup.)
         * </pre>
         */
        public Builder setClusterVersion(long value) {
          bitField0_ |= 0x00000001;
          clusterVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 clusterVersion = 1;</code>
         *
         * <pre>
         * "cluster" is the version number of the cluster definition. If this is incompatible,
         * the request is rejected. If it is missing, it is assumed to be 0. (0 allows systems not
         * using cluster vesioning to ignore this field in the header and in the setup.)
         * </pre>
         */
        public Builder clearClusterVersion() {
          bitField0_ = (bitField0_ & ~0x00000001);
          clusterVersion_ = 0L;
          onChanged();
          return this;
        }

        // optional int64 identity = 2;
        private long identity_ ;
        /**
         * <code>optional int64 identity = 2;</code>
         *
         * <pre>
         * The hmac of the request provides the authentication and (indirectly) the authority of the identity.
         * The "identity" identifies the requester and the key and algorithm to be used for hmac. (See security document).
         * </pre>
         */
        public boolean hasIdentity() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int64 identity = 2;</code>
         *
         * <pre>
         * The hmac of the request provides the authentication and (indirectly) the authority of the identity.
         * The "identity" identifies the requester and the key and algorithm to be used for hmac. (See security document).
         * </pre>
         */
        public long getIdentity() {
          return identity_;
        }
        /**
         * <code>optional int64 identity = 2;</code>
         *
         * <pre>
         * The hmac of the request provides the authentication and (indirectly) the authority of the identity.
         * The "identity" identifies the requester and the key and algorithm to be used for hmac. (See security document).
         * </pre>
         */
        public Builder setIdentity(long value) {
          bitField0_ |= 0x00000002;
          identity_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 identity = 2;</code>
         *
         * <pre>
         * The hmac of the request provides the authentication and (indirectly) the authority of the identity.
         * The "identity" identifies the requester and the key and algorithm to be used for hmac. (See security document).
         * </pre>
         */
        public Builder clearIdentity() {
          bitField0_ = (bitField0_ & ~0x00000002);
          identity_ = 0L;
          onChanged();
          return this;
        }

        // optional int64 connectionID = 3;
        private long connectionID_ ;
        /**
         * <code>optional int64 connectionID = 3;</code>
         *
         * <pre>
         * A unique number for this connection between the source and target. On the first request
         * to the drive, this should be the time of day in seconds since 1970. The drive can change this
         * number and the client must continue to use the new number and the number must remain
         * constant during the session. (See security document).
         * </pre>
         */
        public boolean hasConnectionID() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional int64 connectionID = 3;</code>
         *
         * <pre>
         * A unique number for this connection between the source and target. On the first request
         * to the drive, this should be the time of day in seconds since 1970. The drive can change this
         * number and the client must continue to use the new number and the number must remain
         * constant during the session. (See security document).
         * </pre>
         */
        public long getConnectionID() {
          return connectionID_;
        }
        /**
         * <code>optional int64 connectionID = 3;</code>
         *
         * <pre>
         * A unique number for this connection between the source and target. On the first request
         * to the drive, this should be the time of day in seconds since 1970. The drive can change this
         * number and the client must continue to use the new number and the number must remain
         * constant during the session. (See security document).
         * </pre>
         */
        public Builder setConnectionID(long value) {
          bitField0_ |= 0x00000004;
          connectionID_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 connectionID = 3;</code>
         *
         * <pre>
         * A unique number for this connection between the source and target. On the first request
         * to the drive, this should be the time of day in seconds since 1970. The drive can change this
         * number and the client must continue to use the new number and the number must remain
         * constant during the session. (See security document).
         * </pre>
         */
        public Builder clearConnectionID() {
          bitField0_ = (bitField0_ & ~0x00000004);
          connectionID_ = 0L;
          onChanged();
          return this;
        }

        // optional int64 sequence = 4;
        private long sequence_ ;
        /**
         * <code>optional int64 sequence = 4;</code>
         *
         * <pre>
         * the sequence of this request in this TCP connection. As long as this value is getting larger we have
         * strong ordering and replay prevention within a session. This combined with the time and connectionID
         * provides strong ordering between sessions. (See security document).
         * </pre>
         */
        public boolean hasSequence() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional int64 sequence = 4;</code>
         *
         * <pre>
         * the sequence of this request in this TCP connection. As long as this value is getting larger we have
         * strong ordering and replay prevention within a session. This combined with the time and connectionID
         * provides strong ordering between sessions. (See security document).
         * </pre>
         */
        public long getSequence() {
          return sequence_;
        }
        /**
         * <code>optional int64 sequence = 4;</code>
         *
         * <pre>
         * the sequence of this request in this TCP connection. As long as this value is getting larger we have
         * strong ordering and replay prevention within a session. This combined with the time and connectionID
         * provides strong ordering between sessions. (See security document).
         * </pre>
         */
        public Builder setSequence(long value) {
          bitField0_ |= 0x00000008;
          sequence_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 sequence = 4;</code>
         *
         * <pre>
         * the sequence of this request in this TCP connection. As long as this value is getting larger we have
         * strong ordering and replay prevention within a session. This combined with the time and connectionID
         * provides strong ordering between sessions. (See security document).
         * </pre>
         */
        public Builder clearSequence() {
          bitField0_ = (bitField0_ & ~0x00000008);
          sequence_ = 0L;
          onChanged();
          return this;
        }

        // optional int64 ackSequence = 6;
        private long ackSequence_ ;
        /**
         * <code>optional int64 ackSequence = 6;</code>
         *
         * <pre>
         *co-related sequence
         * </pre>
         */
        public boolean hasAckSequence() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int64 ackSequence = 6;</code>
         *
         * <pre>
         *co-related sequence
         * </pre>
         */
        public long getAckSequence() {
          return ackSequence_;
        }
        /**
         * <code>optional int64 ackSequence = 6;</code>
         *
         * <pre>
         *co-related sequence
         * </pre>
         */
        public Builder setAckSequence(long value) {
          bitField0_ |= 0x00000010;
          ackSequence_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 ackSequence = 6;</code>
         *
         * <pre>
         *co-related sequence
         * </pre>
         */
        public Builder clearAckSequence() {
          bitField0_ = (bitField0_ & ~0x00000010);
          ackSequence_ = 0L;
          onChanged();
          return this;
        }

        // optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;
        private com.seagate.kinetic.proto.Kinetic.Message.MessageType messageType_ = com.seagate.kinetic.proto.Kinetic.Message.MessageType.INVALID_MESSAGE_TYPE;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;</code>
         *
         * <pre>
         *operation code - put/get/delete/GetLog, etc.
         * </pre>
         */
        public boolean hasMessageType() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;</code>
         *
         * <pre>
         *operation code - put/get/delete/GetLog, etc.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.MessageType getMessageType() {
          return messageType_;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;</code>
         *
         * <pre>
         *operation code - put/get/delete/GetLog, etc.
         * </pre>
         */
        public Builder setMessageType(com.seagate.kinetic.proto.Kinetic.Message.MessageType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          messageType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 7;</code>
         *
         * <pre>
         *operation code - put/get/delete/GetLog, etc.
         * </pre>
         */
        public Builder clearMessageType() {
          bitField0_ = (bitField0_ & ~0x00000020);
          messageType_ = com.seagate.kinetic.proto.Kinetic.Message.MessageType.INVALID_MESSAGE_TYPE;
          onChanged();
          return this;
        }

        // optional int64 timeout = 9;
        private long timeout_ ;
        /**
         * <code>optional int64 timeout = 9;</code>
         *
         * <pre>
         * Request timeout (in ms). This is the amount of time that this request should take. If this timeout
         * is triggered, there are three possible results that can be returned.
         *   - SERVICE_BUSY meaning that the request was still on the queue waiting to be executed
         *   - EXPIRED meaning that a long running operation was stopped because the time expired.
         *   - DATA_ERROR meaning that the request was in process, but that the error recovery was not
         *          complete at the time that the time expired
         * </pre>
         */
        public boolean hasTimeout() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional int64 timeout = 9;</code>
         *
         * <pre>
         * Request timeout (in ms). This is the amount of time that this request should take. If this timeout
         * is triggered, there are three possible results that can be returned.
         *   - SERVICE_BUSY meaning that the request was still on the queue waiting to be executed
         *   - EXPIRED meaning that a long running operation was stopped because the time expired.
         *   - DATA_ERROR meaning that the request was in process, but that the error recovery was not
         *          complete at the time that the time expired
         * </pre>
         */
        public long getTimeout() {
          return timeout_;
        }
        /**
         * <code>optional int64 timeout = 9;</code>
         *
         * <pre>
         * Request timeout (in ms). This is the amount of time that this request should take. If this timeout
         * is triggered, there are three possible results that can be returned.
         *   - SERVICE_BUSY meaning that the request was still on the queue waiting to be executed
         *   - EXPIRED meaning that a long running operation was stopped because the time expired.
         *   - DATA_ERROR meaning that the request was in process, but that the error recovery was not
         *          complete at the time that the time expired
         * </pre>
         */
        public Builder setTimeout(long value) {
          bitField0_ |= 0x00000040;
          timeout_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 timeout = 9;</code>
         *
         * <pre>
         * Request timeout (in ms). This is the amount of time that this request should take. If this timeout
         * is triggered, there are three possible results that can be returned.
         *   - SERVICE_BUSY meaning that the request was still on the queue waiting to be executed
         *   - EXPIRED meaning that a long running operation was stopped because the time expired.
         *   - DATA_ERROR meaning that the request was in process, but that the error recovery was not
         *          complete at the time that the time expired
         * </pre>
         */
        public Builder clearTimeout() {
          bitField0_ = (bitField0_ & ~0x00000040);
          timeout_ = 0L;
          onChanged();
          return this;
        }

        // optional bool earlyExit = 10;
        private boolean earlyExit_ ;
        /**
         * <code>optional bool earlyExit = 10;</code>
         *
         * <pre>
         * If true, requests will not attempt multi revolution recoveries even if the timeout has not occurred.
         * In this case the result will be DATA_ERROR. To have the drive exhaust all possible error recovery, leave
         * this field off or set to false, and make sure that the timeout is set to be longer than any possible queue
         * time and error recovery time. On a disk drive, the maximum error recovery time could be seconds.
         * Once all possible data recovery operations are complete and have not succeeded, PERM_DATA_ERROR will be
         * returned.
         * </pre>
         */
        public boolean hasEarlyExit() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional bool earlyExit = 10;</code>
         *
         * <pre>
         * If true, requests will not attempt multi revolution recoveries even if the timeout has not occurred.
         * In this case the result will be DATA_ERROR. To have the drive exhaust all possible error recovery, leave
         * this field off or set to false, and make sure that the timeout is set to be longer than any possible queue
         * time and error recovery time. On a disk drive, the maximum error recovery time could be seconds.
         * Once all possible data recovery operations are complete and have not succeeded, PERM_DATA_ERROR will be
         * returned.
         * </pre>
         */
        public boolean getEarlyExit() {
          return earlyExit_;
        }
        /**
         * <code>optional bool earlyExit = 10;</code>
         *
         * <pre>
         * If true, requests will not attempt multi revolution recoveries even if the timeout has not occurred.
         * In this case the result will be DATA_ERROR. To have the drive exhaust all possible error recovery, leave
         * this field off or set to false, and make sure that the timeout is set to be longer than any possible queue
         * time and error recovery time. On a disk drive, the maximum error recovery time could be seconds.
         * Once all possible data recovery operations are complete and have not succeeded, PERM_DATA_ERROR will be
         * returned.
         * </pre>
         */
        public Builder setEarlyExit(boolean value) {
          bitField0_ |= 0x00000080;
          earlyExit_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool earlyExit = 10;</code>
         *
         * <pre>
         * If true, requests will not attempt multi revolution recoveries even if the timeout has not occurred.
         * In this case the result will be DATA_ERROR. To have the drive exhaust all possible error recovery, leave
         * this field off or set to false, and make sure that the timeout is set to be longer than any possible queue
         * time and error recovery time. On a disk drive, the maximum error recovery time could be seconds.
         * Once all possible data recovery operations are complete and have not succeeded, PERM_DATA_ERROR will be
         * returned.
         * </pre>
         */
        public Builder clearEarlyExit() {
          bitField0_ = (bitField0_ & ~0x00000080);
          earlyExit_ = false;
          onChanged();
          return this;
        }

        // optional bool backgroundScan = 11;
        private boolean backgroundScan_ ;
        /**
         * <code>optional bool backgroundScan = 11;</code>
         *
         * <pre>
         * A hint that this request is part of a background scan, this is a hint that can allow the drive
         * to do it's background read process on this record. This allows the drive not to do it's own
         * background scan.
         * </pre>
         */
        public boolean hasBackgroundScan() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional bool backgroundScan = 11;</code>
         *
         * <pre>
         * A hint that this request is part of a background scan, this is a hint that can allow the drive
         * to do it's background read process on this record. This allows the drive not to do it's own
         * background scan.
         * </pre>
         */
        public boolean getBackgroundScan() {
          return backgroundScan_;
        }
        /**
         * <code>optional bool backgroundScan = 11;</code>
         *
         * <pre>
         * A hint that this request is part of a background scan, this is a hint that can allow the drive
         * to do it's background read process on this record. This allows the drive not to do it's own
         * background scan.
         * </pre>
         */
        public Builder setBackgroundScan(boolean value) {
          bitField0_ |= 0x00000100;
          backgroundScan_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool backgroundScan = 11;</code>
         *
         * <pre>
         * A hint that this request is part of a background scan, this is a hint that can allow the drive
         * to do it's background read process on this record. This allows the drive not to do it's own
         * background scan.
         * </pre>
         */
        public Builder clearBackgroundScan() {
          bitField0_ = (bitField0_ & ~0x00000100);
          backgroundScan_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Header)
      }

      static {
        defaultInstance = new Header(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Header)
    }

    public interface BodyOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
       *
       * <pre>
       *key/value op
       * </pre>
       */
      boolean hasKeyValue();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
       *
       * <pre>
       *key/value op
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.KeyValue getKeyValue();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
       *
       * <pre>
       *key/value op
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.KeyValueOrBuilder getKeyValueOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.Range range = 2;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
       *
       * <pre>
       *range operation
       * </pre>
       */
      boolean hasRange();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
       *
       * <pre>
       *range operation
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Range getRange();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
       *
       * <pre>
       *range operation
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.RangeOrBuilder getRangeOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.Setup setup = 3;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
       *
       * <pre>
       *set up operation
       * </pre>
       */
      boolean hasSetup();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
       *
       * <pre>
       *set up operation
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Setup getSetup();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
       *
       * <pre>
       *set up operation
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.SetupOrBuilder getSetupOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
       *
       * <pre>
       * Peer to Peer operations.
       * </pre>
       */
      boolean hasP2POperation();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
       *
       * <pre>
       * Peer to Peer operations.
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.P2POperation getP2POperation();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
       *
       * <pre>
       * Peer to Peer operations.
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder getP2POperationOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
       *
       * <pre>
       *GetLog
       * </pre>
       */
      boolean hasGetLog();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
       *
       * <pre>
       *GetLog
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog getGetLog();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
       *
       * <pre>
       *GetLog
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLogOrBuilder getGetLogOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.Security security = 7;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
       *
       * <pre>
       *set up security
       * </pre>
       */
      boolean hasSecurity();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
       *
       * <pre>
       *set up security
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Security getSecurity();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
       *
       * <pre>
       *set up security
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.SecurityOrBuilder getSecurityOrBuilder();
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.Body}
     *
     * <pre>
     *message body
     * </pre>
     */
    public static final class Body extends
        com.google.protobuf.GeneratedMessage
        implements BodyOrBuilder {
      // Use Body.newBuilder() to construct.
      private Body(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Body(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Body defaultInstance;
      public static Body getDefaultInstance() {
        return defaultInstance;
      }

      public Body getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Body(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.seagate.kinetic.proto.Kinetic.Message.KeyValue.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = keyValue_.toBuilder();
                }
                keyValue_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.KeyValue.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(keyValue_);
                  keyValue_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                com.seagate.kinetic.proto.Kinetic.Message.Range.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = range_.toBuilder();
                }
                range_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Range.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(range_);
                  range_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 26: {
                com.seagate.kinetic.proto.Kinetic.Message.Setup.Builder subBuilder = null;
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                  subBuilder = setup_.toBuilder();
                }
                setup_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Setup.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(setup_);
                  setup_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000004;
                break;
              }
              case 34: {
                com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = p2POperation_.toBuilder();
                }
                p2POperation_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(p2POperation_);
                  p2POperation_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
              case 50: {
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = getLog_.toBuilder();
                }
                getLog_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(getLog_);
                  getLog_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
              case 58: {
                com.seagate.kinetic.proto.Kinetic.Message.Security.Builder subBuilder = null;
                if (((bitField0_ & 0x00000020) == 0x00000020)) {
                  subBuilder = security_.toBuilder();
                }
                security_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Security.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(security_);
                  security_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000020;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Body_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Body_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.Body.class, com.seagate.kinetic.proto.Kinetic.Message.Body.Builder.class);
      }

      public static com.google.protobuf.Parser<Body> PARSER =
          new com.google.protobuf.AbstractParser<Body>() {
        public Body parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Body(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Body> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;
      public static final int KEYVALUE_FIELD_NUMBER = 1;
      private com.seagate.kinetic.proto.Kinetic.Message.KeyValue keyValue_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
       *
       * <pre>
       *key/value op
       * </pre>
       */
      public boolean hasKeyValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
       *
       * <pre>
       *key/value op
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.KeyValue getKeyValue() {
        return keyValue_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
       *
       * <pre>
       *key/value op
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.KeyValueOrBuilder getKeyValueOrBuilder() {
        return keyValue_;
      }

      // optional .com.seagate.kinetic.proto.Message.Range range = 2;
      public static final int RANGE_FIELD_NUMBER = 2;
      private com.seagate.kinetic.proto.Kinetic.Message.Range range_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
       *
       * <pre>
       *range operation
       * </pre>
       */
      public boolean hasRange() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
       *
       * <pre>
       *range operation
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Range getRange() {
        return range_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
       *
       * <pre>
       *range operation
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.RangeOrBuilder getRangeOrBuilder() {
        return range_;
      }

      // optional .com.seagate.kinetic.proto.Message.Setup setup = 3;
      public static final int SETUP_FIELD_NUMBER = 3;
      private com.seagate.kinetic.proto.Kinetic.Message.Setup setup_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
       *
       * <pre>
       *set up operation
       * </pre>
       */
      public boolean hasSetup() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
       *
       * <pre>
       *set up operation
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Setup getSetup() {
        return setup_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
       *
       * <pre>
       *set up operation
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.SetupOrBuilder getSetupOrBuilder() {
        return setup_;
      }

      // optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;
      public static final int P2POPERATION_FIELD_NUMBER = 4;
      private com.seagate.kinetic.proto.Kinetic.Message.P2POperation p2POperation_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
       *
       * <pre>
       * Peer to Peer operations.
       * </pre>
       */
      public boolean hasP2POperation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
       *
       * <pre>
       * Peer to Peer operations.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.P2POperation getP2POperation() {
        return p2POperation_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
       *
       * <pre>
       * Peer to Peer operations.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder getP2POperationOrBuilder() {
        return p2POperation_;
      }

      // optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;
      public static final int GETLOG_FIELD_NUMBER = 6;
      private com.seagate.kinetic.proto.Kinetic.Message.GetLog getLog_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
       *
       * <pre>
       *GetLog
       * </pre>
       */
      public boolean hasGetLog() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
       *
       * <pre>
       *GetLog
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog getGetLog() {
        return getLog_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
       *
       * <pre>
       *GetLog
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLogOrBuilder getGetLogOrBuilder() {
        return getLog_;
      }

      // optional .com.seagate.kinetic.proto.Message.Security security = 7;
      public static final int SECURITY_FIELD_NUMBER = 7;
      private com.seagate.kinetic.proto.Kinetic.Message.Security security_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
       *
       * <pre>
       *set up security
       * </pre>
       */
      public boolean hasSecurity() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
       *
       * <pre>
       *set up security
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Security getSecurity() {
        return security_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
       *
       * <pre>
       *set up security
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.SecurityOrBuilder getSecurityOrBuilder() {
        return security_;
      }

      private void initFields() {
        keyValue_ = com.seagate.kinetic.proto.Kinetic.Message.KeyValue.getDefaultInstance();
        range_ = com.seagate.kinetic.proto.Kinetic.Message.Range.getDefaultInstance();
        setup_ = com.seagate.kinetic.proto.Kinetic.Message.Setup.getDefaultInstance();
        p2POperation_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
        getLog_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.getDefaultInstance();
        security_ = com.seagate.kinetic.proto.Kinetic.Message.Security.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, keyValue_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(2, range_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeMessage(3, setup_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(4, p2POperation_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(6, getLog_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeMessage(7, security_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, keyValue_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, range_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, setup_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, p2POperation_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, getLog_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, security_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Body parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Body prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.Body}
       *
       * <pre>
       *message body
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.BodyOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Body_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Body_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.Body.class, com.seagate.kinetic.proto.Kinetic.Message.Body.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.Body.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getKeyValueFieldBuilder();
            getRangeFieldBuilder();
            getSetupFieldBuilder();
            getP2POperationFieldBuilder();
            getGetLogFieldBuilder();
            getSecurityFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (keyValueBuilder_ == null) {
            keyValue_ = com.seagate.kinetic.proto.Kinetic.Message.KeyValue.getDefaultInstance();
          } else {
            keyValueBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (rangeBuilder_ == null) {
            range_ = com.seagate.kinetic.proto.Kinetic.Message.Range.getDefaultInstance();
          } else {
            rangeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          if (setupBuilder_ == null) {
            setup_ = com.seagate.kinetic.proto.Kinetic.Message.Setup.getDefaultInstance();
          } else {
            setupBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          if (p2POperationBuilder_ == null) {
            p2POperation_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
          } else {
            p2POperationBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          if (getLogBuilder_ == null) {
            getLog_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.getDefaultInstance();
          } else {
            getLogBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          if (securityBuilder_ == null) {
            security_ = com.seagate.kinetic.proto.Kinetic.Message.Security.getDefaultInstance();
          } else {
            securityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Body_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Body getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.Body.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Body build() {
          com.seagate.kinetic.proto.Kinetic.Message.Body result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Body buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.Body result = new com.seagate.kinetic.proto.Kinetic.Message.Body(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (keyValueBuilder_ == null) {
            result.keyValue_ = keyValue_;
          } else {
            result.keyValue_ = keyValueBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          if (rangeBuilder_ == null) {
            result.range_ = range_;
          } else {
            result.range_ = rangeBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          if (setupBuilder_ == null) {
            result.setup_ = setup_;
          } else {
            result.setup_ = setupBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          if (p2POperationBuilder_ == null) {
            result.p2POperation_ = p2POperation_;
          } else {
            result.p2POperation_ = p2POperationBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          if (getLogBuilder_ == null) {
            result.getLog_ = getLog_;
          } else {
            result.getLog_ = getLogBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          if (securityBuilder_ == null) {
            result.security_ = security_;
          } else {
            result.security_ = securityBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Body) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Body)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Body other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.Body.getDefaultInstance()) return this;
          if (other.hasKeyValue()) {
            mergeKeyValue(other.getKeyValue());
          }
          if (other.hasRange()) {
            mergeRange(other.getRange());
          }
          if (other.hasSetup()) {
            mergeSetup(other.getSetup());
          }
          if (other.hasP2POperation()) {
            mergeP2POperation(other.getP2POperation());
          }
          if (other.hasGetLog()) {
            mergeGetLog(other.getGetLog());
          }
          if (other.hasSecurity()) {
            mergeSecurity(other.getSecurity());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.Body parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Body) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;
        private com.seagate.kinetic.proto.Kinetic.Message.KeyValue keyValue_ = com.seagate.kinetic.proto.Kinetic.Message.KeyValue.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.KeyValue, com.seagate.kinetic.proto.Kinetic.Message.KeyValue.Builder, com.seagate.kinetic.proto.Kinetic.Message.KeyValueOrBuilder> keyValueBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        public boolean hasKeyValue() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.KeyValue getKeyValue() {
          if (keyValueBuilder_ == null) {
            return keyValue_;
          } else {
            return keyValueBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        public Builder setKeyValue(com.seagate.kinetic.proto.Kinetic.Message.KeyValue value) {
          if (keyValueBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            keyValue_ = value;
            onChanged();
          } else {
            keyValueBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        public Builder setKeyValue(
            com.seagate.kinetic.proto.Kinetic.Message.KeyValue.Builder builderForValue) {
          if (keyValueBuilder_ == null) {
            keyValue_ = builderForValue.build();
            onChanged();
          } else {
            keyValueBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        public Builder mergeKeyValue(com.seagate.kinetic.proto.Kinetic.Message.KeyValue value) {
          if (keyValueBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                keyValue_ != com.seagate.kinetic.proto.Kinetic.Message.KeyValue.getDefaultInstance()) {
              keyValue_ =
                com.seagate.kinetic.proto.Kinetic.Message.KeyValue.newBuilder(keyValue_).mergeFrom(value).buildPartial();
            } else {
              keyValue_ = value;
            }
            onChanged();
          } else {
            keyValueBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        public Builder clearKeyValue() {
          if (keyValueBuilder_ == null) {
            keyValue_ = com.seagate.kinetic.proto.Kinetic.Message.KeyValue.getDefaultInstance();
            onChanged();
          } else {
            keyValueBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.KeyValue.Builder getKeyValueBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getKeyValueFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.KeyValueOrBuilder getKeyValueOrBuilder() {
          if (keyValueBuilder_ != null) {
            return keyValueBuilder_.getMessageOrBuilder();
          } else {
            return keyValue_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.KeyValue keyValue = 1;</code>
         *
         * <pre>
         *key/value op
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.KeyValue, com.seagate.kinetic.proto.Kinetic.Message.KeyValue.Builder, com.seagate.kinetic.proto.Kinetic.Message.KeyValueOrBuilder> 
            getKeyValueFieldBuilder() {
          if (keyValueBuilder_ == null) {
            keyValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.KeyValue, com.seagate.kinetic.proto.Kinetic.Message.KeyValue.Builder, com.seagate.kinetic.proto.Kinetic.Message.KeyValueOrBuilder>(
                    keyValue_,
                    getParentForChildren(),
                    isClean());
            keyValue_ = null;
          }
          return keyValueBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.Range range = 2;
        private com.seagate.kinetic.proto.Kinetic.Message.Range range_ = com.seagate.kinetic.proto.Kinetic.Message.Range.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Range, com.seagate.kinetic.proto.Kinetic.Message.Range.Builder, com.seagate.kinetic.proto.Kinetic.Message.RangeOrBuilder> rangeBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        public boolean hasRange() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Range getRange() {
          if (rangeBuilder_ == null) {
            return range_;
          } else {
            return rangeBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        public Builder setRange(com.seagate.kinetic.proto.Kinetic.Message.Range value) {
          if (rangeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            range_ = value;
            onChanged();
          } else {
            rangeBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        public Builder setRange(
            com.seagate.kinetic.proto.Kinetic.Message.Range.Builder builderForValue) {
          if (rangeBuilder_ == null) {
            range_ = builderForValue.build();
            onChanged();
          } else {
            rangeBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        public Builder mergeRange(com.seagate.kinetic.proto.Kinetic.Message.Range value) {
          if (rangeBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002) &&
                range_ != com.seagate.kinetic.proto.Kinetic.Message.Range.getDefaultInstance()) {
              range_ =
                com.seagate.kinetic.proto.Kinetic.Message.Range.newBuilder(range_).mergeFrom(value).buildPartial();
            } else {
              range_ = value;
            }
            onChanged();
          } else {
            rangeBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000002;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        public Builder clearRange() {
          if (rangeBuilder_ == null) {
            range_ = com.seagate.kinetic.proto.Kinetic.Message.Range.getDefaultInstance();
            onChanged();
          } else {
            rangeBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Range.Builder getRangeBuilder() {
          bitField0_ |= 0x00000002;
          onChanged();
          return getRangeFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.RangeOrBuilder getRangeOrBuilder() {
          if (rangeBuilder_ != null) {
            return rangeBuilder_.getMessageOrBuilder();
          } else {
            return range_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Range range = 2;</code>
         *
         * <pre>
         *range operation
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Range, com.seagate.kinetic.proto.Kinetic.Message.Range.Builder, com.seagate.kinetic.proto.Kinetic.Message.RangeOrBuilder> 
            getRangeFieldBuilder() {
          if (rangeBuilder_ == null) {
            rangeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.Range, com.seagate.kinetic.proto.Kinetic.Message.Range.Builder, com.seagate.kinetic.proto.Kinetic.Message.RangeOrBuilder>(
                    range_,
                    getParentForChildren(),
                    isClean());
            range_ = null;
          }
          return rangeBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.Setup setup = 3;
        private com.seagate.kinetic.proto.Kinetic.Message.Setup setup_ = com.seagate.kinetic.proto.Kinetic.Message.Setup.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Setup, com.seagate.kinetic.proto.Kinetic.Message.Setup.Builder, com.seagate.kinetic.proto.Kinetic.Message.SetupOrBuilder> setupBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        public boolean hasSetup() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Setup getSetup() {
          if (setupBuilder_ == null) {
            return setup_;
          } else {
            return setupBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        public Builder setSetup(com.seagate.kinetic.proto.Kinetic.Message.Setup value) {
          if (setupBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            setup_ = value;
            onChanged();
          } else {
            setupBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        public Builder setSetup(
            com.seagate.kinetic.proto.Kinetic.Message.Setup.Builder builderForValue) {
          if (setupBuilder_ == null) {
            setup_ = builderForValue.build();
            onChanged();
          } else {
            setupBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        public Builder mergeSetup(com.seagate.kinetic.proto.Kinetic.Message.Setup value) {
          if (setupBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004) &&
                setup_ != com.seagate.kinetic.proto.Kinetic.Message.Setup.getDefaultInstance()) {
              setup_ =
                com.seagate.kinetic.proto.Kinetic.Message.Setup.newBuilder(setup_).mergeFrom(value).buildPartial();
            } else {
              setup_ = value;
            }
            onChanged();
          } else {
            setupBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000004;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        public Builder clearSetup() {
          if (setupBuilder_ == null) {
            setup_ = com.seagate.kinetic.proto.Kinetic.Message.Setup.getDefaultInstance();
            onChanged();
          } else {
            setupBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Setup.Builder getSetupBuilder() {
          bitField0_ |= 0x00000004;
          onChanged();
          return getSetupFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.SetupOrBuilder getSetupOrBuilder() {
          if (setupBuilder_ != null) {
            return setupBuilder_.getMessageOrBuilder();
          } else {
            return setup_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Setup setup = 3;</code>
         *
         * <pre>
         *set up operation
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Setup, com.seagate.kinetic.proto.Kinetic.Message.Setup.Builder, com.seagate.kinetic.proto.Kinetic.Message.SetupOrBuilder> 
            getSetupFieldBuilder() {
          if (setupBuilder_ == null) {
            setupBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.Setup, com.seagate.kinetic.proto.Kinetic.Message.Setup.Builder, com.seagate.kinetic.proto.Kinetic.Message.SetupOrBuilder>(
                    setup_,
                    getParentForChildren(),
                    isClean());
            setup_ = null;
          }
          return setupBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;
        private com.seagate.kinetic.proto.Kinetic.Message.P2POperation p2POperation_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder> p2POperationBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        public boolean hasP2POperation() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation getP2POperation() {
          if (p2POperationBuilder_ == null) {
            return p2POperation_;
          } else {
            return p2POperationBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        public Builder setP2POperation(com.seagate.kinetic.proto.Kinetic.Message.P2POperation value) {
          if (p2POperationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            p2POperation_ = value;
            onChanged();
          } else {
            p2POperationBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        public Builder setP2POperation(
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder builderForValue) {
          if (p2POperationBuilder_ == null) {
            p2POperation_ = builderForValue.build();
            onChanged();
          } else {
            p2POperationBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        public Builder mergeP2POperation(com.seagate.kinetic.proto.Kinetic.Message.P2POperation value) {
          if (p2POperationBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                p2POperation_ != com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance()) {
              p2POperation_ =
                com.seagate.kinetic.proto.Kinetic.Message.P2POperation.newBuilder(p2POperation_).mergeFrom(value).buildPartial();
            } else {
              p2POperation_ = value;
            }
            onChanged();
          } else {
            p2POperationBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        public Builder clearP2POperation() {
          if (p2POperationBuilder_ == null) {
            p2POperation_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
            onChanged();
          } else {
            p2POperationBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder getP2POperationBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getP2POperationFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder getP2POperationOrBuilder() {
          if (p2POperationBuilder_ != null) {
            return p2POperationBuilder_.getMessageOrBuilder();
          } else {
            return p2POperation_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pOperation = 4;</code>
         *
         * <pre>
         * Peer to Peer operations.
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder> 
            getP2POperationFieldBuilder() {
          if (p2POperationBuilder_ == null) {
            p2POperationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.P2POperation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder>(
                    p2POperation_,
                    getParentForChildren(),
                    isClean());
            p2POperation_ = null;
          }
          return p2POperationBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;
        private com.seagate.kinetic.proto.Kinetic.Message.GetLog getLog_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLogOrBuilder> getLogBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        public boolean hasGetLog() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog getGetLog() {
          if (getLogBuilder_ == null) {
            return getLog_;
          } else {
            return getLogBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        public Builder setGetLog(com.seagate.kinetic.proto.Kinetic.Message.GetLog value) {
          if (getLogBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            getLog_ = value;
            onChanged();
          } else {
            getLogBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        public Builder setGetLog(
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Builder builderForValue) {
          if (getLogBuilder_ == null) {
            getLog_ = builderForValue.build();
            onChanged();
          } else {
            getLogBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        public Builder mergeGetLog(com.seagate.kinetic.proto.Kinetic.Message.GetLog value) {
          if (getLogBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                getLog_ != com.seagate.kinetic.proto.Kinetic.Message.GetLog.getDefaultInstance()) {
              getLog_ =
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.newBuilder(getLog_).mergeFrom(value).buildPartial();
            } else {
              getLog_ = value;
            }
            onChanged();
          } else {
            getLogBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        public Builder clearGetLog() {
          if (getLogBuilder_ == null) {
            getLog_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.getDefaultInstance();
            onChanged();
          } else {
            getLogBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Builder getGetLogBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getGetLogFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLogOrBuilder getGetLogOrBuilder() {
          if (getLogBuilder_ != null) {
            return getLogBuilder_.getMessageOrBuilder();
          } else {
            return getLog_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog getLog = 6;</code>
         *
         * <pre>
         *GetLog
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLogOrBuilder> 
            getGetLogFieldBuilder() {
          if (getLogBuilder_ == null) {
            getLogBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.GetLog, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLogOrBuilder>(
                    getLog_,
                    getParentForChildren(),
                    isClean());
            getLog_ = null;
          }
          return getLogBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.Security security = 7;
        private com.seagate.kinetic.proto.Kinetic.Message.Security security_ = com.seagate.kinetic.proto.Kinetic.Message.Security.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Security, com.seagate.kinetic.proto.Kinetic.Message.Security.Builder, com.seagate.kinetic.proto.Kinetic.Message.SecurityOrBuilder> securityBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        public boolean hasSecurity() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security getSecurity() {
          if (securityBuilder_ == null) {
            return security_;
          } else {
            return securityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        public Builder setSecurity(com.seagate.kinetic.proto.Kinetic.Message.Security value) {
          if (securityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            security_ = value;
            onChanged();
          } else {
            securityBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        public Builder setSecurity(
            com.seagate.kinetic.proto.Kinetic.Message.Security.Builder builderForValue) {
          if (securityBuilder_ == null) {
            security_ = builderForValue.build();
            onChanged();
          } else {
            securityBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        public Builder mergeSecurity(com.seagate.kinetic.proto.Kinetic.Message.Security value) {
          if (securityBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020) &&
                security_ != com.seagate.kinetic.proto.Kinetic.Message.Security.getDefaultInstance()) {
              security_ =
                com.seagate.kinetic.proto.Kinetic.Message.Security.newBuilder(security_).mergeFrom(value).buildPartial();
            } else {
              security_ = value;
            }
            onChanged();
          } else {
            securityBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000020;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        public Builder clearSecurity() {
          if (securityBuilder_ == null) {
            security_ = com.seagate.kinetic.proto.Kinetic.Message.Security.getDefaultInstance();
            onChanged();
          } else {
            securityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.Builder getSecurityBuilder() {
          bitField0_ |= 0x00000020;
          onChanged();
          return getSecurityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.SecurityOrBuilder getSecurityOrBuilder() {
          if (securityBuilder_ != null) {
            return securityBuilder_.getMessageOrBuilder();
          } else {
            return security_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security security = 7;</code>
         *
         * <pre>
         *set up security
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Security, com.seagate.kinetic.proto.Kinetic.Message.Security.Builder, com.seagate.kinetic.proto.Kinetic.Message.SecurityOrBuilder> 
            getSecurityFieldBuilder() {
          if (securityBuilder_ == null) {
            securityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.Security, com.seagate.kinetic.proto.Kinetic.Message.Security.Builder, com.seagate.kinetic.proto.Kinetic.Message.SecurityOrBuilder>(
                    security_,
                    getParentForChildren(),
                    isClean());
            security_ = null;
          }
          return securityBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Body)
      }

      static {
        defaultInstance = new Body(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Body)
    }

    public interface StatusOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;</code>
       *
       * <pre>
       *status code
       * </pre>
       */
      boolean hasCode();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;</code>
       *
       * <pre>
       *status code
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode getCode();

      // optional string statusMessage = 2;
      /**
       * <code>optional string statusMessage = 2;</code>
       *
       * <pre>
       *status message
       * </pre>
       */
      boolean hasStatusMessage();
      /**
       * <code>optional string statusMessage = 2;</code>
       *
       * <pre>
       *status message
       * </pre>
       */
      java.lang.String getStatusMessage();
      /**
       * <code>optional string statusMessage = 2;</code>
       *
       * <pre>
       *status message
       * </pre>
       */
      com.google.protobuf.ByteString
          getStatusMessageBytes();

      // optional bytes detailedMessage = 3;
      /**
       * <code>optional bytes detailedMessage = 3;</code>
       *
       * <pre>
       *optional information comes with status
       * </pre>
       */
      boolean hasDetailedMessage();
      /**
       * <code>optional bytes detailedMessage = 3;</code>
       *
       * <pre>
       *optional information comes with status
       * </pre>
       */
      com.google.protobuf.ByteString getDetailedMessage();
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.Status}
     *
     * <pre>
     *operation status
     * </pre>
     */
    public static final class Status extends
        com.google.protobuf.GeneratedMessage
        implements StatusOrBuilder {
      // Use Status.newBuilder() to construct.
      private Status(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Status(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Status defaultInstance;
      public static Status getDefaultInstance() {
        return defaultInstance;
      }

      public Status getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Status(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode value = com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  bitField0_ |= 0x00000001;
                  code_ = value;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                statusMessage_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                detailedMessage_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Status_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Status_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.Status.class, com.seagate.kinetic.proto.Kinetic.Message.Status.Builder.class);
      }

      public static com.google.protobuf.Parser<Status> PARSER =
          new com.google.protobuf.AbstractParser<Status>() {
        public Status parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Status(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Status> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code com.seagate.kinetic.proto.Message.Status.StatusCode}
       *
       * <pre>
       *enum of status code
       * </pre>
       */
      public enum StatusCode
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>INVALID_STATUS_CODE = -1;</code>
         *
         * <pre>
         * Must come first, so default is invalid
         * </pre>
         */
        INVALID_STATUS_CODE(0, -1),
        /**
         * <code>NOT_ATTEMPTED = 0;</code>
         *
         * <pre>
         *  for a P2P operation, there was a reason the list was incomplete. This is for items
         * that were not attempted.
         * </pre>
         */
        NOT_ATTEMPTED(1, 0),
        /**
         * <code>SUCCESS = 1;</code>
         */
        SUCCESS(2, 1),
        /**
         * <code>HMAC_FAILURE = 2;</code>
         */
        HMAC_FAILURE(3, 2),
        /**
         * <code>NOT_AUTHORIZED = 3;</code>
         */
        NOT_AUTHORIZED(4, 3),
        /**
         * <code>VERSION_FAILURE = 4;</code>
         */
        VERSION_FAILURE(5, 4),
        /**
         * <code>INTERNAL_ERROR = 5;</code>
         */
        INTERNAL_ERROR(6, 5),
        /**
         * <code>HEADER_REQUIRED = 6;</code>
         */
        HEADER_REQUIRED(7, 6),
        /**
         * <code>NOT_FOUND = 7;</code>
         */
        NOT_FOUND(8, 7),
        /**
         * <code>VERSION_MISMATCH = 8;</code>
         */
        VERSION_MISMATCH(9, 8),
        /**
         * <code>SERVICE_BUSY = 9;</code>
         *
         * <pre>
         * If there are too many requests in the device at this time, requests
         * will be rejected with this error message. The common response is to
         * wait and retry the operation with an exponential back-off.
         * </pre>
         */
        SERVICE_BUSY(10, 9),
        /**
         * <code>EXPIRED = 10;</code>
         *
         * <pre>
         * A long operation was started and a timeout happened mid operation. This
         * does not imply a failure.
         * </pre>
         */
        EXPIRED(11, 10),
        /**
         * <code>DATA_ERROR = 11;</code>
         *
         * <pre>
         * A data error happened and either earlyExit was set or the timeout happened.
         * </pre>
         */
        DATA_ERROR(12, 11),
        /**
         * <code>PERM_DATA_ERROR = 12;</code>
         *
         * <pre>
         * A data error happened and all possible error recovery operations have been
         * performed. There is no value to trying this again. If the system has the ability
         * to determine the correct information, writing the data again can get rid
         * </pre>
         */
        PERM_DATA_ERROR(13, 12),
        /**
         * <code>REMOTE_CONNECTION_ERROR = 13;</code>
         *
         * <pre>
         * A TCP connection to the remote peer failed. This is only for the P2P Operation
         * </pre>
         */
        REMOTE_CONNECTION_ERROR(14, 13),
        /**
         * <code>NO_SPACE = 14;</code>
         *
         * <pre>
         * When the drive is full, it returns this error. The background scrubbing may free space,
         * so this error may go away
         * </pre>
         */
        NO_SPACE(15, 14),
        /**
         * <code>NO_SUCH_HMAC_ALGORITHM = 15;</code>
         *
         * <pre>
         * In the set security, an HmacAlgorithm was specified as Unknown or there is a protocol
         * version mis-match
         * </pre>
         */
        NO_SUCH_HMAC_ALGORITHM(16, 15),
        /**
         * <code>INVALID_REQUEST = 16;</code>
         *
         * <pre>
         * The request is not valid. Subsequent attempts with the same request will return the same code.
         * Examples: GET does not specify keyValue message, GETKEYRANGE operation does not specify startKey, etc
         * </pre>
         */
        INVALID_REQUEST(17, 16),
        /**
         * <code>NESTED_OPERATION_ERRORS = 17;</code>
         *
         * <pre>
         * For P2P Requests, the operation was executed successfully but some nested operations
         * did not succeed. This indicates that callers should review the status of nested operations.
         * This status should only be used in the Command &gt; Status, not in the Status messages
         * of nested P2POperations
         * </pre>
         */
        NESTED_OPERATION_ERRORS(18, 17),
        ;

        /**
         * <code>INVALID_STATUS_CODE = -1;</code>
         *
         * <pre>
         * Must come first, so default is invalid
         * </pre>
         */
        public static final int INVALID_STATUS_CODE_VALUE = -1;
        /**
         * <code>NOT_ATTEMPTED = 0;</code>
         *
         * <pre>
         *  for a P2P operation, there was a reason the list was incomplete. This is for items
         * that were not attempted.
         * </pre>
         */
        public static final int NOT_ATTEMPTED_VALUE = 0;
        /**
         * <code>SUCCESS = 1;</code>
         */
        public static final int SUCCESS_VALUE = 1;
        /**
         * <code>HMAC_FAILURE = 2;</code>
         */
        public static final int HMAC_FAILURE_VALUE = 2;
        /**
         * <code>NOT_AUTHORIZED = 3;</code>
         */
        public static final int NOT_AUTHORIZED_VALUE = 3;
        /**
         * <code>VERSION_FAILURE = 4;</code>
         */
        public static final int VERSION_FAILURE_VALUE = 4;
        /**
         * <code>INTERNAL_ERROR = 5;</code>
         */
        public static final int INTERNAL_ERROR_VALUE = 5;
        /**
         * <code>HEADER_REQUIRED = 6;</code>
         */
        public static final int HEADER_REQUIRED_VALUE = 6;
        /**
         * <code>NOT_FOUND = 7;</code>
         */
        public static final int NOT_FOUND_VALUE = 7;
        /**
         * <code>VERSION_MISMATCH = 8;</code>
         */
        public static final int VERSION_MISMATCH_VALUE = 8;
        /**
         * <code>SERVICE_BUSY = 9;</code>
         *
         * <pre>
         * If there are too many requests in the device at this time, requests
         * will be rejected with this error message. The common response is to
         * wait and retry the operation with an exponential back-off.
         * </pre>
         */
        public static final int SERVICE_BUSY_VALUE = 9;
        /**
         * <code>EXPIRED = 10;</code>
         *
         * <pre>
         * A long operation was started and a timeout happened mid operation. This
         * does not imply a failure.
         * </pre>
         */
        public static final int EXPIRED_VALUE = 10;
        /**
         * <code>DATA_ERROR = 11;</code>
         *
         * <pre>
         * A data error happened and either earlyExit was set or the timeout happened.
         * </pre>
         */
        public static final int DATA_ERROR_VALUE = 11;
        /**
         * <code>PERM_DATA_ERROR = 12;</code>
         *
         * <pre>
         * A data error happened and all possible error recovery operations have been
         * performed. There is no value to trying this again. If the system has the ability
         * to determine the correct information, writing the data again can get rid
         * </pre>
         */
        public static final int PERM_DATA_ERROR_VALUE = 12;
        /**
         * <code>REMOTE_CONNECTION_ERROR = 13;</code>
         *
         * <pre>
         * A TCP connection to the remote peer failed. This is only for the P2P Operation
         * </pre>
         */
        public static final int REMOTE_CONNECTION_ERROR_VALUE = 13;
        /**
         * <code>NO_SPACE = 14;</code>
         *
         * <pre>
         * When the drive is full, it returns this error. The background scrubbing may free space,
         * so this error may go away
         * </pre>
         */
        public static final int NO_SPACE_VALUE = 14;
        /**
         * <code>NO_SUCH_HMAC_ALGORITHM = 15;</code>
         *
         * <pre>
         * In the set security, an HmacAlgorithm was specified as Unknown or there is a protocol
         * version mis-match
         * </pre>
         */
        public static final int NO_SUCH_HMAC_ALGORITHM_VALUE = 15;
        /**
         * <code>INVALID_REQUEST = 16;</code>
         *
         * <pre>
         * The request is not valid. Subsequent attempts with the same request will return the same code.
         * Examples: GET does not specify keyValue message, GETKEYRANGE operation does not specify startKey, etc
         * </pre>
         */
        public static final int INVALID_REQUEST_VALUE = 16;
        /**
         * <code>NESTED_OPERATION_ERRORS = 17;</code>
         *
         * <pre>
         * For P2P Requests, the operation was executed successfully but some nested operations
         * did not succeed. This indicates that callers should review the status of nested operations.
         * This status should only be used in the Command &gt; Status, not in the Status messages
         * of nested P2POperations
         * </pre>
         */
        public static final int NESTED_OPERATION_ERRORS_VALUE = 17;


        public final int getNumber() { return value; }

        public static StatusCode valueOf(int value) {
          switch (value) {
            case -1: return INVALID_STATUS_CODE;
            case 0: return NOT_ATTEMPTED;
            case 1: return SUCCESS;
            case 2: return HMAC_FAILURE;
            case 3: return NOT_AUTHORIZED;
            case 4: return VERSION_FAILURE;
            case 5: return INTERNAL_ERROR;
            case 6: return HEADER_REQUIRED;
            case 7: return NOT_FOUND;
            case 8: return VERSION_MISMATCH;
            case 9: return SERVICE_BUSY;
            case 10: return EXPIRED;
            case 11: return DATA_ERROR;
            case 12: return PERM_DATA_ERROR;
            case 13: return REMOTE_CONNECTION_ERROR;
            case 14: return NO_SPACE;
            case 15: return NO_SUCH_HMAC_ALGORITHM;
            case 16: return INVALID_REQUEST;
            case 17: return NESTED_OPERATION_ERRORS;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<StatusCode>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<StatusCode>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<StatusCode>() {
                public StatusCode findValueByNumber(int number) {
                  return StatusCode.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.Message.Status.getDescriptor().getEnumTypes().get(0);
        }

        private static final StatusCode[] VALUES = values();

        public static StatusCode valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private StatusCode(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.seagate.kinetic.proto.Message.Status.StatusCode)
      }

      private int bitField0_;
      // optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;
      public static final int CODE_FIELD_NUMBER = 1;
      private com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode code_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;</code>
       *
       * <pre>
       *status code
       * </pre>
       */
      public boolean hasCode() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;</code>
       *
       * <pre>
       *status code
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode getCode() {
        return code_;
      }

      // optional string statusMessage = 2;
      public static final int STATUSMESSAGE_FIELD_NUMBER = 2;
      private java.lang.Object statusMessage_;
      /**
       * <code>optional string statusMessage = 2;</code>
       *
       * <pre>
       *status message
       * </pre>
       */
      public boolean hasStatusMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string statusMessage = 2;</code>
       *
       * <pre>
       *status message
       * </pre>
       */
      public java.lang.String getStatusMessage() {
        java.lang.Object ref = statusMessage_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            statusMessage_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string statusMessage = 2;</code>
       *
       * <pre>
       *status message
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStatusMessageBytes() {
        java.lang.Object ref = statusMessage_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          statusMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // optional bytes detailedMessage = 3;
      public static final int DETAILEDMESSAGE_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString detailedMessage_;
      /**
       * <code>optional bytes detailedMessage = 3;</code>
       *
       * <pre>
       *optional information comes with status
       * </pre>
       */
      public boolean hasDetailedMessage() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes detailedMessage = 3;</code>
       *
       * <pre>
       *optional information comes with status
       * </pre>
       */
      public com.google.protobuf.ByteString getDetailedMessage() {
        return detailedMessage_;
      }

      private void initFields() {
        code_ = com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode.INVALID_STATUS_CODE;
        statusMessage_ = "";
        detailedMessage_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeEnum(1, code_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getStatusMessageBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, detailedMessage_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, code_.getNumber());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getStatusMessageBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, detailedMessage_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Status parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Status prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.Status}
       *
       * <pre>
       *operation status
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Status_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Status_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.Status.class, com.seagate.kinetic.proto.Kinetic.Message.Status.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.Status.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          code_ = com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode.INVALID_STATUS_CODE;
          bitField0_ = (bitField0_ & ~0x00000001);
          statusMessage_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          detailedMessage_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Status_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Status getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Status build() {
          com.seagate.kinetic.proto.Kinetic.Message.Status result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Status buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.Status result = new com.seagate.kinetic.proto.Kinetic.Message.Status(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.code_ = code_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.statusMessage_ = statusMessage_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.detailedMessage_ = detailedMessage_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Status) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Status)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Status other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance()) return this;
          if (other.hasCode()) {
            setCode(other.getCode());
          }
          if (other.hasStatusMessage()) {
            bitField0_ |= 0x00000002;
            statusMessage_ = other.statusMessage_;
            onChanged();
          }
          if (other.hasDetailedMessage()) {
            setDetailedMessage(other.getDetailedMessage());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.Status parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Status) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;
        private com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode code_ = com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode.INVALID_STATUS_CODE;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;</code>
         *
         * <pre>
         *status code
         * </pre>
         */
        public boolean hasCode() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;</code>
         *
         * <pre>
         *status code
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode getCode() {
          return code_;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;</code>
         *
         * <pre>
         *status code
         * </pre>
         */
        public Builder setCode(com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000001;
          code_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status.StatusCode code = 1;</code>
         *
         * <pre>
         *status code
         * </pre>
         */
        public Builder clearCode() {
          bitField0_ = (bitField0_ & ~0x00000001);
          code_ = com.seagate.kinetic.proto.Kinetic.Message.Status.StatusCode.INVALID_STATUS_CODE;
          onChanged();
          return this;
        }

        // optional string statusMessage = 2;
        private java.lang.Object statusMessage_ = "";
        /**
         * <code>optional string statusMessage = 2;</code>
         *
         * <pre>
         *status message
         * </pre>
         */
        public boolean hasStatusMessage() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string statusMessage = 2;</code>
         *
         * <pre>
         *status message
         * </pre>
         */
        public java.lang.String getStatusMessage() {
          java.lang.Object ref = statusMessage_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            statusMessage_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string statusMessage = 2;</code>
         *
         * <pre>
         *status message
         * </pre>
         */
        public com.google.protobuf.ByteString
            getStatusMessageBytes() {
          java.lang.Object ref = statusMessage_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            statusMessage_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string statusMessage = 2;</code>
         *
         * <pre>
         *status message
         * </pre>
         */
        public Builder setStatusMessage(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          statusMessage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string statusMessage = 2;</code>
         *
         * <pre>
         *status message
         * </pre>
         */
        public Builder clearStatusMessage() {
          bitField0_ = (bitField0_ & ~0x00000002);
          statusMessage_ = getDefaultInstance().getStatusMessage();
          onChanged();
          return this;
        }
        /**
         * <code>optional string statusMessage = 2;</code>
         *
         * <pre>
         *status message
         * </pre>
         */
        public Builder setStatusMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          statusMessage_ = value;
          onChanged();
          return this;
        }

        // optional bytes detailedMessage = 3;
        private com.google.protobuf.ByteString detailedMessage_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes detailedMessage = 3;</code>
         *
         * <pre>
         *optional information comes with status
         * </pre>
         */
        public boolean hasDetailedMessage() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bytes detailedMessage = 3;</code>
         *
         * <pre>
         *optional information comes with status
         * </pre>
         */
        public com.google.protobuf.ByteString getDetailedMessage() {
          return detailedMessage_;
        }
        /**
         * <code>optional bytes detailedMessage = 3;</code>
         *
         * <pre>
         *optional information comes with status
         * </pre>
         */
        public Builder setDetailedMessage(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          detailedMessage_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes detailedMessage = 3;</code>
         *
         * <pre>
         *optional information comes with status
         * </pre>
         */
        public Builder clearDetailedMessage() {
          bitField0_ = (bitField0_ & ~0x00000004);
          detailedMessage_ = getDefaultInstance().getDetailedMessage();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Status)
      }

      static {
        defaultInstance = new Status(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Status)
    }

    public interface KeyValueOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional bytes newVersion = 2;
      /**
       * <code>optional bytes newVersion = 2;</code>
       *
       * <pre>
       * On a put or delete, this is the next version that the data will be. The version field is opaque to the
       * target. (See Atomic operations document)
       * </pre>
       */
      boolean hasNewVersion();
      /**
       * <code>optional bytes newVersion = 2;</code>
       *
       * <pre>
       * On a put or delete, this is the next version that the data will be. The version field is opaque to the
       * target. (See Atomic operations document)
       * </pre>
       */
      com.google.protobuf.ByteString getNewVersion();

      // optional bool force = 8;
      /**
       * <code>optional bool force = 8;</code>
       *
       * <pre>
       * On a put or delete, this forces the write to ignore the existing version of existing data (if it exists).
       * </pre>
       */
      boolean hasForce();
      /**
       * <code>optional bool force = 8;</code>
       *
       * <pre>
       * On a put or delete, this forces the write to ignore the existing version of existing data (if it exists).
       * </pre>
       */
      boolean getForce();

      // optional bytes key = 3;
      /**
       * <code>optional bytes key = 3;</code>
       *
       * <pre>
       *entry key
       * </pre>
       */
      boolean hasKey();
      /**
       * <code>optional bytes key = 3;</code>
       *
       * <pre>
       *entry key
       * </pre>
       */
      com.google.protobuf.ByteString getKey();

      // optional bytes dbVersion = 4;
      /**
       * <code>optional bytes dbVersion = 4;</code>
       *
       * <pre>
       *entry version in store
       * </pre>
       */
      boolean hasDbVersion();
      /**
       * <code>optional bytes dbVersion = 4;</code>
       *
       * <pre>
       *entry version in store
       * </pre>
       */
      com.google.protobuf.ByteString getDbVersion();

      // optional bytes tag = 5;
      /**
       * <code>optional bytes tag = 5;</code>
       *
       * <pre>
       * this is the integrity value of the data. This may or may not be in the clear, depending on the algorithm
       * used.
       * </pre>
       */
      boolean hasTag();
      /**
       * <code>optional bytes tag = 5;</code>
       *
       * <pre>
       * this is the integrity value of the data. This may or may not be in the clear, depending on the algorithm
       * used.
       * </pre>
       */
      com.google.protobuf.ByteString getTag();

      // optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;</code>
       *
       * <pre>
       * The following is for the protection of the data. If the data is protected with a hash or CRC, then
       * the algorithm will be negative. If the data protection algorithm is not a standard unkeyed algorithm
       * then  a positive number is used and the drive has no idea what the key is. See the discussion of
       * encrypted key/value store.(See security document).
       * </pre>
       */
      boolean hasAlgorithm();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;</code>
       *
       * <pre>
       * The following is for the protection of the data. If the data is protected with a hash or CRC, then
       * the algorithm will be negative. If the data protection algorithm is not a standard unkeyed algorithm
       * then  a positive number is used and the drive has no idea what the key is. See the discussion of
       * encrypted key/value store.(See security document).
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Algorithm getAlgorithm();

      // optional bool metadataOnly = 7;
      /**
       * <code>optional bool metadataOnly = 7;</code>
       *
       * <pre>
       * for read operations, this will get all the information about the value except for the
       * value itself. This is valuable for getting the integrity field or the version without also
       * having to get the data. If this field is not present, it is as if it is false. For
       * write or delete operations, if this is set, the command is rejected.
       * </pre>
       */
      boolean hasMetadataOnly();
      /**
       * <code>optional bool metadataOnly = 7;</code>
       *
       * <pre>
       * for read operations, this will get all the information about the value except for the
       * value itself. This is valuable for getting the integrity field or the version without also
       * having to get the data. If this field is not present, it is as if it is false. For
       * write or delete operations, if this is set, the command is rejected.
       * </pre>
       */
      boolean getMetadataOnly();

      // optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;</code>
       *
       * <pre>
       * Synchronization allows the puts and deletes to determine if they are to be
       * WRITETHROUGH: This request is made persistent before returning. This does not effect any other pending operations.
       * WRITEBACK: They can be made persistent when the drive chooses, or when a subsequent FLUSH is give to the drive.
       * FLUSH: All pending information that has not been written is pushed to the disk and the command that
       *    specifies FLUSH is written last and then returned. All WRITEBACK writes that have received ending
       *    status will be guaranteed to be written before the FLUSH operation is returned completed.
       * </pre>
       */
      boolean hasSynchronization();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;</code>
       *
       * <pre>
       * Synchronization allows the puts and deletes to determine if they are to be
       * WRITETHROUGH: This request is made persistent before returning. This does not effect any other pending operations.
       * WRITEBACK: They can be made persistent when the drive chooses, or when a subsequent FLUSH is give to the drive.
       * FLUSH: All pending information that has not been written is pushed to the disk and the command that
       *    specifies FLUSH is written last and then returned. All WRITEBACK writes that have received ending
       *    status will be guaranteed to be written before the FLUSH operation is returned completed.
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Synchronization getSynchronization();
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.KeyValue}
     *
     * <pre>
     *key/value entry operation
     * </pre>
     */
    public static final class KeyValue extends
        com.google.protobuf.GeneratedMessage
        implements KeyValueOrBuilder {
      // Use KeyValue.newBuilder() to construct.
      private KeyValue(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private KeyValue(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final KeyValue defaultInstance;
      public static KeyValue getDefaultInstance() {
        return defaultInstance;
      }

      public KeyValue getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private KeyValue(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 18: {
                bitField0_ |= 0x00000001;
                newVersion_ = input.readBytes();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                key_ = input.readBytes();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                dbVersion_ = input.readBytes();
                break;
              }
              case 42: {
                bitField0_ |= 0x00000010;
                tag_ = input.readBytes();
                break;
              }
              case 48: {
                int rawValue = input.readEnum();
                com.seagate.kinetic.proto.Kinetic.Message.Algorithm value = com.seagate.kinetic.proto.Kinetic.Message.Algorithm.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(6, rawValue);
                } else {
                  bitField0_ |= 0x00000020;
                  algorithm_ = value;
                }
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                metadataOnly_ = input.readBool();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000002;
                force_ = input.readBool();
                break;
              }
              case 72: {
                int rawValue = input.readEnum();
                com.seagate.kinetic.proto.Kinetic.Message.Synchronization value = com.seagate.kinetic.proto.Kinetic.Message.Synchronization.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(9, rawValue);
                } else {
                  bitField0_ |= 0x00000080;
                  synchronization_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_KeyValue_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_KeyValue_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.KeyValue.class, com.seagate.kinetic.proto.Kinetic.Message.KeyValue.Builder.class);
      }

      public static com.google.protobuf.Parser<KeyValue> PARSER =
          new com.google.protobuf.AbstractParser<KeyValue>() {
        public KeyValue parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new KeyValue(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<KeyValue> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional bytes newVersion = 2;
      public static final int NEWVERSION_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString newVersion_;
      /**
       * <code>optional bytes newVersion = 2;</code>
       *
       * <pre>
       * On a put or delete, this is the next version that the data will be. The version field is opaque to the
       * target. (See Atomic operations document)
       * </pre>
       */
      public boolean hasNewVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes newVersion = 2;</code>
       *
       * <pre>
       * On a put or delete, this is the next version that the data will be. The version field is opaque to the
       * target. (See Atomic operations document)
       * </pre>
       */
      public com.google.protobuf.ByteString getNewVersion() {
        return newVersion_;
      }

      // optional bool force = 8;
      public static final int FORCE_FIELD_NUMBER = 8;
      private boolean force_;
      /**
       * <code>optional bool force = 8;</code>
       *
       * <pre>
       * On a put or delete, this forces the write to ignore the existing version of existing data (if it exists).
       * </pre>
       */
      public boolean hasForce() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool force = 8;</code>
       *
       * <pre>
       * On a put or delete, this forces the write to ignore the existing version of existing data (if it exists).
       * </pre>
       */
      public boolean getForce() {
        return force_;
      }

      // optional bytes key = 3;
      public static final int KEY_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString key_;
      /**
       * <code>optional bytes key = 3;</code>
       *
       * <pre>
       *entry key
       * </pre>
       */
      public boolean hasKey() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes key = 3;</code>
       *
       * <pre>
       *entry key
       * </pre>
       */
      public com.google.protobuf.ByteString getKey() {
        return key_;
      }

      // optional bytes dbVersion = 4;
      public static final int DBVERSION_FIELD_NUMBER = 4;
      private com.google.protobuf.ByteString dbVersion_;
      /**
       * <code>optional bytes dbVersion = 4;</code>
       *
       * <pre>
       *entry version in store
       * </pre>
       */
      public boolean hasDbVersion() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes dbVersion = 4;</code>
       *
       * <pre>
       *entry version in store
       * </pre>
       */
      public com.google.protobuf.ByteString getDbVersion() {
        return dbVersion_;
      }

      // optional bytes tag = 5;
      public static final int TAG_FIELD_NUMBER = 5;
      private com.google.protobuf.ByteString tag_;
      /**
       * <code>optional bytes tag = 5;</code>
       *
       * <pre>
       * this is the integrity value of the data. This may or may not be in the clear, depending on the algorithm
       * used.
       * </pre>
       */
      public boolean hasTag() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bytes tag = 5;</code>
       *
       * <pre>
       * this is the integrity value of the data. This may or may not be in the clear, depending on the algorithm
       * used.
       * </pre>
       */
      public com.google.protobuf.ByteString getTag() {
        return tag_;
      }

      // optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;
      public static final int ALGORITHM_FIELD_NUMBER = 6;
      private com.seagate.kinetic.proto.Kinetic.Message.Algorithm algorithm_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;</code>
       *
       * <pre>
       * The following is for the protection of the data. If the data is protected with a hash or CRC, then
       * the algorithm will be negative. If the data protection algorithm is not a standard unkeyed algorithm
       * then  a positive number is used and the drive has no idea what the key is. See the discussion of
       * encrypted key/value store.(See security document).
       * </pre>
       */
      public boolean hasAlgorithm() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;</code>
       *
       * <pre>
       * The following is for the protection of the data. If the data is protected with a hash or CRC, then
       * the algorithm will be negative. If the data protection algorithm is not a standard unkeyed algorithm
       * then  a positive number is used and the drive has no idea what the key is. See the discussion of
       * encrypted key/value store.(See security document).
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Algorithm getAlgorithm() {
        return algorithm_;
      }

      // optional bool metadataOnly = 7;
      public static final int METADATAONLY_FIELD_NUMBER = 7;
      private boolean metadataOnly_;
      /**
       * <code>optional bool metadataOnly = 7;</code>
       *
       * <pre>
       * for read operations, this will get all the information about the value except for the
       * value itself. This is valuable for getting the integrity field or the version without also
       * having to get the data. If this field is not present, it is as if it is false. For
       * write or delete operations, if this is set, the command is rejected.
       * </pre>
       */
      public boolean hasMetadataOnly() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional bool metadataOnly = 7;</code>
       *
       * <pre>
       * for read operations, this will get all the information about the value except for the
       * value itself. This is valuable for getting the integrity field or the version without also
       * having to get the data. If this field is not present, it is as if it is false. For
       * write or delete operations, if this is set, the command is rejected.
       * </pre>
       */
      public boolean getMetadataOnly() {
        return metadataOnly_;
      }

      // optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;
      public static final int SYNCHRONIZATION_FIELD_NUMBER = 9;
      private com.seagate.kinetic.proto.Kinetic.Message.Synchronization synchronization_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;</code>
       *
       * <pre>
       * Synchronization allows the puts and deletes to determine if they are to be
       * WRITETHROUGH: This request is made persistent before returning. This does not effect any other pending operations.
       * WRITEBACK: They can be made persistent when the drive chooses, or when a subsequent FLUSH is give to the drive.
       * FLUSH: All pending information that has not been written is pushed to the disk and the command that
       *    specifies FLUSH is written last and then returned. All WRITEBACK writes that have received ending
       *    status will be guaranteed to be written before the FLUSH operation is returned completed.
       * </pre>
       */
      public boolean hasSynchronization() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;</code>
       *
       * <pre>
       * Synchronization allows the puts and deletes to determine if they are to be
       * WRITETHROUGH: This request is made persistent before returning. This does not effect any other pending operations.
       * WRITEBACK: They can be made persistent when the drive chooses, or when a subsequent FLUSH is give to the drive.
       * FLUSH: All pending information that has not been written is pushed to the disk and the command that
       *    specifies FLUSH is written last and then returned. All WRITEBACK writes that have received ending
       *    status will be guaranteed to be written before the FLUSH operation is returned completed.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Synchronization getSynchronization() {
        return synchronization_;
      }

      private void initFields() {
        newVersion_ = com.google.protobuf.ByteString.EMPTY;
        force_ = false;
        key_ = com.google.protobuf.ByteString.EMPTY;
        dbVersion_ = com.google.protobuf.ByteString.EMPTY;
        tag_ = com.google.protobuf.ByteString.EMPTY;
        algorithm_ = com.seagate.kinetic.proto.Kinetic.Message.Algorithm.INVALID_ALGORITHM;
        metadataOnly_ = false;
        synchronization_ = com.seagate.kinetic.proto.Kinetic.Message.Synchronization.INVALID_SYNCHRONIZATION;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(2, newVersion_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, key_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, dbVersion_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, tag_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeEnum(6, algorithm_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBool(7, metadataOnly_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(8, force_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeEnum(9, synchronization_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, newVersion_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, key_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, dbVersion_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, tag_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, algorithm_.getNumber());
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, metadataOnly_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, force_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(9, synchronization_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.KeyValue parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.KeyValue prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.KeyValue}
       *
       * <pre>
       *key/value entry operation
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.KeyValueOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_KeyValue_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_KeyValue_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.KeyValue.class, com.seagate.kinetic.proto.Kinetic.Message.KeyValue.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.KeyValue.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          newVersion_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          force_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          key_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          dbVersion_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          tag_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000010);
          algorithm_ = com.seagate.kinetic.proto.Kinetic.Message.Algorithm.INVALID_ALGORITHM;
          bitField0_ = (bitField0_ & ~0x00000020);
          metadataOnly_ = false;
          bitField0_ = (bitField0_ & ~0x00000040);
          synchronization_ = com.seagate.kinetic.proto.Kinetic.Message.Synchronization.INVALID_SYNCHRONIZATION;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_KeyValue_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.KeyValue getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.KeyValue.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.KeyValue build() {
          com.seagate.kinetic.proto.Kinetic.Message.KeyValue result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.KeyValue buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.KeyValue result = new com.seagate.kinetic.proto.Kinetic.Message.KeyValue(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.newVersion_ = newVersion_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.force_ = force_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.key_ = key_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.dbVersion_ = dbVersion_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.tag_ = tag_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.algorithm_ = algorithm_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.metadataOnly_ = metadataOnly_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.synchronization_ = synchronization_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.KeyValue) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.KeyValue)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.KeyValue other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.KeyValue.getDefaultInstance()) return this;
          if (other.hasNewVersion()) {
            setNewVersion(other.getNewVersion());
          }
          if (other.hasForce()) {
            setForce(other.getForce());
          }
          if (other.hasKey()) {
            setKey(other.getKey());
          }
          if (other.hasDbVersion()) {
            setDbVersion(other.getDbVersion());
          }
          if (other.hasTag()) {
            setTag(other.getTag());
          }
          if (other.hasAlgorithm()) {
            setAlgorithm(other.getAlgorithm());
          }
          if (other.hasMetadataOnly()) {
            setMetadataOnly(other.getMetadataOnly());
          }
          if (other.hasSynchronization()) {
            setSynchronization(other.getSynchronization());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.KeyValue parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.KeyValue) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional bytes newVersion = 2;
        private com.google.protobuf.ByteString newVersion_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes newVersion = 2;</code>
         *
         * <pre>
         * On a put or delete, this is the next version that the data will be. The version field is opaque to the
         * target. (See Atomic operations document)
         * </pre>
         */
        public boolean hasNewVersion() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bytes newVersion = 2;</code>
         *
         * <pre>
         * On a put or delete, this is the next version that the data will be. The version field is opaque to the
         * target. (See Atomic operations document)
         * </pre>
         */
        public com.google.protobuf.ByteString getNewVersion() {
          return newVersion_;
        }
        /**
         * <code>optional bytes newVersion = 2;</code>
         *
         * <pre>
         * On a put or delete, this is the next version that the data will be. The version field is opaque to the
         * target. (See Atomic operations document)
         * </pre>
         */
        public Builder setNewVersion(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          newVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes newVersion = 2;</code>
         *
         * <pre>
         * On a put or delete, this is the next version that the data will be. The version field is opaque to the
         * target. (See Atomic operations document)
         * </pre>
         */
        public Builder clearNewVersion() {
          bitField0_ = (bitField0_ & ~0x00000001);
          newVersion_ = getDefaultInstance().getNewVersion();
          onChanged();
          return this;
        }

        // optional bool force = 8;
        private boolean force_ ;
        /**
         * <code>optional bool force = 8;</code>
         *
         * <pre>
         * On a put or delete, this forces the write to ignore the existing version of existing data (if it exists).
         * </pre>
         */
        public boolean hasForce() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool force = 8;</code>
         *
         * <pre>
         * On a put or delete, this forces the write to ignore the existing version of existing data (if it exists).
         * </pre>
         */
        public boolean getForce() {
          return force_;
        }
        /**
         * <code>optional bool force = 8;</code>
         *
         * <pre>
         * On a put or delete, this forces the write to ignore the existing version of existing data (if it exists).
         * </pre>
         */
        public Builder setForce(boolean value) {
          bitField0_ |= 0x00000002;
          force_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool force = 8;</code>
         *
         * <pre>
         * On a put or delete, this forces the write to ignore the existing version of existing data (if it exists).
         * </pre>
         */
        public Builder clearForce() {
          bitField0_ = (bitField0_ & ~0x00000002);
          force_ = false;
          onChanged();
          return this;
        }

        // optional bytes key = 3;
        private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes key = 3;</code>
         *
         * <pre>
         *entry key
         * </pre>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bytes key = 3;</code>
         *
         * <pre>
         *entry key
         * </pre>
         */
        public com.google.protobuf.ByteString getKey() {
          return key_;
        }
        /**
         * <code>optional bytes key = 3;</code>
         *
         * <pre>
         *entry key
         * </pre>
         */
        public Builder setKey(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          key_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes key = 3;</code>
         *
         * <pre>
         *entry key
         * </pre>
         */
        public Builder clearKey() {
          bitField0_ = (bitField0_ & ~0x00000004);
          key_ = getDefaultInstance().getKey();
          onChanged();
          return this;
        }

        // optional bytes dbVersion = 4;
        private com.google.protobuf.ByteString dbVersion_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes dbVersion = 4;</code>
         *
         * <pre>
         *entry version in store
         * </pre>
         */
        public boolean hasDbVersion() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bytes dbVersion = 4;</code>
         *
         * <pre>
         *entry version in store
         * </pre>
         */
        public com.google.protobuf.ByteString getDbVersion() {
          return dbVersion_;
        }
        /**
         * <code>optional bytes dbVersion = 4;</code>
         *
         * <pre>
         *entry version in store
         * </pre>
         */
        public Builder setDbVersion(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          dbVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes dbVersion = 4;</code>
         *
         * <pre>
         *entry version in store
         * </pre>
         */
        public Builder clearDbVersion() {
          bitField0_ = (bitField0_ & ~0x00000008);
          dbVersion_ = getDefaultInstance().getDbVersion();
          onChanged();
          return this;
        }

        // optional bytes tag = 5;
        private com.google.protobuf.ByteString tag_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes tag = 5;</code>
         *
         * <pre>
         * this is the integrity value of the data. This may or may not be in the clear, depending on the algorithm
         * used.
         * </pre>
         */
        public boolean hasTag() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bytes tag = 5;</code>
         *
         * <pre>
         * this is the integrity value of the data. This may or may not be in the clear, depending on the algorithm
         * used.
         * </pre>
         */
        public com.google.protobuf.ByteString getTag() {
          return tag_;
        }
        /**
         * <code>optional bytes tag = 5;</code>
         *
         * <pre>
         * this is the integrity value of the data. This may or may not be in the clear, depending on the algorithm
         * used.
         * </pre>
         */
        public Builder setTag(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          tag_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes tag = 5;</code>
         *
         * <pre>
         * this is the integrity value of the data. This may or may not be in the clear, depending on the algorithm
         * used.
         * </pre>
         */
        public Builder clearTag() {
          bitField0_ = (bitField0_ & ~0x00000010);
          tag_ = getDefaultInstance().getTag();
          onChanged();
          return this;
        }

        // optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;
        private com.seagate.kinetic.proto.Kinetic.Message.Algorithm algorithm_ = com.seagate.kinetic.proto.Kinetic.Message.Algorithm.INVALID_ALGORITHM;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;</code>
         *
         * <pre>
         * The following is for the protection of the data. If the data is protected with a hash or CRC, then
         * the algorithm will be negative. If the data protection algorithm is not a standard unkeyed algorithm
         * then  a positive number is used and the drive has no idea what the key is. See the discussion of
         * encrypted key/value store.(See security document).
         * </pre>
         */
        public boolean hasAlgorithm() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;</code>
         *
         * <pre>
         * The following is for the protection of the data. If the data is protected with a hash or CRC, then
         * the algorithm will be negative. If the data protection algorithm is not a standard unkeyed algorithm
         * then  a positive number is used and the drive has no idea what the key is. See the discussion of
         * encrypted key/value store.(See security document).
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Algorithm getAlgorithm() {
          return algorithm_;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;</code>
         *
         * <pre>
         * The following is for the protection of the data. If the data is protected with a hash or CRC, then
         * the algorithm will be negative. If the data protection algorithm is not a standard unkeyed algorithm
         * then  a positive number is used and the drive has no idea what the key is. See the discussion of
         * encrypted key/value store.(See security document).
         * </pre>
         */
        public Builder setAlgorithm(com.seagate.kinetic.proto.Kinetic.Message.Algorithm value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          algorithm_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Algorithm algorithm = 6;</code>
         *
         * <pre>
         * The following is for the protection of the data. If the data is protected with a hash or CRC, then
         * the algorithm will be negative. If the data protection algorithm is not a standard unkeyed algorithm
         * then  a positive number is used and the drive has no idea what the key is. See the discussion of
         * encrypted key/value store.(See security document).
         * </pre>
         */
        public Builder clearAlgorithm() {
          bitField0_ = (bitField0_ & ~0x00000020);
          algorithm_ = com.seagate.kinetic.proto.Kinetic.Message.Algorithm.INVALID_ALGORITHM;
          onChanged();
          return this;
        }

        // optional bool metadataOnly = 7;
        private boolean metadataOnly_ ;
        /**
         * <code>optional bool metadataOnly = 7;</code>
         *
         * <pre>
         * for read operations, this will get all the information about the value except for the
         * value itself. This is valuable for getting the integrity field or the version without also
         * having to get the data. If this field is not present, it is as if it is false. For
         * write or delete operations, if this is set, the command is rejected.
         * </pre>
         */
        public boolean hasMetadataOnly() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bool metadataOnly = 7;</code>
         *
         * <pre>
         * for read operations, this will get all the information about the value except for the
         * value itself. This is valuable for getting the integrity field or the version without also
         * having to get the data. If this field is not present, it is as if it is false. For
         * write or delete operations, if this is set, the command is rejected.
         * </pre>
         */
        public boolean getMetadataOnly() {
          return metadataOnly_;
        }
        /**
         * <code>optional bool metadataOnly = 7;</code>
         *
         * <pre>
         * for read operations, this will get all the information about the value except for the
         * value itself. This is valuable for getting the integrity field or the version without also
         * having to get the data. If this field is not present, it is as if it is false. For
         * write or delete operations, if this is set, the command is rejected.
         * </pre>
         */
        public Builder setMetadataOnly(boolean value) {
          bitField0_ |= 0x00000040;
          metadataOnly_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool metadataOnly = 7;</code>
         *
         * <pre>
         * for read operations, this will get all the information about the value except for the
         * value itself. This is valuable for getting the integrity field or the version without also
         * having to get the data. If this field is not present, it is as if it is false. For
         * write or delete operations, if this is set, the command is rejected.
         * </pre>
         */
        public Builder clearMetadataOnly() {
          bitField0_ = (bitField0_ & ~0x00000040);
          metadataOnly_ = false;
          onChanged();
          return this;
        }

        // optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;
        private com.seagate.kinetic.proto.Kinetic.Message.Synchronization synchronization_ = com.seagate.kinetic.proto.Kinetic.Message.Synchronization.INVALID_SYNCHRONIZATION;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;</code>
         *
         * <pre>
         * Synchronization allows the puts and deletes to determine if they are to be
         * WRITETHROUGH: This request is made persistent before returning. This does not effect any other pending operations.
         * WRITEBACK: They can be made persistent when the drive chooses, or when a subsequent FLUSH is give to the drive.
         * FLUSH: All pending information that has not been written is pushed to the disk and the command that
         *    specifies FLUSH is written last and then returned. All WRITEBACK writes that have received ending
         *    status will be guaranteed to be written before the FLUSH operation is returned completed.
         * </pre>
         */
        public boolean hasSynchronization() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;</code>
         *
         * <pre>
         * Synchronization allows the puts and deletes to determine if they are to be
         * WRITETHROUGH: This request is made persistent before returning. This does not effect any other pending operations.
         * WRITEBACK: They can be made persistent when the drive chooses, or when a subsequent FLUSH is give to the drive.
         * FLUSH: All pending information that has not been written is pushed to the disk and the command that
         *    specifies FLUSH is written last and then returned. All WRITEBACK writes that have received ending
         *    status will be guaranteed to be written before the FLUSH operation is returned completed.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Synchronization getSynchronization() {
          return synchronization_;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;</code>
         *
         * <pre>
         * Synchronization allows the puts and deletes to determine if they are to be
         * WRITETHROUGH: This request is made persistent before returning. This does not effect any other pending operations.
         * WRITEBACK: They can be made persistent when the drive chooses, or when a subsequent FLUSH is give to the drive.
         * FLUSH: All pending information that has not been written is pushed to the disk and the command that
         *    specifies FLUSH is written last and then returned. All WRITEBACK writes that have received ending
         *    status will be guaranteed to be written before the FLUSH operation is returned completed.
         * </pre>
         */
        public Builder setSynchronization(com.seagate.kinetic.proto.Kinetic.Message.Synchronization value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000080;
          synchronization_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Synchronization synchronization = 9;</code>
         *
         * <pre>
         * Synchronization allows the puts and deletes to determine if they are to be
         * WRITETHROUGH: This request is made persistent before returning. This does not effect any other pending operations.
         * WRITEBACK: They can be made persistent when the drive chooses, or when a subsequent FLUSH is give to the drive.
         * FLUSH: All pending information that has not been written is pushed to the disk and the command that
         *    specifies FLUSH is written last and then returned. All WRITEBACK writes that have received ending
         *    status will be guaranteed to be written before the FLUSH operation is returned completed.
         * </pre>
         */
        public Builder clearSynchronization() {
          bitField0_ = (bitField0_ & ~0x00000080);
          synchronization_ = com.seagate.kinetic.proto.Kinetic.Message.Synchronization.INVALID_SYNCHRONIZATION;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.KeyValue)
      }

      static {
        defaultInstance = new KeyValue(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.KeyValue)
    }

    public interface RangeOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional bytes startKey = 1;
      /**
       * <code>optional bytes startKey = 1;</code>
       */
      boolean hasStartKey();
      /**
       * <code>optional bytes startKey = 1;</code>
       */
      com.google.protobuf.ByteString getStartKey();

      // optional bytes endKey = 2;
      /**
       * <code>optional bytes endKey = 2;</code>
       */
      boolean hasEndKey();
      /**
       * <code>optional bytes endKey = 2;</code>
       */
      com.google.protobuf.ByteString getEndKey();

      // optional bool startKeyInclusive = 3;
      /**
       * <code>optional bool startKeyInclusive = 3;</code>
       */
      boolean hasStartKeyInclusive();
      /**
       * <code>optional bool startKeyInclusive = 3;</code>
       */
      boolean getStartKeyInclusive();

      // optional bool endKeyInclusive = 4;
      /**
       * <code>optional bool endKeyInclusive = 4;</code>
       */
      boolean hasEndKeyInclusive();
      /**
       * <code>optional bool endKeyInclusive = 4;</code>
       */
      boolean getEndKeyInclusive();

      // optional int32 maxReturned = 5;
      /**
       * <code>optional int32 maxReturned = 5;</code>
       *
       * <pre>
       * The maximum number of keys returned
       * </pre>
       */
      boolean hasMaxReturned();
      /**
       * <code>optional int32 maxReturned = 5;</code>
       *
       * <pre>
       * The maximum number of keys returned
       * </pre>
       */
      int getMaxReturned();

      // optional bool reverse = 6;
      /**
       * <code>optional bool reverse = 6;</code>
       *
       * <pre>
       * The keys are searched for and returned in a reverse order. For instance
       * if the search is startKey="j", endKey="k", maxReturned=2,
       * reverse=true and the keys "k0", "k1", "k2" exist
       * the system will return "k2" and "k1" in that order.
       * </pre>
       */
      boolean hasReverse();
      /**
       * <code>optional bool reverse = 6;</code>
       *
       * <pre>
       * The keys are searched for and returned in a reverse order. For instance
       * if the search is startKey="j", endKey="k", maxReturned=2,
       * reverse=true and the keys "k0", "k1", "k2" exist
       * the system will return "k2" and "k1" in that order.
       * </pre>
       */
      boolean getReverse();

      // repeated bytes key = 8;
      /**
       * <code>repeated bytes key = 8;</code>
       *
       * <pre>
       *get range response .
       * </pre>
       */
      java.util.List<com.google.protobuf.ByteString> getKeyList();
      /**
       * <code>repeated bytes key = 8;</code>
       *
       * <pre>
       *get range response .
       * </pre>
       */
      int getKeyCount();
      /**
       * <code>repeated bytes key = 8;</code>
       *
       * <pre>
       *get range response .
       * </pre>
       */
      com.google.protobuf.ByteString getKey(int index);
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.Range}
     *
     * <pre>
     *key range op
     * </pre>
     */
    public static final class Range extends
        com.google.protobuf.GeneratedMessage
        implements RangeOrBuilder {
      // Use Range.newBuilder() to construct.
      private Range(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Range(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Range defaultInstance;
      public static Range getDefaultInstance() {
        return defaultInstance;
      }

      public Range getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Range(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                startKey_ = input.readBytes();
                break;
              }
              case 18: {
                bitField0_ |= 0x00000002;
                endKey_ = input.readBytes();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                startKeyInclusive_ = input.readBool();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                endKeyInclusive_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                maxReturned_ = input.readInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                reverse_ = input.readBool();
                break;
              }
              case 66: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  key_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                  mutable_bitField0_ |= 0x00000040;
                }
                key_.add(input.readBytes());
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            key_ = java.util.Collections.unmodifiableList(key_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Range_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Range_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.Range.class, com.seagate.kinetic.proto.Kinetic.Message.Range.Builder.class);
      }

      public static com.google.protobuf.Parser<Range> PARSER =
          new com.google.protobuf.AbstractParser<Range>() {
        public Range parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Range(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Range> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional bytes startKey = 1;
      public static final int STARTKEY_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString startKey_;
      /**
       * <code>optional bytes startKey = 1;</code>
       */
      public boolean hasStartKey() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional bytes startKey = 1;</code>
       */
      public com.google.protobuf.ByteString getStartKey() {
        return startKey_;
      }

      // optional bytes endKey = 2;
      public static final int ENDKEY_FIELD_NUMBER = 2;
      private com.google.protobuf.ByteString endKey_;
      /**
       * <code>optional bytes endKey = 2;</code>
       */
      public boolean hasEndKey() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes endKey = 2;</code>
       */
      public com.google.protobuf.ByteString getEndKey() {
        return endKey_;
      }

      // optional bool startKeyInclusive = 3;
      public static final int STARTKEYINCLUSIVE_FIELD_NUMBER = 3;
      private boolean startKeyInclusive_;
      /**
       * <code>optional bool startKeyInclusive = 3;</code>
       */
      public boolean hasStartKeyInclusive() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool startKeyInclusive = 3;</code>
       */
      public boolean getStartKeyInclusive() {
        return startKeyInclusive_;
      }

      // optional bool endKeyInclusive = 4;
      public static final int ENDKEYINCLUSIVE_FIELD_NUMBER = 4;
      private boolean endKeyInclusive_;
      /**
       * <code>optional bool endKeyInclusive = 4;</code>
       */
      public boolean hasEndKeyInclusive() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool endKeyInclusive = 4;</code>
       */
      public boolean getEndKeyInclusive() {
        return endKeyInclusive_;
      }

      // optional int32 maxReturned = 5;
      public static final int MAXRETURNED_FIELD_NUMBER = 5;
      private int maxReturned_;
      /**
       * <code>optional int32 maxReturned = 5;</code>
       *
       * <pre>
       * The maximum number of keys returned
       * </pre>
       */
      public boolean hasMaxReturned() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 maxReturned = 5;</code>
       *
       * <pre>
       * The maximum number of keys returned
       * </pre>
       */
      public int getMaxReturned() {
        return maxReturned_;
      }

      // optional bool reverse = 6;
      public static final int REVERSE_FIELD_NUMBER = 6;
      private boolean reverse_;
      /**
       * <code>optional bool reverse = 6;</code>
       *
       * <pre>
       * The keys are searched for and returned in a reverse order. For instance
       * if the search is startKey="j", endKey="k", maxReturned=2,
       * reverse=true and the keys "k0", "k1", "k2" exist
       * the system will return "k2" and "k1" in that order.
       * </pre>
       */
      public boolean hasReverse() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional bool reverse = 6;</code>
       *
       * <pre>
       * The keys are searched for and returned in a reverse order. For instance
       * if the search is startKey="j", endKey="k", maxReturned=2,
       * reverse=true and the keys "k0", "k1", "k2" exist
       * the system will return "k2" and "k1" in that order.
       * </pre>
       */
      public boolean getReverse() {
        return reverse_;
      }

      // repeated bytes key = 8;
      public static final int KEY_FIELD_NUMBER = 8;
      private java.util.List<com.google.protobuf.ByteString> key_;
      /**
       * <code>repeated bytes key = 8;</code>
       *
       * <pre>
       *get range response .
       * </pre>
       */
      public java.util.List<com.google.protobuf.ByteString>
          getKeyList() {
        return key_;
      }
      /**
       * <code>repeated bytes key = 8;</code>
       *
       * <pre>
       *get range response .
       * </pre>
       */
      public int getKeyCount() {
        return key_.size();
      }
      /**
       * <code>repeated bytes key = 8;</code>
       *
       * <pre>
       *get range response .
       * </pre>
       */
      public com.google.protobuf.ByteString getKey(int index) {
        return key_.get(index);
      }

      private void initFields() {
        startKey_ = com.google.protobuf.ByteString.EMPTY;
        endKey_ = com.google.protobuf.ByteString.EMPTY;
        startKeyInclusive_ = false;
        endKeyInclusive_ = false;
        maxReturned_ = 0;
        reverse_ = false;
        key_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, startKey_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, endKey_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, startKeyInclusive_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, endKeyInclusive_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeInt32(5, maxReturned_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, reverse_);
        }
        for (int i = 0; i < key_.size(); i++) {
          output.writeBytes(8, key_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, startKey_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, endKey_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, startKeyInclusive_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, endKeyInclusive_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, maxReturned_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, reverse_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < key_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(key_.get(i));
          }
          size += dataSize;
          size += 1 * getKeyList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Range parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Range prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.Range}
       *
       * <pre>
       *key range op
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.RangeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Range_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Range_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.Range.class, com.seagate.kinetic.proto.Kinetic.Message.Range.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.Range.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          startKey_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          endKey_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          startKeyInclusive_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          endKeyInclusive_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          maxReturned_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          reverse_ = false;
          bitField0_ = (bitField0_ & ~0x00000020);
          key_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Range_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Range getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.Range.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Range build() {
          com.seagate.kinetic.proto.Kinetic.Message.Range result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Range buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.Range result = new com.seagate.kinetic.proto.Kinetic.Message.Range(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.startKey_ = startKey_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.endKey_ = endKey_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.startKeyInclusive_ = startKeyInclusive_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.endKeyInclusive_ = endKeyInclusive_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.maxReturned_ = maxReturned_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.reverse_ = reverse_;
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            key_ = java.util.Collections.unmodifiableList(key_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.key_ = key_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Range) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Range)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Range other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.Range.getDefaultInstance()) return this;
          if (other.hasStartKey()) {
            setStartKey(other.getStartKey());
          }
          if (other.hasEndKey()) {
            setEndKey(other.getEndKey());
          }
          if (other.hasStartKeyInclusive()) {
            setStartKeyInclusive(other.getStartKeyInclusive());
          }
          if (other.hasEndKeyInclusive()) {
            setEndKeyInclusive(other.getEndKeyInclusive());
          }
          if (other.hasMaxReturned()) {
            setMaxReturned(other.getMaxReturned());
          }
          if (other.hasReverse()) {
            setReverse(other.getReverse());
          }
          if (!other.key_.isEmpty()) {
            if (key_.isEmpty()) {
              key_ = other.key_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureKeyIsMutable();
              key_.addAll(other.key_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.Range parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Range) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional bytes startKey = 1;
        private com.google.protobuf.ByteString startKey_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes startKey = 1;</code>
         */
        public boolean hasStartKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bytes startKey = 1;</code>
         */
        public com.google.protobuf.ByteString getStartKey() {
          return startKey_;
        }
        /**
         * <code>optional bytes startKey = 1;</code>
         */
        public Builder setStartKey(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          startKey_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes startKey = 1;</code>
         */
        public Builder clearStartKey() {
          bitField0_ = (bitField0_ & ~0x00000001);
          startKey_ = getDefaultInstance().getStartKey();
          onChanged();
          return this;
        }

        // optional bytes endKey = 2;
        private com.google.protobuf.ByteString endKey_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes endKey = 2;</code>
         */
        public boolean hasEndKey() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes endKey = 2;</code>
         */
        public com.google.protobuf.ByteString getEndKey() {
          return endKey_;
        }
        /**
         * <code>optional bytes endKey = 2;</code>
         */
        public Builder setEndKey(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          endKey_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes endKey = 2;</code>
         */
        public Builder clearEndKey() {
          bitField0_ = (bitField0_ & ~0x00000002);
          endKey_ = getDefaultInstance().getEndKey();
          onChanged();
          return this;
        }

        // optional bool startKeyInclusive = 3;
        private boolean startKeyInclusive_ ;
        /**
         * <code>optional bool startKeyInclusive = 3;</code>
         */
        public boolean hasStartKeyInclusive() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool startKeyInclusive = 3;</code>
         */
        public boolean getStartKeyInclusive() {
          return startKeyInclusive_;
        }
        /**
         * <code>optional bool startKeyInclusive = 3;</code>
         */
        public Builder setStartKeyInclusive(boolean value) {
          bitField0_ |= 0x00000004;
          startKeyInclusive_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool startKeyInclusive = 3;</code>
         */
        public Builder clearStartKeyInclusive() {
          bitField0_ = (bitField0_ & ~0x00000004);
          startKeyInclusive_ = false;
          onChanged();
          return this;
        }

        // optional bool endKeyInclusive = 4;
        private boolean endKeyInclusive_ ;
        /**
         * <code>optional bool endKeyInclusive = 4;</code>
         */
        public boolean hasEndKeyInclusive() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bool endKeyInclusive = 4;</code>
         */
        public boolean getEndKeyInclusive() {
          return endKeyInclusive_;
        }
        /**
         * <code>optional bool endKeyInclusive = 4;</code>
         */
        public Builder setEndKeyInclusive(boolean value) {
          bitField0_ |= 0x00000008;
          endKeyInclusive_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool endKeyInclusive = 4;</code>
         */
        public Builder clearEndKeyInclusive() {
          bitField0_ = (bitField0_ & ~0x00000008);
          endKeyInclusive_ = false;
          onChanged();
          return this;
        }

        // optional int32 maxReturned = 5;
        private int maxReturned_ ;
        /**
         * <code>optional int32 maxReturned = 5;</code>
         *
         * <pre>
         * The maximum number of keys returned
         * </pre>
         */
        public boolean hasMaxReturned() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional int32 maxReturned = 5;</code>
         *
         * <pre>
         * The maximum number of keys returned
         * </pre>
         */
        public int getMaxReturned() {
          return maxReturned_;
        }
        /**
         * <code>optional int32 maxReturned = 5;</code>
         *
         * <pre>
         * The maximum number of keys returned
         * </pre>
         */
        public Builder setMaxReturned(int value) {
          bitField0_ |= 0x00000010;
          maxReturned_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 maxReturned = 5;</code>
         *
         * <pre>
         * The maximum number of keys returned
         * </pre>
         */
        public Builder clearMaxReturned() {
          bitField0_ = (bitField0_ & ~0x00000010);
          maxReturned_ = 0;
          onChanged();
          return this;
        }

        // optional bool reverse = 6;
        private boolean reverse_ ;
        /**
         * <code>optional bool reverse = 6;</code>
         *
         * <pre>
         * The keys are searched for and returned in a reverse order. For instance
         * if the search is startKey="j", endKey="k", maxReturned=2,
         * reverse=true and the keys "k0", "k1", "k2" exist
         * the system will return "k2" and "k1" in that order.
         * </pre>
         */
        public boolean hasReverse() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional bool reverse = 6;</code>
         *
         * <pre>
         * The keys are searched for and returned in a reverse order. For instance
         * if the search is startKey="j", endKey="k", maxReturned=2,
         * reverse=true and the keys "k0", "k1", "k2" exist
         * the system will return "k2" and "k1" in that order.
         * </pre>
         */
        public boolean getReverse() {
          return reverse_;
        }
        /**
         * <code>optional bool reverse = 6;</code>
         *
         * <pre>
         * The keys are searched for and returned in a reverse order. For instance
         * if the search is startKey="j", endKey="k", maxReturned=2,
         * reverse=true and the keys "k0", "k1", "k2" exist
         * the system will return "k2" and "k1" in that order.
         * </pre>
         */
        public Builder setReverse(boolean value) {
          bitField0_ |= 0x00000020;
          reverse_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool reverse = 6;</code>
         *
         * <pre>
         * The keys are searched for and returned in a reverse order. For instance
         * if the search is startKey="j", endKey="k", maxReturned=2,
         * reverse=true and the keys "k0", "k1", "k2" exist
         * the system will return "k2" and "k1" in that order.
         * </pre>
         */
        public Builder clearReverse() {
          bitField0_ = (bitField0_ & ~0x00000020);
          reverse_ = false;
          onChanged();
          return this;
        }

        // repeated bytes key = 8;
        private java.util.List<com.google.protobuf.ByteString> key_ = java.util.Collections.emptyList();
        private void ensureKeyIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            key_ = new java.util.ArrayList<com.google.protobuf.ByteString>(key_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <code>repeated bytes key = 8;</code>
         *
         * <pre>
         *get range response .
         * </pre>
         */
        public java.util.List<com.google.protobuf.ByteString>
            getKeyList() {
          return java.util.Collections.unmodifiableList(key_);
        }
        /**
         * <code>repeated bytes key = 8;</code>
         *
         * <pre>
         *get range response .
         * </pre>
         */
        public int getKeyCount() {
          return key_.size();
        }
        /**
         * <code>repeated bytes key = 8;</code>
         *
         * <pre>
         *get range response .
         * </pre>
         */
        public com.google.protobuf.ByteString getKey(int index) {
          return key_.get(index);
        }
        /**
         * <code>repeated bytes key = 8;</code>
         *
         * <pre>
         *get range response .
         * </pre>
         */
        public Builder setKey(
            int index, com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
          key_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes key = 8;</code>
         *
         * <pre>
         *get range response .
         * </pre>
         */
        public Builder addKey(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
          key_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes key = 8;</code>
         *
         * <pre>
         *get range response .
         * </pre>
         */
        public Builder addAllKey(
            java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
          ensureKeyIsMutable();
          super.addAll(values, key_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes key = 8;</code>
         *
         * <pre>
         *get range response .
         * </pre>
         */
        public Builder clearKey() {
          key_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Range)
      }

      static {
        defaultInstance = new Range(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Range)
    }

    public interface SetupOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional int64 newClusterVersion = 1;
      /**
       * <code>optional int64 newClusterVersion = 1;</code>
       *
       * <pre>
       * The cluster version to be checked. The default if never set is 0.
       * If this is missing, it is assumed to be unchanged;
       * This is persistent between boots of the drive.
       * </pre>
       */
      boolean hasNewClusterVersion();
      /**
       * <code>optional int64 newClusterVersion = 1;</code>
       *
       * <pre>
       * The cluster version to be checked. The default if never set is 0.
       * If this is missing, it is assumed to be unchanged;
       * This is persistent between boots of the drive.
       * </pre>
       */
      long getNewClusterVersion();

      // optional bool instantSecureErase = 2;
      /**
       * <code>optional bool instantSecureErase = 2;</code>
       *
       * <pre>
       * setting this empties the entire database. If supported will also change
       * keys such that the data is destroyed even if the platters are removed and
       * put into a spin stand, the data is not recoverable.
       * </pre>
       */
      boolean hasInstantSecureErase();
      /**
       * <code>optional bool instantSecureErase = 2;</code>
       *
       * <pre>
       * setting this empties the entire database. If supported will also change
       * keys such that the data is destroyed even if the platters are removed and
       * put into a spin stand, the data is not recoverable.
       * </pre>
       */
      boolean getInstantSecureErase();

      // optional bytes setPin = 3;
      /**
       * <code>optional bytes setPin = 3;</code>
       *
       * <pre>
       * if set with instantSecureErase, this sets the Pin. If with pin, this changes the pin.
       * </pre>
       */
      boolean hasSetPin();
      /**
       * <code>optional bytes setPin = 3;</code>
       *
       * <pre>
       * if set with instantSecureErase, this sets the Pin. If with pin, this changes the pin.
       * </pre>
       */
      com.google.protobuf.ByteString getSetPin();

      // optional bytes pin = 4;
      /**
       * <code>optional bytes pin = 4;</code>
       *
       * <pre>
       * If the pin is set, then the pin needs to be set whenever the drive is
       * booted or powered up. Any drive getting a command, and the pin has not
       * been set, will be rejected.
       * </pre>
       */
      boolean hasPin();
      /**
       * <code>optional bytes pin = 4;</code>
       *
       * <pre>
       * If the pin is set, then the pin needs to be set whenever the drive is
       * booted or powered up. Any drive getting a command, and the pin has not
       * been set, will be rejected.
       * </pre>
       */
      com.google.protobuf.ByteString getPin();

      // optional bool firmwareDownload = 5;
      /**
       * <code>optional bool firmwareDownload = 5;</code>
       *
       * <pre>
       * indicates the presence of a firmware load in the data portion of this
       * message. The firmware is itself protected on its own for integrity,
       * authenticity, etc.
       * </pre>
       */
      boolean hasFirmwareDownload();
      /**
       * <code>optional bool firmwareDownload = 5;</code>
       *
       * <pre>
       * indicates the presence of a firmware load in the data portion of this
       * message. The firmware is itself protected on its own for integrity,
       * authenticity, etc.
       * </pre>
       */
      boolean getFirmwareDownload();
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.Setup}
     *
     * <pre>
     *set up operation.
     * </pre>
     */
    public static final class Setup extends
        com.google.protobuf.GeneratedMessage
        implements SetupOrBuilder {
      // Use Setup.newBuilder() to construct.
      private Setup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Setup(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Setup defaultInstance;
      public static Setup getDefaultInstance() {
        return defaultInstance;
      }

      public Setup getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Setup(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                newClusterVersion_ = input.readInt64();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                instantSecureErase_ = input.readBool();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                setPin_ = input.readBytes();
                break;
              }
              case 34: {
                bitField0_ |= 0x00000008;
                pin_ = input.readBytes();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                firmwareDownload_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Setup_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Setup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.Setup.class, com.seagate.kinetic.proto.Kinetic.Message.Setup.Builder.class);
      }

      public static com.google.protobuf.Parser<Setup> PARSER =
          new com.google.protobuf.AbstractParser<Setup>() {
        public Setup parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Setup(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Setup> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // optional int64 newClusterVersion = 1;
      public static final int NEWCLUSTERVERSION_FIELD_NUMBER = 1;
      private long newClusterVersion_;
      /**
       * <code>optional int64 newClusterVersion = 1;</code>
       *
       * <pre>
       * The cluster version to be checked. The default if never set is 0.
       * If this is missing, it is assumed to be unchanged;
       * This is persistent between boots of the drive.
       * </pre>
       */
      public boolean hasNewClusterVersion() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 newClusterVersion = 1;</code>
       *
       * <pre>
       * The cluster version to be checked. The default if never set is 0.
       * If this is missing, it is assumed to be unchanged;
       * This is persistent between boots of the drive.
       * </pre>
       */
      public long getNewClusterVersion() {
        return newClusterVersion_;
      }

      // optional bool instantSecureErase = 2;
      public static final int INSTANTSECUREERASE_FIELD_NUMBER = 2;
      private boolean instantSecureErase_;
      /**
       * <code>optional bool instantSecureErase = 2;</code>
       *
       * <pre>
       * setting this empties the entire database. If supported will also change
       * keys such that the data is destroyed even if the platters are removed and
       * put into a spin stand, the data is not recoverable.
       * </pre>
       */
      public boolean hasInstantSecureErase() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool instantSecureErase = 2;</code>
       *
       * <pre>
       * setting this empties the entire database. If supported will also change
       * keys such that the data is destroyed even if the platters are removed and
       * put into a spin stand, the data is not recoverable.
       * </pre>
       */
      public boolean getInstantSecureErase() {
        return instantSecureErase_;
      }

      // optional bytes setPin = 3;
      public static final int SETPIN_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString setPin_;
      /**
       * <code>optional bytes setPin = 3;</code>
       *
       * <pre>
       * if set with instantSecureErase, this sets the Pin. If with pin, this changes the pin.
       * </pre>
       */
      public boolean hasSetPin() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes setPin = 3;</code>
       *
       * <pre>
       * if set with instantSecureErase, this sets the Pin. If with pin, this changes the pin.
       * </pre>
       */
      public com.google.protobuf.ByteString getSetPin() {
        return setPin_;
      }

      // optional bytes pin = 4;
      public static final int PIN_FIELD_NUMBER = 4;
      private com.google.protobuf.ByteString pin_;
      /**
       * <code>optional bytes pin = 4;</code>
       *
       * <pre>
       * If the pin is set, then the pin needs to be set whenever the drive is
       * booted or powered up. Any drive getting a command, and the pin has not
       * been set, will be rejected.
       * </pre>
       */
      public boolean hasPin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bytes pin = 4;</code>
       *
       * <pre>
       * If the pin is set, then the pin needs to be set whenever the drive is
       * booted or powered up. Any drive getting a command, and the pin has not
       * been set, will be rejected.
       * </pre>
       */
      public com.google.protobuf.ByteString getPin() {
        return pin_;
      }

      // optional bool firmwareDownload = 5;
      public static final int FIRMWAREDOWNLOAD_FIELD_NUMBER = 5;
      private boolean firmwareDownload_;
      /**
       * <code>optional bool firmwareDownload = 5;</code>
       *
       * <pre>
       * indicates the presence of a firmware load in the data portion of this
       * message. The firmware is itself protected on its own for integrity,
       * authenticity, etc.
       * </pre>
       */
      public boolean hasFirmwareDownload() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional bool firmwareDownload = 5;</code>
       *
       * <pre>
       * indicates the presence of a firmware load in the data portion of this
       * message. The firmware is itself protected on its own for integrity,
       * authenticity, etc.
       * </pre>
       */
      public boolean getFirmwareDownload() {
        return firmwareDownload_;
      }

      private void initFields() {
        newClusterVersion_ = 0L;
        instantSecureErase_ = false;
        setPin_ = com.google.protobuf.ByteString.EMPTY;
        pin_ = com.google.protobuf.ByteString.EMPTY;
        firmwareDownload_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt64(1, newClusterVersion_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, instantSecureErase_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, setPin_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, pin_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, firmwareDownload_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, newClusterVersion_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, instantSecureErase_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, setPin_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, pin_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, firmwareDownload_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Setup parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Setup prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.Setup}
       *
       * <pre>
       *set up operation.
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.SetupOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Setup_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Setup_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.Setup.class, com.seagate.kinetic.proto.Kinetic.Message.Setup.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.Setup.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          newClusterVersion_ = 0L;
          bitField0_ = (bitField0_ & ~0x00000001);
          instantSecureErase_ = false;
          bitField0_ = (bitField0_ & ~0x00000002);
          setPin_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          pin_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000008);
          firmwareDownload_ = false;
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Setup_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Setup getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.Setup.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Setup build() {
          com.seagate.kinetic.proto.Kinetic.Message.Setup result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Setup buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.Setup result = new com.seagate.kinetic.proto.Kinetic.Message.Setup(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.newClusterVersion_ = newClusterVersion_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.instantSecureErase_ = instantSecureErase_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.setPin_ = setPin_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.pin_ = pin_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.firmwareDownload_ = firmwareDownload_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Setup) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Setup)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Setup other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.Setup.getDefaultInstance()) return this;
          if (other.hasNewClusterVersion()) {
            setNewClusterVersion(other.getNewClusterVersion());
          }
          if (other.hasInstantSecureErase()) {
            setInstantSecureErase(other.getInstantSecureErase());
          }
          if (other.hasSetPin()) {
            setSetPin(other.getSetPin());
          }
          if (other.hasPin()) {
            setPin(other.getPin());
          }
          if (other.hasFirmwareDownload()) {
            setFirmwareDownload(other.getFirmwareDownload());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.Setup parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Setup) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional int64 newClusterVersion = 1;
        private long newClusterVersion_ ;
        /**
         * <code>optional int64 newClusterVersion = 1;</code>
         *
         * <pre>
         * The cluster version to be checked. The default if never set is 0.
         * If this is missing, it is assumed to be unchanged;
         * This is persistent between boots of the drive.
         * </pre>
         */
        public boolean hasNewClusterVersion() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 newClusterVersion = 1;</code>
         *
         * <pre>
         * The cluster version to be checked. The default if never set is 0.
         * If this is missing, it is assumed to be unchanged;
         * This is persistent between boots of the drive.
         * </pre>
         */
        public long getNewClusterVersion() {
          return newClusterVersion_;
        }
        /**
         * <code>optional int64 newClusterVersion = 1;</code>
         *
         * <pre>
         * The cluster version to be checked. The default if never set is 0.
         * If this is missing, it is assumed to be unchanged;
         * This is persistent between boots of the drive.
         * </pre>
         */
        public Builder setNewClusterVersion(long value) {
          bitField0_ |= 0x00000001;
          newClusterVersion_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 newClusterVersion = 1;</code>
         *
         * <pre>
         * The cluster version to be checked. The default if never set is 0.
         * If this is missing, it is assumed to be unchanged;
         * This is persistent between boots of the drive.
         * </pre>
         */
        public Builder clearNewClusterVersion() {
          bitField0_ = (bitField0_ & ~0x00000001);
          newClusterVersion_ = 0L;
          onChanged();
          return this;
        }

        // optional bool instantSecureErase = 2;
        private boolean instantSecureErase_ ;
        /**
         * <code>optional bool instantSecureErase = 2;</code>
         *
         * <pre>
         * setting this empties the entire database. If supported will also change
         * keys such that the data is destroyed even if the platters are removed and
         * put into a spin stand, the data is not recoverable.
         * </pre>
         */
        public boolean hasInstantSecureErase() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bool instantSecureErase = 2;</code>
         *
         * <pre>
         * setting this empties the entire database. If supported will also change
         * keys such that the data is destroyed even if the platters are removed and
         * put into a spin stand, the data is not recoverable.
         * </pre>
         */
        public boolean getInstantSecureErase() {
          return instantSecureErase_;
        }
        /**
         * <code>optional bool instantSecureErase = 2;</code>
         *
         * <pre>
         * setting this empties the entire database. If supported will also change
         * keys such that the data is destroyed even if the platters are removed and
         * put into a spin stand, the data is not recoverable.
         * </pre>
         */
        public Builder setInstantSecureErase(boolean value) {
          bitField0_ |= 0x00000002;
          instantSecureErase_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool instantSecureErase = 2;</code>
         *
         * <pre>
         * setting this empties the entire database. If supported will also change
         * keys such that the data is destroyed even if the platters are removed and
         * put into a spin stand, the data is not recoverable.
         * </pre>
         */
        public Builder clearInstantSecureErase() {
          bitField0_ = (bitField0_ & ~0x00000002);
          instantSecureErase_ = false;
          onChanged();
          return this;
        }

        // optional bytes setPin = 3;
        private com.google.protobuf.ByteString setPin_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes setPin = 3;</code>
         *
         * <pre>
         * if set with instantSecureErase, this sets the Pin. If with pin, this changes the pin.
         * </pre>
         */
        public boolean hasSetPin() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bytes setPin = 3;</code>
         *
         * <pre>
         * if set with instantSecureErase, this sets the Pin. If with pin, this changes the pin.
         * </pre>
         */
        public com.google.protobuf.ByteString getSetPin() {
          return setPin_;
        }
        /**
         * <code>optional bytes setPin = 3;</code>
         *
         * <pre>
         * if set with instantSecureErase, this sets the Pin. If with pin, this changes the pin.
         * </pre>
         */
        public Builder setSetPin(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          setPin_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes setPin = 3;</code>
         *
         * <pre>
         * if set with instantSecureErase, this sets the Pin. If with pin, this changes the pin.
         * </pre>
         */
        public Builder clearSetPin() {
          bitField0_ = (bitField0_ & ~0x00000004);
          setPin_ = getDefaultInstance().getSetPin();
          onChanged();
          return this;
        }

        // optional bytes pin = 4;
        private com.google.protobuf.ByteString pin_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes pin = 4;</code>
         *
         * <pre>
         * If the pin is set, then the pin needs to be set whenever the drive is
         * booted or powered up. Any drive getting a command, and the pin has not
         * been set, will be rejected.
         * </pre>
         */
        public boolean hasPin() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bytes pin = 4;</code>
         *
         * <pre>
         * If the pin is set, then the pin needs to be set whenever the drive is
         * booted or powered up. Any drive getting a command, and the pin has not
         * been set, will be rejected.
         * </pre>
         */
        public com.google.protobuf.ByteString getPin() {
          return pin_;
        }
        /**
         * <code>optional bytes pin = 4;</code>
         *
         * <pre>
         * If the pin is set, then the pin needs to be set whenever the drive is
         * booted or powered up. Any drive getting a command, and the pin has not
         * been set, will be rejected.
         * </pre>
         */
        public Builder setPin(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          pin_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes pin = 4;</code>
         *
         * <pre>
         * If the pin is set, then the pin needs to be set whenever the drive is
         * booted or powered up. Any drive getting a command, and the pin has not
         * been set, will be rejected.
         * </pre>
         */
        public Builder clearPin() {
          bitField0_ = (bitField0_ & ~0x00000008);
          pin_ = getDefaultInstance().getPin();
          onChanged();
          return this;
        }

        // optional bool firmwareDownload = 5;
        private boolean firmwareDownload_ ;
        /**
         * <code>optional bool firmwareDownload = 5;</code>
         *
         * <pre>
         * indicates the presence of a firmware load in the data portion of this
         * message. The firmware is itself protected on its own for integrity,
         * authenticity, etc.
         * </pre>
         */
        public boolean hasFirmwareDownload() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional bool firmwareDownload = 5;</code>
         *
         * <pre>
         * indicates the presence of a firmware load in the data portion of this
         * message. The firmware is itself protected on its own for integrity,
         * authenticity, etc.
         * </pre>
         */
        public boolean getFirmwareDownload() {
          return firmwareDownload_;
        }
        /**
         * <code>optional bool firmwareDownload = 5;</code>
         *
         * <pre>
         * indicates the presence of a firmware load in the data portion of this
         * message. The firmware is itself protected on its own for integrity,
         * authenticity, etc.
         * </pre>
         */
        public Builder setFirmwareDownload(boolean value) {
          bitField0_ |= 0x00000010;
          firmwareDownload_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool firmwareDownload = 5;</code>
         *
         * <pre>
         * indicates the presence of a firmware load in the data portion of this
         * message. The firmware is itself protected on its own for integrity,
         * authenticity, etc.
         * </pre>
         */
        public Builder clearFirmwareDownload() {
          bitField0_ = (bitField0_ & ~0x00000010);
          firmwareDownload_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Setup)
      }

      static {
        defaultInstance = new Setup(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Setup)
    }

    public interface P2POperationOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
       *
       * <pre>
       * Describe the target machine
       * </pre>
       */
      boolean hasPeer();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
       *
       * <pre>
       * Describe the target machine
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer getPeer();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
       *
       * <pre>
       * Describe the target machine
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PeerOrBuilder getPeerOrBuilder();

      // repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      java.util.List<com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation> 
          getOperationList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation getOperation(int index);
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      int getOperationCount();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder> 
          getOperationOrBuilderList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder getOperationOrBuilder(
          int index);

      // optional bool allChildOperationsSucceeded = 3;
      /**
       * <code>optional bool allChildOperationsSucceeded = 3;</code>
       *
       * <pre>
       * Indicates whether all operations have Status SUCCESS
       * When false, clients should traverse Operation status codes to discover
       * error cases.
       * When true, no further error checking should be required.
       * </pre>
       */
      boolean hasAllChildOperationsSucceeded();
      /**
       * <code>optional bool allChildOperationsSucceeded = 3;</code>
       *
       * <pre>
       * Indicates whether all operations have Status SUCCESS
       * When false, clients should traverse Operation status codes to discover
       * error cases.
       * When true, no further error checking should be required.
       * </pre>
       */
      boolean getAllChildOperationsSucceeded();
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.P2POperation}
     *
     * <pre>
     * P2P operations allow drives to be able to send keys to other drives.
     * this is either a standalone command or added to a put command.
     * </pre>
     */
    public static final class P2POperation extends
        com.google.protobuf.GeneratedMessage
        implements P2POperationOrBuilder {
      // Use P2POperation.newBuilder() to construct.
      private P2POperation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private P2POperation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final P2POperation defaultInstance;
      public static P2POperation getDefaultInstance() {
        return defaultInstance;
      }

      public P2POperation getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private P2POperation(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = peer_.toBuilder();
                }
                peer_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(peer_);
                  peer_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  operation_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation>();
                  mutable_bitField0_ |= 0x00000002;
                }
                operation_.add(input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.PARSER, extensionRegistry));
                break;
              }
              case 24: {
                bitField0_ |= 0x00000002;
                allChildOperationsSucceeded_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            operation_ = java.util.Collections.unmodifiableList(operation_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.P2POperation.class, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder.class);
      }

      public static com.google.protobuf.Parser<P2POperation> PARSER =
          new com.google.protobuf.AbstractParser<P2POperation>() {
        public P2POperation parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new P2POperation(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<P2POperation> getParserForType() {
        return PARSER;
      }

      public interface OperationOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional bytes key = 3;
        /**
         * <code>optional bytes key = 3;</code>
         *
         * <pre>
         * the key of the entry to move
         * </pre>
         */
        boolean hasKey();
        /**
         * <code>optional bytes key = 3;</code>
         *
         * <pre>
         * the key of the entry to move
         * </pre>
         */
        com.google.protobuf.ByteString getKey();

        // optional bytes version = 4;
        /**
         * <code>optional bytes version = 4;</code>
         *
         * <pre>
         * the expected version number in the other machine
         * the version number will be the version in the stored entry.
         * </pre>
         */
        boolean hasVersion();
        /**
         * <code>optional bytes version = 4;</code>
         *
         * <pre>
         * the expected version number in the other machine
         * the version number will be the version in the stored entry.
         * </pre>
         */
        com.google.protobuf.ByteString getVersion();

        // optional bytes newKey = 5;
        /**
         * <code>optional bytes newKey = 5;</code>
         *
         * <pre>
         * to have the moved key have a different final key used.
         * </pre>
         */
        boolean hasNewKey();
        /**
         * <code>optional bytes newKey = 5;</code>
         *
         * <pre>
         * to have the moved key have a different final key used.
         * </pre>
         */
        com.google.protobuf.ByteString getNewKey();

        // optional bool force = 6;
        /**
         * <code>optional bool force = 6;</code>
         *
         * <pre>
         * force the write ignoring the current key version.
         * </pre>
         */
        boolean hasForce();
        /**
         * <code>optional bool force = 6;</code>
         *
         * <pre>
         * force the write ignoring the current key version.
         * </pre>
         */
        boolean getForce();

        // optional .com.seagate.kinetic.proto.Message.Status status = 7;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
         *
         * <pre>
         * returned status
         * </pre>
         */
        boolean hasStatus();
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
         *
         * <pre>
         * returned status
         * </pre>
         */
        com.seagate.kinetic.proto.Kinetic.Message.Status getStatus();
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
         *
         * <pre>
         * returned status
         * </pre>
         */
        com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder getStatusOrBuilder();

        // optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
         *
         * <pre>
         * an operation to add to this put operation. THis allows the
         * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
         * back to the client.
         * </pre>
         */
        boolean hasP2Pop();
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
         *
         * <pre>
         * an operation to add to this put operation. THis allows the
         * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
         * back to the client.
         * </pre>
         */
        com.seagate.kinetic.proto.Kinetic.Message.P2POperation getP2Pop();
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
         *
         * <pre>
         * an operation to add to this put operation. THis allows the
         * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
         * back to the client.
         * </pre>
         */
        com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder getP2PopOrBuilder();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.P2POperation.Operation}
       */
      public static final class Operation extends
          com.google.protobuf.GeneratedMessage
          implements OperationOrBuilder {
        // Use Operation.newBuilder() to construct.
        private Operation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Operation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Operation defaultInstance;
        public static Operation getDefaultInstance() {
          return defaultInstance;
        }

        public Operation getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Operation(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 26: {
                  bitField0_ |= 0x00000001;
                  key_ = input.readBytes();
                  break;
                }
                case 34: {
                  bitField0_ |= 0x00000002;
                  version_ = input.readBytes();
                  break;
                }
                case 42: {
                  bitField0_ |= 0x00000004;
                  newKey_ = input.readBytes();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000008;
                  force_ = input.readBool();
                  break;
                }
                case 58: {
                  com.seagate.kinetic.proto.Kinetic.Message.Status.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    subBuilder = status_.toBuilder();
                  }
                  status_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Status.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(status_);
                    status_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000010;
                  break;
                }
                case 66: {
                  com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000020) == 0x00000020)) {
                    subBuilder = p2Pop_.toBuilder();
                  }
                  p2Pop_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PARSER, extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(p2Pop_);
                    p2Pop_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000020;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.class, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder.class);
        }

        public static com.google.protobuf.Parser<Operation> PARSER =
            new com.google.protobuf.AbstractParser<Operation>() {
          public Operation parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Operation(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Operation> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional bytes key = 3;
        public static final int KEY_FIELD_NUMBER = 3;
        private com.google.protobuf.ByteString key_;
        /**
         * <code>optional bytes key = 3;</code>
         *
         * <pre>
         * the key of the entry to move
         * </pre>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bytes key = 3;</code>
         *
         * <pre>
         * the key of the entry to move
         * </pre>
         */
        public com.google.protobuf.ByteString getKey() {
          return key_;
        }

        // optional bytes version = 4;
        public static final int VERSION_FIELD_NUMBER = 4;
        private com.google.protobuf.ByteString version_;
        /**
         * <code>optional bytes version = 4;</code>
         *
         * <pre>
         * the expected version number in the other machine
         * the version number will be the version in the stored entry.
         * </pre>
         */
        public boolean hasVersion() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes version = 4;</code>
         *
         * <pre>
         * the expected version number in the other machine
         * the version number will be the version in the stored entry.
         * </pre>
         */
        public com.google.protobuf.ByteString getVersion() {
          return version_;
        }

        // optional bytes newKey = 5;
        public static final int NEWKEY_FIELD_NUMBER = 5;
        private com.google.protobuf.ByteString newKey_;
        /**
         * <code>optional bytes newKey = 5;</code>
         *
         * <pre>
         * to have the moved key have a different final key used.
         * </pre>
         */
        public boolean hasNewKey() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bytes newKey = 5;</code>
         *
         * <pre>
         * to have the moved key have a different final key used.
         * </pre>
         */
        public com.google.protobuf.ByteString getNewKey() {
          return newKey_;
        }

        // optional bool force = 6;
        public static final int FORCE_FIELD_NUMBER = 6;
        private boolean force_;
        /**
         * <code>optional bool force = 6;</code>
         *
         * <pre>
         * force the write ignoring the current key version.
         * </pre>
         */
        public boolean hasForce() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bool force = 6;</code>
         *
         * <pre>
         * force the write ignoring the current key version.
         * </pre>
         */
        public boolean getForce() {
          return force_;
        }

        // optional .com.seagate.kinetic.proto.Message.Status status = 7;
        public static final int STATUS_FIELD_NUMBER = 7;
        private com.seagate.kinetic.proto.Kinetic.Message.Status status_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
         *
         * <pre>
         * returned status
         * </pre>
         */
        public boolean hasStatus() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
         *
         * <pre>
         * returned status
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Status getStatus() {
          return status_;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
         *
         * <pre>
         * returned status
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder getStatusOrBuilder() {
          return status_;
        }

        // optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;
        public static final int P2POP_FIELD_NUMBER = 8;
        private com.seagate.kinetic.proto.Kinetic.Message.P2POperation p2Pop_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
         *
         * <pre>
         * an operation to add to this put operation. THis allows the
         * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
         * back to the client.
         * </pre>
         */
        public boolean hasP2Pop() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
         *
         * <pre>
         * an operation to add to this put operation. THis allows the
         * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
         * back to the client.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation getP2Pop() {
          return p2Pop_;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
         *
         * <pre>
         * an operation to add to this put operation. THis allows the
         * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
         * back to the client.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder getP2PopOrBuilder() {
          return p2Pop_;
        }

        private void initFields() {
          key_ = com.google.protobuf.ByteString.EMPTY;
          version_ = com.google.protobuf.ByteString.EMPTY;
          newKey_ = com.google.protobuf.ByteString.EMPTY;
          force_ = false;
          status_ = com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
          p2Pop_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(3, key_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(4, version_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(5, newKey_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeBool(6, force_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeMessage(7, status_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeMessage(8, p2Pop_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(3, key_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(4, version_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(5, newKey_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(6, force_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(7, status_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(8, p2Pop_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.P2POperation.Operation}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.class, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getStatusFieldBuilder();
              getP2PopFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            key_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000001);
            version_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000002);
            newKey_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000004);
            force_ = false;
            bitField0_ = (bitField0_ & ~0x00000008);
            if (statusBuilder_ == null) {
              status_ = com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
            } else {
              statusBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000010);
            if (p2PopBuilder_ == null) {
              p2Pop_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
            } else {
              p2PopBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000020);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation build() {
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation result = new com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.key_ = key_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.version_ = version_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.newKey_ = newKey_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.force_ = force_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            if (statusBuilder_ == null) {
              result.status_ = status_;
            } else {
              result.status_ = statusBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
              to_bitField0_ |= 0x00000020;
            }
            if (p2PopBuilder_ == null) {
              result.p2Pop_ = p2Pop_;
            } else {
              result.p2Pop_ = p2PopBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.getDefaultInstance()) return this;
            if (other.hasKey()) {
              setKey(other.getKey());
            }
            if (other.hasVersion()) {
              setVersion(other.getVersion());
            }
            if (other.hasNewKey()) {
              setNewKey(other.getNewKey());
            }
            if (other.hasForce()) {
              setForce(other.getForce());
            }
            if (other.hasStatus()) {
              mergeStatus(other.getStatus());
            }
            if (other.hasP2Pop()) {
              mergeP2Pop(other.getP2Pop());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional bytes key = 3;
          private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes key = 3;</code>
           *
           * <pre>
           * the key of the entry to move
           * </pre>
           */
          public boolean hasKey() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional bytes key = 3;</code>
           *
           * <pre>
           * the key of the entry to move
           * </pre>
           */
          public com.google.protobuf.ByteString getKey() {
            return key_;
          }
          /**
           * <code>optional bytes key = 3;</code>
           *
           * <pre>
           * the key of the entry to move
           * </pre>
           */
          public Builder setKey(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            key_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes key = 3;</code>
           *
           * <pre>
           * the key of the entry to move
           * </pre>
           */
          public Builder clearKey() {
            bitField0_ = (bitField0_ & ~0x00000001);
            key_ = getDefaultInstance().getKey();
            onChanged();
            return this;
          }

          // optional bytes version = 4;
          private com.google.protobuf.ByteString version_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes version = 4;</code>
           *
           * <pre>
           * the expected version number in the other machine
           * the version number will be the version in the stored entry.
           * </pre>
           */
          public boolean hasVersion() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional bytes version = 4;</code>
           *
           * <pre>
           * the expected version number in the other machine
           * the version number will be the version in the stored entry.
           * </pre>
           */
          public com.google.protobuf.ByteString getVersion() {
            return version_;
          }
          /**
           * <code>optional bytes version = 4;</code>
           *
           * <pre>
           * the expected version number in the other machine
           * the version number will be the version in the stored entry.
           * </pre>
           */
          public Builder setVersion(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            version_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes version = 4;</code>
           *
           * <pre>
           * the expected version number in the other machine
           * the version number will be the version in the stored entry.
           * </pre>
           */
          public Builder clearVersion() {
            bitField0_ = (bitField0_ & ~0x00000002);
            version_ = getDefaultInstance().getVersion();
            onChanged();
            return this;
          }

          // optional bytes newKey = 5;
          private com.google.protobuf.ByteString newKey_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes newKey = 5;</code>
           *
           * <pre>
           * to have the moved key have a different final key used.
           * </pre>
           */
          public boolean hasNewKey() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional bytes newKey = 5;</code>
           *
           * <pre>
           * to have the moved key have a different final key used.
           * </pre>
           */
          public com.google.protobuf.ByteString getNewKey() {
            return newKey_;
          }
          /**
           * <code>optional bytes newKey = 5;</code>
           *
           * <pre>
           * to have the moved key have a different final key used.
           * </pre>
           */
          public Builder setNewKey(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            newKey_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes newKey = 5;</code>
           *
           * <pre>
           * to have the moved key have a different final key used.
           * </pre>
           */
          public Builder clearNewKey() {
            bitField0_ = (bitField0_ & ~0x00000004);
            newKey_ = getDefaultInstance().getNewKey();
            onChanged();
            return this;
          }

          // optional bool force = 6;
          private boolean force_ ;
          /**
           * <code>optional bool force = 6;</code>
           *
           * <pre>
           * force the write ignoring the current key version.
           * </pre>
           */
          public boolean hasForce() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional bool force = 6;</code>
           *
           * <pre>
           * force the write ignoring the current key version.
           * </pre>
           */
          public boolean getForce() {
            return force_;
          }
          /**
           * <code>optional bool force = 6;</code>
           *
           * <pre>
           * force the write ignoring the current key version.
           * </pre>
           */
          public Builder setForce(boolean value) {
            bitField0_ |= 0x00000008;
            force_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool force = 6;</code>
           *
           * <pre>
           * force the write ignoring the current key version.
           * </pre>
           */
          public Builder clearForce() {
            bitField0_ = (bitField0_ & ~0x00000008);
            force_ = false;
            onChanged();
            return this;
          }

          // optional .com.seagate.kinetic.proto.Message.Status status = 7;
          private com.seagate.kinetic.proto.Kinetic.Message.Status status_ = com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
          private com.google.protobuf.SingleFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.Status, com.seagate.kinetic.proto.Kinetic.Message.Status.Builder, com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder> statusBuilder_;
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          public boolean hasStatus() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Status getStatus() {
            if (statusBuilder_ == null) {
              return status_;
            } else {
              return statusBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          public Builder setStatus(com.seagate.kinetic.proto.Kinetic.Message.Status value) {
            if (statusBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              status_ = value;
              onChanged();
            } else {
              statusBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000010;
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          public Builder setStatus(
              com.seagate.kinetic.proto.Kinetic.Message.Status.Builder builderForValue) {
            if (statusBuilder_ == null) {
              status_ = builderForValue.build();
              onChanged();
            } else {
              statusBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000010;
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          public Builder mergeStatus(com.seagate.kinetic.proto.Kinetic.Message.Status value) {
            if (statusBuilder_ == null) {
              if (((bitField0_ & 0x00000010) == 0x00000010) &&
                  status_ != com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance()) {
                status_ =
                  com.seagate.kinetic.proto.Kinetic.Message.Status.newBuilder(status_).mergeFrom(value).buildPartial();
              } else {
                status_ = value;
              }
              onChanged();
            } else {
              statusBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000010;
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          public Builder clearStatus() {
            if (statusBuilder_ == null) {
              status_ = com.seagate.kinetic.proto.Kinetic.Message.Status.getDefaultInstance();
              onChanged();
            } else {
              statusBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Status.Builder getStatusBuilder() {
            bitField0_ |= 0x00000010;
            onChanged();
            return getStatusFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder getStatusOrBuilder() {
            if (statusBuilder_ != null) {
              return statusBuilder_.getMessageOrBuilder();
            } else {
              return status_;
            }
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Status status = 7;</code>
           *
           * <pre>
           * returned status
           * </pre>
           */
          private com.google.protobuf.SingleFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.Status, com.seagate.kinetic.proto.Kinetic.Message.Status.Builder, com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder> 
              getStatusFieldBuilder() {
            if (statusBuilder_ == null) {
              statusBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  com.seagate.kinetic.proto.Kinetic.Message.Status, com.seagate.kinetic.proto.Kinetic.Message.Status.Builder, com.seagate.kinetic.proto.Kinetic.Message.StatusOrBuilder>(
                      status_,
                      getParentForChildren(),
                      isClean());
              status_ = null;
            }
            return statusBuilder_;
          }

          // optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;
          private com.seagate.kinetic.proto.Kinetic.Message.P2POperation p2Pop_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
          private com.google.protobuf.SingleFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.P2POperation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder> p2PopBuilder_;
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          public boolean hasP2Pop() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.P2POperation getP2Pop() {
            if (p2PopBuilder_ == null) {
              return p2Pop_;
            } else {
              return p2PopBuilder_.getMessage();
            }
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          public Builder setP2Pop(com.seagate.kinetic.proto.Kinetic.Message.P2POperation value) {
            if (p2PopBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              p2Pop_ = value;
              onChanged();
            } else {
              p2PopBuilder_.setMessage(value);
            }
            bitField0_ |= 0x00000020;
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          public Builder setP2Pop(
              com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder builderForValue) {
            if (p2PopBuilder_ == null) {
              p2Pop_ = builderForValue.build();
              onChanged();
            } else {
              p2PopBuilder_.setMessage(builderForValue.build());
            }
            bitField0_ |= 0x00000020;
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          public Builder mergeP2Pop(com.seagate.kinetic.proto.Kinetic.Message.P2POperation value) {
            if (p2PopBuilder_ == null) {
              if (((bitField0_ & 0x00000020) == 0x00000020) &&
                  p2Pop_ != com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance()) {
                p2Pop_ =
                  com.seagate.kinetic.proto.Kinetic.Message.P2POperation.newBuilder(p2Pop_).mergeFrom(value).buildPartial();
              } else {
                p2Pop_ = value;
              }
              onChanged();
            } else {
              p2PopBuilder_.mergeFrom(value);
            }
            bitField0_ |= 0x00000020;
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          public Builder clearP2Pop() {
            if (p2PopBuilder_ == null) {
              p2Pop_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
              onChanged();
            } else {
              p2PopBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000020);
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder getP2PopBuilder() {
            bitField0_ |= 0x00000020;
            onChanged();
            return getP2PopFieldBuilder().getBuilder();
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder getP2PopOrBuilder() {
            if (p2PopBuilder_ != null) {
              return p2PopBuilder_.getMessageOrBuilder();
            } else {
              return p2Pop_;
            }
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.P2POperation p2pop = 8;</code>
           *
           * <pre>
           * an operation to add to this put operation. THis allows the
           * formation of a pipeline client -&gt; A -&gt;B -&gt;C with the status for all returning
           * back to the client.
           * </pre>
           */
          private com.google.protobuf.SingleFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.P2POperation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder> 
              getP2PopFieldBuilder() {
            if (p2PopBuilder_ == null) {
              p2PopBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                  com.seagate.kinetic.proto.Kinetic.Message.P2POperation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder>(
                      p2Pop_,
                      getParentForChildren(),
                      isClean());
              p2Pop_ = null;
            }
            return p2PopBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.P2POperation.Operation)
        }

        static {
          defaultInstance = new Operation(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.P2POperation.Operation)
      }

      public interface PeerOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional string hostname = 1;
        /**
         * <code>optional string hostname = 1;</code>
         */
        boolean hasHostname();
        /**
         * <code>optional string hostname = 1;</code>
         */
        java.lang.String getHostname();
        /**
         * <code>optional string hostname = 1;</code>
         */
        com.google.protobuf.ByteString
            getHostnameBytes();

        // optional int32 port = 2;
        /**
         * <code>optional int32 port = 2;</code>
         */
        boolean hasPort();
        /**
         * <code>optional int32 port = 2;</code>
         */
        int getPort();

        // optional bool tls = 3;
        /**
         * <code>optional bool tls = 3;</code>
         */
        boolean hasTls();
        /**
         * <code>optional bool tls = 3;</code>
         */
        boolean getTls();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.P2POperation.Peer}
       */
      public static final class Peer extends
          com.google.protobuf.GeneratedMessage
          implements PeerOrBuilder {
        // Use Peer.newBuilder() to construct.
        private Peer(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Peer(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Peer defaultInstance;
        public static Peer getDefaultInstance() {
          return defaultInstance;
        }

        public Peer getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Peer(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  hostname_ = input.readBytes();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  port_ = input.readInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  tls_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.class, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.Builder.class);
        }

        public static com.google.protobuf.Parser<Peer> PARSER =
            new com.google.protobuf.AbstractParser<Peer>() {
          public Peer parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Peer(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Peer> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional string hostname = 1;
        public static final int HOSTNAME_FIELD_NUMBER = 1;
        private java.lang.Object hostname_;
        /**
         * <code>optional string hostname = 1;</code>
         */
        public boolean hasHostname() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string hostname = 1;</code>
         */
        public java.lang.String getHostname() {
          java.lang.Object ref = hostname_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              hostname_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string hostname = 1;</code>
         */
        public com.google.protobuf.ByteString
            getHostnameBytes() {
          java.lang.Object ref = hostname_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            hostname_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional int32 port = 2;
        public static final int PORT_FIELD_NUMBER = 2;
        private int port_;
        /**
         * <code>optional int32 port = 2;</code>
         */
        public boolean hasPort() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional int32 port = 2;</code>
         */
        public int getPort() {
          return port_;
        }

        // optional bool tls = 3;
        public static final int TLS_FIELD_NUMBER = 3;
        private boolean tls_;
        /**
         * <code>optional bool tls = 3;</code>
         */
        public boolean hasTls() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool tls = 3;</code>
         */
        public boolean getTls() {
          return tls_;
        }

        private void initFields() {
          hostname_ = "";
          port_ = 0;
          tls_ = false;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, getHostnameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeInt32(2, port_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBool(3, tls_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, getHostnameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(2, port_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(3, tls_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.P2POperation.Peer}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PeerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.class, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            hostname_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            port_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            tls_ = false;
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer build() {
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer result = new com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.hostname_ = hostname_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.port_ = port_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.tls_ = tls_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.getDefaultInstance()) return this;
            if (other.hasHostname()) {
              bitField0_ |= 0x00000001;
              hostname_ = other.hostname_;
              onChanged();
            }
            if (other.hasPort()) {
              setPort(other.getPort());
            }
            if (other.hasTls()) {
              setTls(other.getTls());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional string hostname = 1;
          private java.lang.Object hostname_ = "";
          /**
           * <code>optional string hostname = 1;</code>
           */
          public boolean hasHostname() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string hostname = 1;</code>
           */
          public java.lang.String getHostname() {
            java.lang.Object ref = hostname_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              hostname_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string hostname = 1;</code>
           */
          public com.google.protobuf.ByteString
              getHostnameBytes() {
            java.lang.Object ref = hostname_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              hostname_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string hostname = 1;</code>
           */
          public Builder setHostname(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            hostname_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string hostname = 1;</code>
           */
          public Builder clearHostname() {
            bitField0_ = (bitField0_ & ~0x00000001);
            hostname_ = getDefaultInstance().getHostname();
            onChanged();
            return this;
          }
          /**
           * <code>optional string hostname = 1;</code>
           */
          public Builder setHostnameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            hostname_ = value;
            onChanged();
            return this;
          }

          // optional int32 port = 2;
          private int port_ ;
          /**
           * <code>optional int32 port = 2;</code>
           */
          public boolean hasPort() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional int32 port = 2;</code>
           */
          public int getPort() {
            return port_;
          }
          /**
           * <code>optional int32 port = 2;</code>
           */
          public Builder setPort(int value) {
            bitField0_ |= 0x00000002;
            port_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 port = 2;</code>
           */
          public Builder clearPort() {
            bitField0_ = (bitField0_ & ~0x00000002);
            port_ = 0;
            onChanged();
            return this;
          }

          // optional bool tls = 3;
          private boolean tls_ ;
          /**
           * <code>optional bool tls = 3;</code>
           */
          public boolean hasTls() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional bool tls = 3;</code>
           */
          public boolean getTls() {
            return tls_;
          }
          /**
           * <code>optional bool tls = 3;</code>
           */
          public Builder setTls(boolean value) {
            bitField0_ |= 0x00000004;
            tls_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bool tls = 3;</code>
           */
          public Builder clearTls() {
            bitField0_ = (bitField0_ & ~0x00000004);
            tls_ = false;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.P2POperation.Peer)
        }

        static {
          defaultInstance = new Peer(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.P2POperation.Peer)
      }

      private int bitField0_;
      // optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;
      public static final int PEER_FIELD_NUMBER = 1;
      private com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer peer_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
       *
       * <pre>
       * Describe the target machine
       * </pre>
       */
      public boolean hasPeer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
       *
       * <pre>
       * Describe the target machine
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer getPeer() {
        return peer_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
       *
       * <pre>
       * Describe the target machine
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PeerOrBuilder getPeerOrBuilder() {
        return peer_;
      }

      // repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;
      public static final int OPERATION_FIELD_NUMBER = 2;
      private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation> operation_;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation> getOperationList() {
        return operation_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder> 
          getOperationOrBuilderList() {
        return operation_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      public int getOperationCount() {
        return operation_.size();
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation getOperation(int index) {
        return operation_.get(index);
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
       *
       * <pre>
       * List of operations to be performed.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder getOperationOrBuilder(
          int index) {
        return operation_.get(index);
      }

      // optional bool allChildOperationsSucceeded = 3;
      public static final int ALLCHILDOPERATIONSSUCCEEDED_FIELD_NUMBER = 3;
      private boolean allChildOperationsSucceeded_;
      /**
       * <code>optional bool allChildOperationsSucceeded = 3;</code>
       *
       * <pre>
       * Indicates whether all operations have Status SUCCESS
       * When false, clients should traverse Operation status codes to discover
       * error cases.
       * When true, no further error checking should be required.
       * </pre>
       */
      public boolean hasAllChildOperationsSucceeded() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bool allChildOperationsSucceeded = 3;</code>
       *
       * <pre>
       * Indicates whether all operations have Status SUCCESS
       * When false, clients should traverse Operation status codes to discover
       * error cases.
       * When true, no further error checking should be required.
       * </pre>
       */
      public boolean getAllChildOperationsSucceeded() {
        return allChildOperationsSucceeded_;
      }

      private void initFields() {
        peer_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.getDefaultInstance();
        operation_ = java.util.Collections.emptyList();
        allChildOperationsSucceeded_ = false;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(1, peer_);
        }
        for (int i = 0; i < operation_.size(); i++) {
          output.writeMessage(2, operation_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(3, allChildOperationsSucceeded_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, peer_);
        }
        for (int i = 0; i < operation_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, operation_.get(i));
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, allChildOperationsSucceeded_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.P2POperation parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.P2POperation prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.P2POperation}
       *
       * <pre>
       * P2P operations allow drives to be able to send keys to other drives.
       * this is either a standalone command or added to a put command.
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.P2POperationOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.P2POperation.class, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.P2POperation.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getPeerFieldBuilder();
            getOperationFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (peerBuilder_ == null) {
            peer_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.getDefaultInstance();
          } else {
            peerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          if (operationBuilder_ == null) {
            operation_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            operationBuilder_.clear();
          }
          allChildOperationsSucceeded_ = false;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_P2POperation_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation build() {
          com.seagate.kinetic.proto.Kinetic.Message.P2POperation result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.P2POperation result = new com.seagate.kinetic.proto.Kinetic.Message.P2POperation(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          if (peerBuilder_ == null) {
            result.peer_ = peer_;
          } else {
            result.peer_ = peerBuilder_.build();
          }
          if (operationBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              operation_ = java.util.Collections.unmodifiableList(operation_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.operation_ = operation_;
          } else {
            result.operation_ = operationBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000002;
          }
          result.allChildOperationsSucceeded_ = allChildOperationsSucceeded_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.P2POperation) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.P2POperation)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.P2POperation other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.P2POperation.getDefaultInstance()) return this;
          if (other.hasPeer()) {
            mergePeer(other.getPeer());
          }
          if (operationBuilder_ == null) {
            if (!other.operation_.isEmpty()) {
              if (operation_.isEmpty()) {
                operation_ = other.operation_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureOperationIsMutable();
                operation_.addAll(other.operation_);
              }
              onChanged();
            }
          } else {
            if (!other.operation_.isEmpty()) {
              if (operationBuilder_.isEmpty()) {
                operationBuilder_.dispose();
                operationBuilder_ = null;
                operation_ = other.operation_;
                bitField0_ = (bitField0_ & ~0x00000002);
                operationBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getOperationFieldBuilder() : null;
              } else {
                operationBuilder_.addAllMessages(other.operation_);
              }
            }
          }
          if (other.hasAllChildOperationsSucceeded()) {
            setAllChildOperationsSucceeded(other.getAllChildOperationsSucceeded());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.P2POperation parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.P2POperation) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;
        private com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer peer_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PeerOrBuilder> peerBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        public boolean hasPeer() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer getPeer() {
          if (peerBuilder_ == null) {
            return peer_;
          } else {
            return peerBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        public Builder setPeer(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer value) {
          if (peerBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            peer_ = value;
            onChanged();
          } else {
            peerBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        public Builder setPeer(
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.Builder builderForValue) {
          if (peerBuilder_ == null) {
            peer_ = builderForValue.build();
            onChanged();
          } else {
            peerBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        public Builder mergePeer(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer value) {
          if (peerBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001) &&
                peer_ != com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.getDefaultInstance()) {
              peer_ =
                com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.newBuilder(peer_).mergeFrom(value).buildPartial();
            } else {
              peer_ = value;
            }
            onChanged();
          } else {
            peerBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000001;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        public Builder clearPeer() {
          if (peerBuilder_ == null) {
            peer_ = com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.getDefaultInstance();
            onChanged();
          } else {
            peerBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.Builder getPeerBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getPeerFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PeerOrBuilder getPeerOrBuilder() {
          if (peerBuilder_ != null) {
            return peerBuilder_.getMessageOrBuilder();
          } else {
            return peer_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.P2POperation.Peer peer = 1;</code>
         *
         * <pre>
         * Describe the target machine
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PeerOrBuilder> 
            getPeerFieldBuilder() {
          if (peerBuilder_ == null) {
            peerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Peer.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.PeerOrBuilder>(
                    peer_,
                    getParentForChildren(),
                    isClean());
            peer_ = null;
          }
          return peerBuilder_;
        }

        // repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;
        private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation> operation_ =
          java.util.Collections.emptyList();
        private void ensureOperationIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            operation_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation>(operation_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder> operationBuilder_;

        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation> getOperationList() {
          if (operationBuilder_ == null) {
            return java.util.Collections.unmodifiableList(operation_);
          } else {
            return operationBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public int getOperationCount() {
          if (operationBuilder_ == null) {
            return operation_.size();
          } else {
            return operationBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation getOperation(int index) {
          if (operationBuilder_ == null) {
            return operation_.get(index);
          } else {
            return operationBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder setOperation(
            int index, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation value) {
          if (operationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOperationIsMutable();
            operation_.set(index, value);
            onChanged();
          } else {
            operationBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder setOperation(
            int index, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder builderForValue) {
          if (operationBuilder_ == null) {
            ensureOperationIsMutable();
            operation_.set(index, builderForValue.build());
            onChanged();
          } else {
            operationBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder addOperation(com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation value) {
          if (operationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOperationIsMutable();
            operation_.add(value);
            onChanged();
          } else {
            operationBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder addOperation(
            int index, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation value) {
          if (operationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureOperationIsMutable();
            operation_.add(index, value);
            onChanged();
          } else {
            operationBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder addOperation(
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder builderForValue) {
          if (operationBuilder_ == null) {
            ensureOperationIsMutable();
            operation_.add(builderForValue.build());
            onChanged();
          } else {
            operationBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder addOperation(
            int index, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder builderForValue) {
          if (operationBuilder_ == null) {
            ensureOperationIsMutable();
            operation_.add(index, builderForValue.build());
            onChanged();
          } else {
            operationBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder addAllOperation(
            java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation> values) {
          if (operationBuilder_ == null) {
            ensureOperationIsMutable();
            super.addAll(values, operation_);
            onChanged();
          } else {
            operationBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder clearOperation() {
          if (operationBuilder_ == null) {
            operation_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            operationBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public Builder removeOperation(int index) {
          if (operationBuilder_ == null) {
            ensureOperationIsMutable();
            operation_.remove(index);
            onChanged();
          } else {
            operationBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder getOperationBuilder(
            int index) {
          return getOperationFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder getOperationOrBuilder(
            int index) {
          if (operationBuilder_ == null) {
            return operation_.get(index);  } else {
            return operationBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder> 
             getOperationOrBuilderList() {
          if (operationBuilder_ != null) {
            return operationBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(operation_);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder addOperationBuilder() {
          return getOperationFieldBuilder().addBuilder(
              com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder addOperationBuilder(
            int index) {
          return getOperationFieldBuilder().addBuilder(
              index, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.P2POperation.Operation operation = 2;</code>
         *
         * <pre>
         * List of operations to be performed.
         * </pre>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder> 
             getOperationBuilderList() {
          return getOperationFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder> 
            getOperationFieldBuilder() {
          if (operationBuilder_ == null) {
            operationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.Operation.Builder, com.seagate.kinetic.proto.Kinetic.Message.P2POperation.OperationOrBuilder>(
                    operation_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            operation_ = null;
          }
          return operationBuilder_;
        }

        // optional bool allChildOperationsSucceeded = 3;
        private boolean allChildOperationsSucceeded_ ;
        /**
         * <code>optional bool allChildOperationsSucceeded = 3;</code>
         *
         * <pre>
         * Indicates whether all operations have Status SUCCESS
         * When false, clients should traverse Operation status codes to discover
         * error cases.
         * When true, no further error checking should be required.
         * </pre>
         */
        public boolean hasAllChildOperationsSucceeded() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bool allChildOperationsSucceeded = 3;</code>
         *
         * <pre>
         * Indicates whether all operations have Status SUCCESS
         * When false, clients should traverse Operation status codes to discover
         * error cases.
         * When true, no further error checking should be required.
         * </pre>
         */
        public boolean getAllChildOperationsSucceeded() {
          return allChildOperationsSucceeded_;
        }
        /**
         * <code>optional bool allChildOperationsSucceeded = 3;</code>
         *
         * <pre>
         * Indicates whether all operations have Status SUCCESS
         * When false, clients should traverse Operation status codes to discover
         * error cases.
         * When true, no further error checking should be required.
         * </pre>
         */
        public Builder setAllChildOperationsSucceeded(boolean value) {
          bitField0_ |= 0x00000004;
          allChildOperationsSucceeded_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool allChildOperationsSucceeded = 3;</code>
         *
         * <pre>
         * Indicates whether all operations have Status SUCCESS
         * When false, clients should traverse Operation status codes to discover
         * error cases.
         * When true, no further error checking should be required.
         * </pre>
         */
        public Builder clearAllChildOperationsSucceeded() {
          bitField0_ = (bitField0_ & ~0x00000004);
          allChildOperationsSucceeded_ = false;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.P2POperation)
      }

      static {
        defaultInstance = new P2POperation(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.P2POperation)
    }

    public interface GetLogOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
       */
      java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type> getTypeList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
       */
      int getTypeCount();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type getType(int index);

      // repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization> 
          getUtilizationList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization getUtilization(int index);
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      int getUtilizationCount();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder> 
          getUtilizationOrBuilderList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder getUtilizationOrBuilder(
          int index);

      // repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature> 
          getTemperatureList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature getTemperature(int index);
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      int getTemperatureCount();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder> 
          getTemperatureOrBuilderList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder getTemperatureOrBuilder(
          int index);

      // optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
       */
      boolean hasCapacity();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity getCapacity();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.CapacityOrBuilder getCapacityOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
       */
      boolean hasConfiguration();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration getConfiguration();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.ConfigurationOrBuilder getConfigurationOrBuilder();

      // repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics> 
          getStatisticsList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics getStatistics(int index);
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      int getStatisticsCount();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder> 
          getStatisticsOrBuilderList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder getStatisticsOrBuilder(
          int index);

      // optional bytes messages = 7;
      /**
       * <code>optional bytes messages = 7;</code>
       */
      boolean hasMessages();
      /**
       * <code>optional bytes messages = 7;</code>
       */
      com.google.protobuf.ByteString getMessages();

      // optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
       */
      boolean hasLimits();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits getLimits();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.LimitsOrBuilder getLimitsOrBuilder();

      // optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
       */
      boolean hasDevice();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device getDevice();
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
       */
      com.seagate.kinetic.proto.Kinetic.Message.GetLog.DeviceOrBuilder getDeviceOrBuilder();
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog}
     *
     * <pre>
     *get log
     * </pre>
     */
    public static final class GetLog extends
        com.google.protobuf.GeneratedMessage
        implements GetLogOrBuilder {
      // Use GetLog.newBuilder() to construct.
      private GetLog(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private GetLog(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final GetLog defaultInstance;
      public static GetLog getDefaultInstance() {
        return defaultInstance;
      }

      public GetLog getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private GetLog(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type value = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(1, rawValue);
                } else {
                  if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                    type_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type>();
                    mutable_bitField0_ |= 0x00000001;
                  }
                  type_.add(value);
                }
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int rawValue = input.readEnum();
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type value = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                      type_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type>();
                      mutable_bitField0_ |= 0x00000001;
                    }
                    type_.add(value);
                  }
                }
                input.popLimit(oldLimit);
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  utilization_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization>();
                  mutable_bitField0_ |= 0x00000002;
                }
                utilization_.add(input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.PARSER, extensionRegistry));
                break;
              }
              case 26: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  temperature_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature>();
                  mutable_bitField0_ |= 0x00000004;
                }
                temperature_.add(input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.PARSER, extensionRegistry));
                break;
              }
              case 34: {
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.Builder subBuilder = null;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                  subBuilder = capacity_.toBuilder();
                }
                capacity_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(capacity_);
                  capacity_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000001;
                break;
              }
              case 42: {
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = configuration_.toBuilder();
                }
                configuration_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(configuration_);
                  configuration_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 50: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  statistics_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics>();
                  mutable_bitField0_ |= 0x00000020;
                }
                statistics_.add(input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.PARSER, extensionRegistry));
                break;
              }
              case 58: {
                bitField0_ |= 0x00000004;
                messages_ = input.readBytes();
                break;
              }
              case 66: {
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.Builder subBuilder = null;
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                  subBuilder = limits_.toBuilder();
                }
                limits_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(limits_);
                  limits_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000008;
                break;
              }
              case 74: {
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.Builder subBuilder = null;
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                  subBuilder = device_.toBuilder();
                }
                device_ = input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(device_);
                  device_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000010;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            type_ = java.util.Collections.unmodifiableList(type_);
          }
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            utilization_ = java.util.Collections.unmodifiableList(utilization_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            temperature_ = java.util.Collections.unmodifiableList(temperature_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            statistics_ = java.util.Collections.unmodifiableList(statistics_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Builder.class);
      }

      public static com.google.protobuf.Parser<GetLog> PARSER =
          new com.google.protobuf.AbstractParser<GetLog>() {
        public GetLog parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new GetLog(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<GetLog> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code com.seagate.kinetic.proto.Message.GetLog.Type}
       */
      public enum Type
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>INVALID_TYPE = -1;</code>
         *
         * <pre>
         * Must come first, so default is invalid
         * </pre>
         */
        INVALID_TYPE(0, -1),
        /**
         * <code>UTILIZATIONS = 0;</code>
         */
        UTILIZATIONS(1, 0),
        /**
         * <code>TEMPERATURES = 1;</code>
         */
        TEMPERATURES(2, 1),
        /**
         * <code>CAPACITIES = 2;</code>
         */
        CAPACITIES(3, 2),
        /**
         * <code>CONFIGURATION = 3;</code>
         */
        CONFIGURATION(4, 3),
        /**
         * <code>STATISTICS = 4;</code>
         */
        STATISTICS(5, 4),
        /**
         * <code>MESSAGES = 5;</code>
         */
        MESSAGES(6, 5),
        /**
         * <code>LIMITS = 6;</code>
         */
        LIMITS(7, 6),
        /**
         * <code>DEVICE = 7;</code>
         */
        DEVICE(8, 7),
        ;

        /**
         * <code>INVALID_TYPE = -1;</code>
         *
         * <pre>
         * Must come first, so default is invalid
         * </pre>
         */
        public static final int INVALID_TYPE_VALUE = -1;
        /**
         * <code>UTILIZATIONS = 0;</code>
         */
        public static final int UTILIZATIONS_VALUE = 0;
        /**
         * <code>TEMPERATURES = 1;</code>
         */
        public static final int TEMPERATURES_VALUE = 1;
        /**
         * <code>CAPACITIES = 2;</code>
         */
        public static final int CAPACITIES_VALUE = 2;
        /**
         * <code>CONFIGURATION = 3;</code>
         */
        public static final int CONFIGURATION_VALUE = 3;
        /**
         * <code>STATISTICS = 4;</code>
         */
        public static final int STATISTICS_VALUE = 4;
        /**
         * <code>MESSAGES = 5;</code>
         */
        public static final int MESSAGES_VALUE = 5;
        /**
         * <code>LIMITS = 6;</code>
         */
        public static final int LIMITS_VALUE = 6;
        /**
         * <code>DEVICE = 7;</code>
         */
        public static final int DEVICE_VALUE = 7;


        public final int getNumber() { return value; }

        public static Type valueOf(int value) {
          switch (value) {
            case -1: return INVALID_TYPE;
            case 0: return UTILIZATIONS;
            case 1: return TEMPERATURES;
            case 2: return CAPACITIES;
            case 3: return CONFIGURATION;
            case 4: return STATISTICS;
            case 5: return MESSAGES;
            case 6: return LIMITS;
            case 7: return DEVICE;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                public Type findValueByNumber(int number) {
                  return Type.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.Message.GetLog.getDescriptor().getEnumTypes().get(0);
        }

        private static final Type[] VALUES = values();

        public static Type valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private Type(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:com.seagate.kinetic.proto.Message.GetLog.Type)
      }

      public interface UtilizationOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional string name = 1;
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the utilization being reported. These names can be standard and proprietary. The
         * standard names are "HDA", "EN0" and "EN1". If there are more items that are
         * being reported, such as processor utilization, can have a descriptive name.
         * </pre>
         */
        boolean hasName();
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the utilization being reported. These names can be standard and proprietary. The
         * standard names are "HDA", "EN0" and "EN1". If there are more items that are
         * being reported, such as processor utilization, can have a descriptive name.
         * </pre>
         */
        java.lang.String getName();
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the utilization being reported. These names can be standard and proprietary. The
         * standard names are "HDA", "EN0" and "EN1". If there are more items that are
         * being reported, such as processor utilization, can have a descriptive name.
         * </pre>
         */
        com.google.protobuf.ByteString
            getNameBytes();

        // optional float value = 2;
        /**
         * <code>optional float value = 2;</code>
         *
         * <pre>
         * A number between 0.00 and 1.00. The resolution of this number is up to the
         * drive. 1 means 100% utilized.
         * </pre>
         */
        boolean hasValue();
        /**
         * <code>optional float value = 2;</code>
         *
         * <pre>
         * A number between 0.00 and 1.00. The resolution of this number is up to the
         * drive. 1 means 100% utilized.
         * </pre>
         */
        float getValue();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Utilization}
       */
      public static final class Utilization extends
          com.google.protobuf.GeneratedMessage
          implements UtilizationOrBuilder {
        // Use Utilization.newBuilder() to construct.
        private Utilization(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Utilization(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Utilization defaultInstance;
        public static Utilization getDefaultInstance() {
          return defaultInstance;
        }

        public Utilization getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Utilization(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  name_ = input.readBytes();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  value_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder.class);
        }

        public static com.google.protobuf.Parser<Utilization> PARSER =
            new com.google.protobuf.AbstractParser<Utilization>() {
          public Utilization parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Utilization(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Utilization> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional string name = 1;
        public static final int NAME_FIELD_NUMBER = 1;
        private java.lang.Object name_;
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the utilization being reported. These names can be standard and proprietary. The
         * standard names are "HDA", "EN0" and "EN1". If there are more items that are
         * being reported, such as processor utilization, can have a descriptive name.
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the utilization being reported. These names can be standard and proprietary. The
         * standard names are "HDA", "EN0" and "EN1". If there are more items that are
         * being reported, such as processor utilization, can have a descriptive name.
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the utilization being reported. These names can be standard and proprietary. The
         * standard names are "HDA", "EN0" and "EN1". If there are more items that are
         * being reported, such as processor utilization, can have a descriptive name.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional float value = 2;
        public static final int VALUE_FIELD_NUMBER = 2;
        private float value_;
        /**
         * <code>optional float value = 2;</code>
         *
         * <pre>
         * A number between 0.00 and 1.00. The resolution of this number is up to the
         * drive. 1 means 100% utilized.
         * </pre>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float value = 2;</code>
         *
         * <pre>
         * A number between 0.00 and 1.00. The resolution of this number is up to the
         * drive. 1 means 100% utilized.
         * </pre>
         */
        public float getValue() {
          return value_;
        }

        private void initFields() {
          name_ = "";
          value_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, getNameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, value_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, getNameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, value_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Utilization}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            name_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            value_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization build() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.name_ = name_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.value_ = value_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.getDefaultInstance()) return this;
            if (other.hasName()) {
              bitField0_ |= 0x00000001;
              name_ = other.name_;
              onChanged();
            }
            if (other.hasValue()) {
              setValue(other.getValue());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional string name = 1;
          private java.lang.Object name_ = "";
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the utilization being reported. These names can be standard and proprietary. The
           * standard names are "HDA", "EN0" and "EN1". If there are more items that are
           * being reported, such as processor utilization, can have a descriptive name.
           * </pre>
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the utilization being reported. These names can be standard and proprietary. The
           * standard names are "HDA", "EN0" and "EN1". If there are more items that are
           * being reported, such as processor utilization, can have a descriptive name.
           * </pre>
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the utilization being reported. These names can be standard and proprietary. The
           * standard names are "HDA", "EN0" and "EN1". If there are more items that are
           * being reported, such as processor utilization, can have a descriptive name.
           * </pre>
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the utilization being reported. These names can be standard and proprietary. The
           * standard names are "HDA", "EN0" and "EN1". If there are more items that are
           * being reported, such as processor utilization, can have a descriptive name.
           * </pre>
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the utilization being reported. These names can be standard and proprietary. The
           * standard names are "HDA", "EN0" and "EN1". If there are more items that are
           * being reported, such as processor utilization, can have a descriptive name.
           * </pre>
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the utilization being reported. These names can be standard and proprietary. The
           * standard names are "HDA", "EN0" and "EN1". If there are more items that are
           * being reported, such as processor utilization, can have a descriptive name.
           * </pre>
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }

          // optional float value = 2;
          private float value_ ;
          /**
           * <code>optional float value = 2;</code>
           *
           * <pre>
           * A number between 0.00 and 1.00. The resolution of this number is up to the
           * drive. 1 means 100% utilized.
           * </pre>
           */
          public boolean hasValue() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional float value = 2;</code>
           *
           * <pre>
           * A number between 0.00 and 1.00. The resolution of this number is up to the
           * drive. 1 means 100% utilized.
           * </pre>
           */
          public float getValue() {
            return value_;
          }
          /**
           * <code>optional float value = 2;</code>
           *
           * <pre>
           * A number between 0.00 and 1.00. The resolution of this number is up to the
           * drive. 1 means 100% utilized.
           * </pre>
           */
          public Builder setValue(float value) {
            bitField0_ |= 0x00000002;
            value_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float value = 2;</code>
           *
           * <pre>
           * A number between 0.00 and 1.00. The resolution of this number is up to the
           * drive. 1 means 100% utilized.
           * </pre>
           */
          public Builder clearValue() {
            bitField0_ = (bitField0_ & ~0x00000002);
            value_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog.Utilization)
        }

        static {
          defaultInstance = new Utilization(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog.Utilization)
      }

      public interface TemperatureOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional string name = 1;
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the temperature being reported. These names can be standard and proprietary. The
         * standard name is "HDA". If there are more items that are
         * being reported, such as processor temperature, can have a descriptive name.
         * </pre>
         */
        boolean hasName();
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the temperature being reported. These names can be standard and proprietary. The
         * standard name is "HDA". If there are more items that are
         * being reported, such as processor temperature, can have a descriptive name.
         * </pre>
         */
        java.lang.String getName();
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the temperature being reported. These names can be standard and proprietary. The
         * standard name is "HDA". If there are more items that are
         * being reported, such as processor temperature, can have a descriptive name.
         * </pre>
         */
        com.google.protobuf.ByteString
            getNameBytes();

        // optional float current = 2;
        /**
         * <code>optional float current = 2;</code>
         *
         * <pre>
         * The current temperature in degrees c
         * </pre>
         */
        boolean hasCurrent();
        /**
         * <code>optional float current = 2;</code>
         *
         * <pre>
         * The current temperature in degrees c
         * </pre>
         */
        float getCurrent();

        // optional float minimum = 3;
        /**
         * <code>optional float minimum = 3;</code>
         */
        boolean hasMinimum();
        /**
         * <code>optional float minimum = 3;</code>
         */
        float getMinimum();

        // optional float maximum = 4;
        /**
         * <code>optional float maximum = 4;</code>
         */
        boolean hasMaximum();
        /**
         * <code>optional float maximum = 4;</code>
         */
        float getMaximum();

        // optional float target = 5;
        /**
         * <code>optional float target = 5;</code>
         */
        boolean hasTarget();
        /**
         * <code>optional float target = 5;</code>
         */
        float getTarget();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Temperature}
       */
      public static final class Temperature extends
          com.google.protobuf.GeneratedMessage
          implements TemperatureOrBuilder {
        // Use Temperature.newBuilder() to construct.
        private Temperature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Temperature(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Temperature defaultInstance;
        public static Temperature getDefaultInstance() {
          return defaultInstance;
        }

        public Temperature getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Temperature(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  name_ = input.readBytes();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  current_ = input.readFloat();
                  break;
                }
                case 29: {
                  bitField0_ |= 0x00000004;
                  minimum_ = input.readFloat();
                  break;
                }
                case 37: {
                  bitField0_ |= 0x00000008;
                  maximum_ = input.readFloat();
                  break;
                }
                case 45: {
                  bitField0_ |= 0x00000010;
                  target_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder.class);
        }

        public static com.google.protobuf.Parser<Temperature> PARSER =
            new com.google.protobuf.AbstractParser<Temperature>() {
          public Temperature parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Temperature(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Temperature> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional string name = 1;
        public static final int NAME_FIELD_NUMBER = 1;
        private java.lang.Object name_;
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the temperature being reported. These names can be standard and proprietary. The
         * standard name is "HDA". If there are more items that are
         * being reported, such as processor temperature, can have a descriptive name.
         * </pre>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the temperature being reported. These names can be standard and proprietary. The
         * standard name is "HDA". If there are more items that are
         * being reported, such as processor temperature, can have a descriptive name.
         * </pre>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string name = 1;</code>
         *
         * <pre>
         * The name of the temperature being reported. These names can be standard and proprietary. The
         * standard name is "HDA". If there are more items that are
         * being reported, such as processor temperature, can have a descriptive name.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional float current = 2;
        public static final int CURRENT_FIELD_NUMBER = 2;
        private float current_;
        /**
         * <code>optional float current = 2;</code>
         *
         * <pre>
         * The current temperature in degrees c
         * </pre>
         */
        public boolean hasCurrent() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float current = 2;</code>
         *
         * <pre>
         * The current temperature in degrees c
         * </pre>
         */
        public float getCurrent() {
          return current_;
        }

        // optional float minimum = 3;
        public static final int MINIMUM_FIELD_NUMBER = 3;
        private float minimum_;
        /**
         * <code>optional float minimum = 3;</code>
         */
        public boolean hasMinimum() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float minimum = 3;</code>
         */
        public float getMinimum() {
          return minimum_;
        }

        // optional float maximum = 4;
        public static final int MAXIMUM_FIELD_NUMBER = 4;
        private float maximum_;
        /**
         * <code>optional float maximum = 4;</code>
         */
        public boolean hasMaximum() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float maximum = 4;</code>
         */
        public float getMaximum() {
          return maximum_;
        }

        // optional float target = 5;
        public static final int TARGET_FIELD_NUMBER = 5;
        private float target_;
        /**
         * <code>optional float target = 5;</code>
         */
        public boolean hasTarget() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float target = 5;</code>
         */
        public float getTarget() {
          return target_;
        }

        private void initFields() {
          name_ = "";
          current_ = 0F;
          minimum_ = 0F;
          maximum_ = 0F;
          target_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, getNameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, current_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeFloat(3, minimum_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeFloat(4, maximum_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeFloat(5, target_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, getNameBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, current_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(3, minimum_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(4, maximum_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(5, target_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Temperature}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            name_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            current_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            minimum_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000004);
            maximum_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000008);
            target_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000010);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature build() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.name_ = name_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.current_ = current_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.minimum_ = minimum_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.maximum_ = maximum_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.target_ = target_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.getDefaultInstance()) return this;
            if (other.hasName()) {
              bitField0_ |= 0x00000001;
              name_ = other.name_;
              onChanged();
            }
            if (other.hasCurrent()) {
              setCurrent(other.getCurrent());
            }
            if (other.hasMinimum()) {
              setMinimum(other.getMinimum());
            }
            if (other.hasMaximum()) {
              setMaximum(other.getMaximum());
            }
            if (other.hasTarget()) {
              setTarget(other.getTarget());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional string name = 1;
          private java.lang.Object name_ = "";
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the temperature being reported. These names can be standard and proprietary. The
           * standard name is "HDA". If there are more items that are
           * being reported, such as processor temperature, can have a descriptive name.
           * </pre>
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the temperature being reported. These names can be standard and proprietary. The
           * standard name is "HDA". If there are more items that are
           * being reported, such as processor temperature, can have a descriptive name.
           * </pre>
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              name_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the temperature being reported. These names can be standard and proprietary. The
           * standard name is "HDA". If there are more items that are
           * being reported, such as processor temperature, can have a descriptive name.
           * </pre>
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the temperature being reported. These names can be standard and proprietary. The
           * standard name is "HDA". If there are more items that are
           * being reported, such as processor temperature, can have a descriptive name.
           * </pre>
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the temperature being reported. These names can be standard and proprietary. The
           * standard name is "HDA". If there are more items that are
           * being reported, such as processor temperature, can have a descriptive name.
           * </pre>
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }
          /**
           * <code>optional string name = 1;</code>
           *
           * <pre>
           * The name of the temperature being reported. These names can be standard and proprietary. The
           * standard name is "HDA". If there are more items that are
           * being reported, such as processor temperature, can have a descriptive name.
           * </pre>
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }

          // optional float current = 2;
          private float current_ ;
          /**
           * <code>optional float current = 2;</code>
           *
           * <pre>
           * The current temperature in degrees c
           * </pre>
           */
          public boolean hasCurrent() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional float current = 2;</code>
           *
           * <pre>
           * The current temperature in degrees c
           * </pre>
           */
          public float getCurrent() {
            return current_;
          }
          /**
           * <code>optional float current = 2;</code>
           *
           * <pre>
           * The current temperature in degrees c
           * </pre>
           */
          public Builder setCurrent(float value) {
            bitField0_ |= 0x00000002;
            current_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float current = 2;</code>
           *
           * <pre>
           * The current temperature in degrees c
           * </pre>
           */
          public Builder clearCurrent() {
            bitField0_ = (bitField0_ & ~0x00000002);
            current_ = 0F;
            onChanged();
            return this;
          }

          // optional float minimum = 3;
          private float minimum_ ;
          /**
           * <code>optional float minimum = 3;</code>
           */
          public boolean hasMinimum() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional float minimum = 3;</code>
           */
          public float getMinimum() {
            return minimum_;
          }
          /**
           * <code>optional float minimum = 3;</code>
           */
          public Builder setMinimum(float value) {
            bitField0_ |= 0x00000004;
            minimum_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float minimum = 3;</code>
           */
          public Builder clearMinimum() {
            bitField0_ = (bitField0_ & ~0x00000004);
            minimum_ = 0F;
            onChanged();
            return this;
          }

          // optional float maximum = 4;
          private float maximum_ ;
          /**
           * <code>optional float maximum = 4;</code>
           */
          public boolean hasMaximum() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional float maximum = 4;</code>
           */
          public float getMaximum() {
            return maximum_;
          }
          /**
           * <code>optional float maximum = 4;</code>
           */
          public Builder setMaximum(float value) {
            bitField0_ |= 0x00000008;
            maximum_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float maximum = 4;</code>
           */
          public Builder clearMaximum() {
            bitField0_ = (bitField0_ & ~0x00000008);
            maximum_ = 0F;
            onChanged();
            return this;
          }

          // optional float target = 5;
          private float target_ ;
          /**
           * <code>optional float target = 5;</code>
           */
          public boolean hasTarget() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional float target = 5;</code>
           */
          public float getTarget() {
            return target_;
          }
          /**
           * <code>optional float target = 5;</code>
           */
          public Builder setTarget(float value) {
            bitField0_ |= 0x00000010;
            target_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float target = 5;</code>
           */
          public Builder clearTarget() {
            bitField0_ = (bitField0_ & ~0x00000010);
            target_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog.Temperature)
        }

        static {
          defaultInstance = new Temperature(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog.Temperature)
      }

      public interface CapacityOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional uint64 nominalCapacityInBytes = 4;
        /**
         * <code>optional uint64 nominalCapacityInBytes = 4;</code>
         *
         * <pre>
         * 1-3 are reserved
         * </pre>
         */
        boolean hasNominalCapacityInBytes();
        /**
         * <code>optional uint64 nominalCapacityInBytes = 4;</code>
         *
         * <pre>
         * 1-3 are reserved
         * </pre>
         */
        long getNominalCapacityInBytes();

        // optional float portionFull = 5;
        /**
         * <code>optional float portionFull = 5;</code>
         */
        boolean hasPortionFull();
        /**
         * <code>optional float portionFull = 5;</code>
         */
        float getPortionFull();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Capacity}
       *
       * <pre>
       * These capacities are in bytes.
       * </pre>
       */
      public static final class Capacity extends
          com.google.protobuf.GeneratedMessage
          implements CapacityOrBuilder {
        // Use Capacity.newBuilder() to construct.
        private Capacity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Capacity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Capacity defaultInstance;
        public static Capacity getDefaultInstance() {
          return defaultInstance;
        }

        public Capacity getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Capacity(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000001;
                  nominalCapacityInBytes_ = input.readUInt64();
                  break;
                }
                case 45: {
                  bitField0_ |= 0x00000002;
                  portionFull_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.Builder.class);
        }

        public static com.google.protobuf.Parser<Capacity> PARSER =
            new com.google.protobuf.AbstractParser<Capacity>() {
          public Capacity parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Capacity(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Capacity> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional uint64 nominalCapacityInBytes = 4;
        public static final int NOMINALCAPACITYINBYTES_FIELD_NUMBER = 4;
        private long nominalCapacityInBytes_;
        /**
         * <code>optional uint64 nominalCapacityInBytes = 4;</code>
         *
         * <pre>
         * 1-3 are reserved
         * </pre>
         */
        public boolean hasNominalCapacityInBytes() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint64 nominalCapacityInBytes = 4;</code>
         *
         * <pre>
         * 1-3 are reserved
         * </pre>
         */
        public long getNominalCapacityInBytes() {
          return nominalCapacityInBytes_;
        }

        // optional float portionFull = 5;
        public static final int PORTIONFULL_FIELD_NUMBER = 5;
        private float portionFull_;
        /**
         * <code>optional float portionFull = 5;</code>
         */
        public boolean hasPortionFull() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float portionFull = 5;</code>
         */
        public float getPortionFull() {
          return portionFull_;
        }

        private void initFields() {
          nominalCapacityInBytes_ = 0L;
          portionFull_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt64(4, nominalCapacityInBytes_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(5, portionFull_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(4, nominalCapacityInBytes_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(5, portionFull_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Capacity}
         *
         * <pre>
         * These capacities are in bytes.
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.GetLog.CapacityOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            nominalCapacityInBytes_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000001);
            portionFull_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity build() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.nominalCapacityInBytes_ = nominalCapacityInBytes_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.portionFull_ = portionFull_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.getDefaultInstance()) return this;
            if (other.hasNominalCapacityInBytes()) {
              setNominalCapacityInBytes(other.getNominalCapacityInBytes());
            }
            if (other.hasPortionFull()) {
              setPortionFull(other.getPortionFull());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional uint64 nominalCapacityInBytes = 4;
          private long nominalCapacityInBytes_ ;
          /**
           * <code>optional uint64 nominalCapacityInBytes = 4;</code>
           *
           * <pre>
           * 1-3 are reserved
           * </pre>
           */
          public boolean hasNominalCapacityInBytes() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint64 nominalCapacityInBytes = 4;</code>
           *
           * <pre>
           * 1-3 are reserved
           * </pre>
           */
          public long getNominalCapacityInBytes() {
            return nominalCapacityInBytes_;
          }
          /**
           * <code>optional uint64 nominalCapacityInBytes = 4;</code>
           *
           * <pre>
           * 1-3 are reserved
           * </pre>
           */
          public Builder setNominalCapacityInBytes(long value) {
            bitField0_ |= 0x00000001;
            nominalCapacityInBytes_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 nominalCapacityInBytes = 4;</code>
           *
           * <pre>
           * 1-3 are reserved
           * </pre>
           */
          public Builder clearNominalCapacityInBytes() {
            bitField0_ = (bitField0_ & ~0x00000001);
            nominalCapacityInBytes_ = 0L;
            onChanged();
            return this;
          }

          // optional float portionFull = 5;
          private float portionFull_ ;
          /**
           * <code>optional float portionFull = 5;</code>
           */
          public boolean hasPortionFull() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional float portionFull = 5;</code>
           */
          public float getPortionFull() {
            return portionFull_;
          }
          /**
           * <code>optional float portionFull = 5;</code>
           */
          public Builder setPortionFull(float value) {
            bitField0_ |= 0x00000002;
            portionFull_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional float portionFull = 5;</code>
           */
          public Builder clearPortionFull() {
            bitField0_ = (bitField0_ & ~0x00000002);
            portionFull_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog.Capacity)
        }

        static {
          defaultInstance = new Capacity(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog.Capacity)
      }

      public interface ConfigurationOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional string vendor = 5;
        /**
         * <code>optional string vendor = 5;</code>
         *
         * <pre>
         * name of the vendor. Should be "Seagate"
         * </pre>
         */
        boolean hasVendor();
        /**
         * <code>optional string vendor = 5;</code>
         *
         * <pre>
         * name of the vendor. Should be "Seagate"
         * </pre>
         */
        java.lang.String getVendor();
        /**
         * <code>optional string vendor = 5;</code>
         *
         * <pre>
         * name of the vendor. Should be "Seagate"
         * </pre>
         */
        com.google.protobuf.ByteString
            getVendorBytes();

        // optional string model = 6;
        /**
         * <code>optional string model = 6;</code>
         *
         * <pre>
         * The model of the device.
         * "Simulator" for the simulator.
         * </pre>
         */
        boolean hasModel();
        /**
         * <code>optional string model = 6;</code>
         *
         * <pre>
         * The model of the device.
         * "Simulator" for the simulator.
         * </pre>
         */
        java.lang.String getModel();
        /**
         * <code>optional string model = 6;</code>
         *
         * <pre>
         * The model of the device.
         * "Simulator" for the simulator.
         * </pre>
         */
        com.google.protobuf.ByteString
            getModelBytes();

        // optional bytes serialNumber = 7;
        /**
         * <code>optional bytes serialNumber = 7;</code>
         *
         * <pre>
         * Device Serial number (SN)
         * </pre>
         */
        boolean hasSerialNumber();
        /**
         * <code>optional bytes serialNumber = 7;</code>
         *
         * <pre>
         * Device Serial number (SN)
         * </pre>
         */
        com.google.protobuf.ByteString getSerialNumber();

        // optional bytes worldWideName = 14;
        /**
         * <code>optional bytes worldWideName = 14;</code>
         *
         * <pre>
         * Device world wide name (WWN)
         * </pre>
         */
        boolean hasWorldWideName();
        /**
         * <code>optional bytes worldWideName = 14;</code>
         *
         * <pre>
         * Device world wide name (WWN)
         * </pre>
         */
        com.google.protobuf.ByteString getWorldWideName();

        // optional string version = 8;
        /**
         * <code>optional string version = 8;</code>
         *
         * <pre>
         * This is the vendor specific version of the software on the drive in dot notation
         * if this is not set or ends with "x" this is test code.
         * </pre>
         */
        boolean hasVersion();
        /**
         * <code>optional string version = 8;</code>
         *
         * <pre>
         * This is the vendor specific version of the software on the drive in dot notation
         * if this is not set or ends with "x" this is test code.
         * </pre>
         */
        java.lang.String getVersion();
        /**
         * <code>optional string version = 8;</code>
         *
         * <pre>
         * This is the vendor specific version of the software on the drive in dot notation
         * if this is not set or ends with "x" this is test code.
         * </pre>
         */
        com.google.protobuf.ByteString
            getVersionBytes();

        // optional string compilationDate = 12;
        /**
         * <code>optional string compilationDate = 12;</code>
         */
        boolean hasCompilationDate();
        /**
         * <code>optional string compilationDate = 12;</code>
         */
        java.lang.String getCompilationDate();
        /**
         * <code>optional string compilationDate = 12;</code>
         */
        com.google.protobuf.ByteString
            getCompilationDateBytes();

        // optional string sourceHash = 13;
        /**
         * <code>optional string sourceHash = 13;</code>
         */
        boolean hasSourceHash();
        /**
         * <code>optional string sourceHash = 13;</code>
         */
        java.lang.String getSourceHash();
        /**
         * <code>optional string sourceHash = 13;</code>
         */
        com.google.protobuf.ByteString
            getSourceHashBytes();

        // optional string protocolVersion = 15;
        /**
         * <code>optional string protocolVersion = 15;</code>
         *
         * <pre>
         * This is the version of the protocol (.proto file) that the drive uses.
         * This is not the highest or lowest version that is supported, just
         * the version that was compiled.
         * </pre>
         */
        boolean hasProtocolVersion();
        /**
         * <code>optional string protocolVersion = 15;</code>
         *
         * <pre>
         * This is the version of the protocol (.proto file) that the drive uses.
         * This is not the highest or lowest version that is supported, just
         * the version that was compiled.
         * </pre>
         */
        java.lang.String getProtocolVersion();
        /**
         * <code>optional string protocolVersion = 15;</code>
         *
         * <pre>
         * This is the version of the protocol (.proto file) that the drive uses.
         * This is not the highest or lowest version that is supported, just
         * the version that was compiled.
         * </pre>
         */
        com.google.protobuf.ByteString
            getProtocolVersionBytes();

        // optional string protocolCompilationDate = 16;
        /**
         * <code>optional string protocolCompilationDate = 16;</code>
         */
        boolean hasProtocolCompilationDate();
        /**
         * <code>optional string protocolCompilationDate = 16;</code>
         */
        java.lang.String getProtocolCompilationDate();
        /**
         * <code>optional string protocolCompilationDate = 16;</code>
         */
        com.google.protobuf.ByteString
            getProtocolCompilationDateBytes();

        // optional string protocolSourceHash = 17;
        /**
         * <code>optional string protocolSourceHash = 17;</code>
         */
        boolean hasProtocolSourceHash();
        /**
         * <code>optional string protocolSourceHash = 17;</code>
         */
        java.lang.String getProtocolSourceHash();
        /**
         * <code>optional string protocolSourceHash = 17;</code>
         */
        com.google.protobuf.ByteString
            getProtocolSourceHashBytes();

        // repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface> 
            getInterfaceList();
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface getInterface(int index);
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        int getInterfaceCount();
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder> 
            getInterfaceOrBuilderList();
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder getInterfaceOrBuilder(
            int index);

        // optional int32 port = 10;
        /**
         * <code>optional int32 port = 10;</code>
         *
         * <pre>
         * these are the port numbers for the software
         * </pre>
         */
        boolean hasPort();
        /**
         * <code>optional int32 port = 10;</code>
         *
         * <pre>
         * these are the port numbers for the software
         * </pre>
         */
        int getPort();

        // optional int32 tlsPort = 11;
        /**
         * <code>optional int32 tlsPort = 11;</code>
         */
        boolean hasTlsPort();
        /**
         * <code>optional int32 tlsPort = 11;</code>
         */
        int getTlsPort();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Configuration}
       */
      public static final class Configuration extends
          com.google.protobuf.GeneratedMessage
          implements ConfigurationOrBuilder {
        // Use Configuration.newBuilder() to construct.
        private Configuration(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Configuration(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Configuration defaultInstance;
        public static Configuration getDefaultInstance() {
          return defaultInstance;
        }

        public Configuration getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Configuration(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 42: {
                  bitField0_ |= 0x00000001;
                  vendor_ = input.readBytes();
                  break;
                }
                case 50: {
                  bitField0_ |= 0x00000002;
                  model_ = input.readBytes();
                  break;
                }
                case 58: {
                  bitField0_ |= 0x00000004;
                  serialNumber_ = input.readBytes();
                  break;
                }
                case 66: {
                  bitField0_ |= 0x00000010;
                  version_ = input.readBytes();
                  break;
                }
                case 74: {
                  if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                    interface_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface>();
                    mutable_bitField0_ |= 0x00000400;
                  }
                  interface_.add(input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.PARSER, extensionRegistry));
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000400;
                  port_ = input.readInt32();
                  break;
                }
                case 88: {
                  bitField0_ |= 0x00000800;
                  tlsPort_ = input.readInt32();
                  break;
                }
                case 98: {
                  bitField0_ |= 0x00000020;
                  compilationDate_ = input.readBytes();
                  break;
                }
                case 106: {
                  bitField0_ |= 0x00000040;
                  sourceHash_ = input.readBytes();
                  break;
                }
                case 114: {
                  bitField0_ |= 0x00000008;
                  worldWideName_ = input.readBytes();
                  break;
                }
                case 122: {
                  bitField0_ |= 0x00000080;
                  protocolVersion_ = input.readBytes();
                  break;
                }
                case 130: {
                  bitField0_ |= 0x00000100;
                  protocolCompilationDate_ = input.readBytes();
                  break;
                }
                case 138: {
                  bitField0_ |= 0x00000200;
                  protocolSourceHash_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
              interface_ = java.util.Collections.unmodifiableList(interface_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Builder.class);
        }

        public static com.google.protobuf.Parser<Configuration> PARSER =
            new com.google.protobuf.AbstractParser<Configuration>() {
          public Configuration parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Configuration(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Configuration> getParserForType() {
          return PARSER;
        }

        public interface InterfaceOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

          // optional string name = 1;
          /**
           * <code>optional string name = 1;</code>
           */
          boolean hasName();
          /**
           * <code>optional string name = 1;</code>
           */
          java.lang.String getName();
          /**
           * <code>optional string name = 1;</code>
           */
          com.google.protobuf.ByteString
              getNameBytes();

          // optional bytes MAC = 2;
          /**
           * <code>optional bytes MAC = 2;</code>
           */
          boolean hasMAC();
          /**
           * <code>optional bytes MAC = 2;</code>
           */
          com.google.protobuf.ByteString getMAC();

          // optional bytes ipv4Address = 3;
          /**
           * <code>optional bytes ipv4Address = 3;</code>
           */
          boolean hasIpv4Address();
          /**
           * <code>optional bytes ipv4Address = 3;</code>
           */
          com.google.protobuf.ByteString getIpv4Address();

          // optional bytes ipv6Address = 4;
          /**
           * <code>optional bytes ipv6Address = 4;</code>
           */
          boolean hasIpv6Address();
          /**
           * <code>optional bytes ipv6Address = 4;</code>
           */
          com.google.protobuf.ByteString getIpv6Address();
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface}
         */
        public static final class Interface extends
            com.google.protobuf.GeneratedMessage
            implements InterfaceOrBuilder {
          // Use Interface.newBuilder() to construct.
          private Interface(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
          }
          private Interface(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

          private static final Interface defaultInstance;
          public static Interface getDefaultInstance() {
            return defaultInstance;
          }

          public Interface getDefaultInstanceForType() {
            return defaultInstance;
          }

          private final com.google.protobuf.UnknownFieldSet unknownFields;
          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
              getUnknownFields() {
            return this.unknownFields;
          }
          private Interface(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(input, unknownFields,
                                           extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 10: {
                    bitField0_ |= 0x00000001;
                    name_ = input.readBytes();
                    break;
                  }
                  case 18: {
                    bitField0_ |= 0x00000002;
                    mAC_ = input.readBytes();
                    break;
                  }
                  case 26: {
                    bitField0_ |= 0x00000004;
                    ipv4Address_ = input.readBytes();
                    break;
                  }
                  case 34: {
                    bitField0_ |= 0x00000008;
                    ipv6Address_ = input.readBytes();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this);
            } finally {
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder.class);
          }

          public static com.google.protobuf.Parser<Interface> PARSER =
              new com.google.protobuf.AbstractParser<Interface>() {
            public Interface parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Interface(input, extensionRegistry);
            }
          };

          @java.lang.Override
          public com.google.protobuf.Parser<Interface> getParserForType() {
            return PARSER;
          }

          private int bitField0_;
          // optional string name = 1;
          public static final int NAME_FIELD_NUMBER = 1;
          private java.lang.Object name_;
          /**
           * <code>optional string name = 1;</code>
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string name = 1;</code>
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
              return (java.lang.String) ref;
            } else {
              com.google.protobuf.ByteString bs = 
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                name_ = s;
              }
              return s;
            }
          }
          /**
           * <code>optional string name = 1;</code>
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof java.lang.String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }

          // optional bytes MAC = 2;
          public static final int MAC_FIELD_NUMBER = 2;
          private com.google.protobuf.ByteString mAC_;
          /**
           * <code>optional bytes MAC = 2;</code>
           */
          public boolean hasMAC() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional bytes MAC = 2;</code>
           */
          public com.google.protobuf.ByteString getMAC() {
            return mAC_;
          }

          // optional bytes ipv4Address = 3;
          public static final int IPV4ADDRESS_FIELD_NUMBER = 3;
          private com.google.protobuf.ByteString ipv4Address_;
          /**
           * <code>optional bytes ipv4Address = 3;</code>
           */
          public boolean hasIpv4Address() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional bytes ipv4Address = 3;</code>
           */
          public com.google.protobuf.ByteString getIpv4Address() {
            return ipv4Address_;
          }

          // optional bytes ipv6Address = 4;
          public static final int IPV6ADDRESS_FIELD_NUMBER = 4;
          private com.google.protobuf.ByteString ipv6Address_;
          /**
           * <code>optional bytes ipv6Address = 4;</code>
           */
          public boolean hasIpv6Address() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional bytes ipv6Address = 4;</code>
           */
          public com.google.protobuf.ByteString getIpv6Address() {
            return ipv6Address_;
          }

          private void initFields() {
            name_ = "";
            mAC_ = com.google.protobuf.ByteString.EMPTY;
            ipv4Address_ = com.google.protobuf.ByteString.EMPTY;
            ipv6Address_ = com.google.protobuf.ByteString.EMPTY;
          }
          private byte memoizedIsInitialized = -1;
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
          }

          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              output.writeBytes(1, getNameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              output.writeBytes(2, mAC_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              output.writeBytes(3, ipv4Address_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              output.writeBytes(4, ipv6Address_);
            }
            getUnknownFields().writeTo(output);
          }

          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(1, getNameBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(2, mAC_);
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(3, ipv4Address_);
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(4, ipv6Address_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
          }

          private static final long serialVersionUID = 0L;
          @java.lang.Override
          protected java.lang.Object writeReplace()
              throws java.io.ObjectStreamException {
            return super.writeReplace();
          }

          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }

          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder>
             implements com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder.class);
            }

            // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              }
            }
            private static Builder create() {
              return new Builder();
            }

            public Builder clear() {
              super.clear();
              name_ = "";
              bitField0_ = (bitField0_ & ~0x00000001);
              mAC_ = com.google.protobuf.ByteString.EMPTY;
              bitField0_ = (bitField0_ & ~0x00000002);
              ipv4Address_ = com.google.protobuf.ByteString.EMPTY;
              bitField0_ = (bitField0_ & ~0x00000004);
              ipv6Address_ = com.google.protobuf.ByteString.EMPTY;
              bitField0_ = (bitField0_ & ~0x00000008);
              return this;
            }

            public Builder clone() {
              return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_descriptor;
            }

            public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface getDefaultInstanceForType() {
              return com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.getDefaultInstance();
            }

            public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface build() {
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface buildPartial() {
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface(this);
              int from_bitField0_ = bitField0_;
              int to_bitField0_ = 0;
              if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                to_bitField0_ |= 0x00000001;
              }
              result.name_ = name_;
              if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                to_bitField0_ |= 0x00000002;
              }
              result.mAC_ = mAC_;
              if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                to_bitField0_ |= 0x00000004;
              }
              result.ipv4Address_ = ipv4Address_;
              if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                to_bitField0_ |= 0x00000008;
              }
              result.ipv6Address_ = ipv6Address_;
              result.bitField0_ = to_bitField0_;
              onBuilt();
              return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface) {
                return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface other) {
              if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.getDefaultInstance()) return this;
              if (other.hasName()) {
                bitField0_ |= 0x00000001;
                name_ = other.name_;
                onChanged();
              }
              if (other.hasMAC()) {
                setMAC(other.getMAC());
              }
              if (other.hasIpv4Address()) {
                setIpv4Address(other.getIpv4Address());
              }
              if (other.hasIpv6Address()) {
                setIpv6Address(other.getIpv6Address());
              }
              this.mergeUnknownFields(other.getUnknownFields());
              return this;
            }

            public final boolean isInitialized() {
              return true;
            }

            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface) e.getUnfinishedMessage();
                throw e;
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            private int bitField0_;

            // optional string name = 1;
            private java.lang.Object name_ = "";
            /**
             * <code>optional string name = 1;</code>
             */
            public boolean hasName() {
              return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional string name = 1;</code>
             */
            public java.lang.String getName() {
              java.lang.Object ref = name_;
              if (!(ref instanceof java.lang.String)) {
                java.lang.String s = ((com.google.protobuf.ByteString) ref)
                    .toStringUtf8();
                name_ = s;
                return s;
              } else {
                return (java.lang.String) ref;
              }
            }
            /**
             * <code>optional string name = 1;</code>
             */
            public com.google.protobuf.ByteString
                getNameBytes() {
              java.lang.Object ref = name_;
              if (ref instanceof String) {
                com.google.protobuf.ByteString b = 
                    com.google.protobuf.ByteString.copyFromUtf8(
                        (java.lang.String) ref);
                name_ = b;
                return b;
              } else {
                return (com.google.protobuf.ByteString) ref;
              }
            }
            /**
             * <code>optional string name = 1;</code>
             */
            public Builder setName(
                java.lang.String value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
              name_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional string name = 1;</code>
             */
            public Builder clearName() {
              bitField0_ = (bitField0_ & ~0x00000001);
              name_ = getDefaultInstance().getName();
              onChanged();
              return this;
            }
            /**
             * <code>optional string name = 1;</code>
             */
            public Builder setNameBytes(
                com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
              name_ = value;
              onChanged();
              return this;
            }

            // optional bytes MAC = 2;
            private com.google.protobuf.ByteString mAC_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>optional bytes MAC = 2;</code>
             */
            public boolean hasMAC() {
              return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional bytes MAC = 2;</code>
             */
            public com.google.protobuf.ByteString getMAC() {
              return mAC_;
            }
            /**
             * <code>optional bytes MAC = 2;</code>
             */
            public Builder setMAC(com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
              mAC_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional bytes MAC = 2;</code>
             */
            public Builder clearMAC() {
              bitField0_ = (bitField0_ & ~0x00000002);
              mAC_ = getDefaultInstance().getMAC();
              onChanged();
              return this;
            }

            // optional bytes ipv4Address = 3;
            private com.google.protobuf.ByteString ipv4Address_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>optional bytes ipv4Address = 3;</code>
             */
            public boolean hasIpv4Address() {
              return ((bitField0_ & 0x00000004) == 0x00000004);
            }
            /**
             * <code>optional bytes ipv4Address = 3;</code>
             */
            public com.google.protobuf.ByteString getIpv4Address() {
              return ipv4Address_;
            }
            /**
             * <code>optional bytes ipv4Address = 3;</code>
             */
            public Builder setIpv4Address(com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
              ipv4Address_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional bytes ipv4Address = 3;</code>
             */
            public Builder clearIpv4Address() {
              bitField0_ = (bitField0_ & ~0x00000004);
              ipv4Address_ = getDefaultInstance().getIpv4Address();
              onChanged();
              return this;
            }

            // optional bytes ipv6Address = 4;
            private com.google.protobuf.ByteString ipv6Address_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>optional bytes ipv6Address = 4;</code>
             */
            public boolean hasIpv6Address() {
              return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional bytes ipv6Address = 4;</code>
             */
            public com.google.protobuf.ByteString getIpv6Address() {
              return ipv6Address_;
            }
            /**
             * <code>optional bytes ipv6Address = 4;</code>
             */
            public Builder setIpv6Address(com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
              ipv6Address_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional bytes ipv6Address = 4;</code>
             */
            public Builder clearIpv6Address() {
              bitField0_ = (bitField0_ & ~0x00000008);
              ipv6Address_ = getDefaultInstance().getIpv6Address();
              onChanged();
              return this;
            }

            // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface)
          }

          static {
            defaultInstance = new Interface(true);
            defaultInstance.initFields();
          }

          // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface)
        }

        private int bitField0_;
        // optional string vendor = 5;
        public static final int VENDOR_FIELD_NUMBER = 5;
        private java.lang.Object vendor_;
        /**
         * <code>optional string vendor = 5;</code>
         *
         * <pre>
         * name of the vendor. Should be "Seagate"
         * </pre>
         */
        public boolean hasVendor() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional string vendor = 5;</code>
         *
         * <pre>
         * name of the vendor. Should be "Seagate"
         * </pre>
         */
        public java.lang.String getVendor() {
          java.lang.Object ref = vendor_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              vendor_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string vendor = 5;</code>
         *
         * <pre>
         * name of the vendor. Should be "Seagate"
         * </pre>
         */
        public com.google.protobuf.ByteString
            getVendorBytes() {
          java.lang.Object ref = vendor_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            vendor_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional string model = 6;
        public static final int MODEL_FIELD_NUMBER = 6;
        private java.lang.Object model_;
        /**
         * <code>optional string model = 6;</code>
         *
         * <pre>
         * The model of the device.
         * "Simulator" for the simulator.
         * </pre>
         */
        public boolean hasModel() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string model = 6;</code>
         *
         * <pre>
         * The model of the device.
         * "Simulator" for the simulator.
         * </pre>
         */
        public java.lang.String getModel() {
          java.lang.Object ref = model_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              model_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string model = 6;</code>
         *
         * <pre>
         * The model of the device.
         * "Simulator" for the simulator.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getModelBytes() {
          java.lang.Object ref = model_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            model_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional bytes serialNumber = 7;
        public static final int SERIALNUMBER_FIELD_NUMBER = 7;
        private com.google.protobuf.ByteString serialNumber_;
        /**
         * <code>optional bytes serialNumber = 7;</code>
         *
         * <pre>
         * Device Serial number (SN)
         * </pre>
         */
        public boolean hasSerialNumber() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional bytes serialNumber = 7;</code>
         *
         * <pre>
         * Device Serial number (SN)
         * </pre>
         */
        public com.google.protobuf.ByteString getSerialNumber() {
          return serialNumber_;
        }

        // optional bytes worldWideName = 14;
        public static final int WORLDWIDENAME_FIELD_NUMBER = 14;
        private com.google.protobuf.ByteString worldWideName_;
        /**
         * <code>optional bytes worldWideName = 14;</code>
         *
         * <pre>
         * Device world wide name (WWN)
         * </pre>
         */
        public boolean hasWorldWideName() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bytes worldWideName = 14;</code>
         *
         * <pre>
         * Device world wide name (WWN)
         * </pre>
         */
        public com.google.protobuf.ByteString getWorldWideName() {
          return worldWideName_;
        }

        // optional string version = 8;
        public static final int VERSION_FIELD_NUMBER = 8;
        private java.lang.Object version_;
        /**
         * <code>optional string version = 8;</code>
         *
         * <pre>
         * This is the vendor specific version of the software on the drive in dot notation
         * if this is not set or ends with "x" this is test code.
         * </pre>
         */
        public boolean hasVersion() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string version = 8;</code>
         *
         * <pre>
         * This is the vendor specific version of the software on the drive in dot notation
         * if this is not set or ends with "x" this is test code.
         * </pre>
         */
        public java.lang.String getVersion() {
          java.lang.Object ref = version_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              version_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string version = 8;</code>
         *
         * <pre>
         * This is the vendor specific version of the software on the drive in dot notation
         * if this is not set or ends with "x" this is test code.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getVersionBytes() {
          java.lang.Object ref = version_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            version_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional string compilationDate = 12;
        public static final int COMPILATIONDATE_FIELD_NUMBER = 12;
        private java.lang.Object compilationDate_;
        /**
         * <code>optional string compilationDate = 12;</code>
         */
        public boolean hasCompilationDate() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional string compilationDate = 12;</code>
         */
        public java.lang.String getCompilationDate() {
          java.lang.Object ref = compilationDate_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              compilationDate_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string compilationDate = 12;</code>
         */
        public com.google.protobuf.ByteString
            getCompilationDateBytes() {
          java.lang.Object ref = compilationDate_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            compilationDate_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional string sourceHash = 13;
        public static final int SOURCEHASH_FIELD_NUMBER = 13;
        private java.lang.Object sourceHash_;
        /**
         * <code>optional string sourceHash = 13;</code>
         */
        public boolean hasSourceHash() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional string sourceHash = 13;</code>
         */
        public java.lang.String getSourceHash() {
          java.lang.Object ref = sourceHash_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              sourceHash_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string sourceHash = 13;</code>
         */
        public com.google.protobuf.ByteString
            getSourceHashBytes() {
          java.lang.Object ref = sourceHash_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            sourceHash_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional string protocolVersion = 15;
        public static final int PROTOCOLVERSION_FIELD_NUMBER = 15;
        private java.lang.Object protocolVersion_;
        /**
         * <code>optional string protocolVersion = 15;</code>
         *
         * <pre>
         * This is the version of the protocol (.proto file) that the drive uses.
         * This is not the highest or lowest version that is supported, just
         * the version that was compiled.
         * </pre>
         */
        public boolean hasProtocolVersion() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional string protocolVersion = 15;</code>
         *
         * <pre>
         * This is the version of the protocol (.proto file) that the drive uses.
         * This is not the highest or lowest version that is supported, just
         * the version that was compiled.
         * </pre>
         */
        public java.lang.String getProtocolVersion() {
          java.lang.Object ref = protocolVersion_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              protocolVersion_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string protocolVersion = 15;</code>
         *
         * <pre>
         * This is the version of the protocol (.proto file) that the drive uses.
         * This is not the highest or lowest version that is supported, just
         * the version that was compiled.
         * </pre>
         */
        public com.google.protobuf.ByteString
            getProtocolVersionBytes() {
          java.lang.Object ref = protocolVersion_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            protocolVersion_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional string protocolCompilationDate = 16;
        public static final int PROTOCOLCOMPILATIONDATE_FIELD_NUMBER = 16;
        private java.lang.Object protocolCompilationDate_;
        /**
         * <code>optional string protocolCompilationDate = 16;</code>
         */
        public boolean hasProtocolCompilationDate() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional string protocolCompilationDate = 16;</code>
         */
        public java.lang.String getProtocolCompilationDate() {
          java.lang.Object ref = protocolCompilationDate_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              protocolCompilationDate_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string protocolCompilationDate = 16;</code>
         */
        public com.google.protobuf.ByteString
            getProtocolCompilationDateBytes() {
          java.lang.Object ref = protocolCompilationDate_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            protocolCompilationDate_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // optional string protocolSourceHash = 17;
        public static final int PROTOCOLSOURCEHASH_FIELD_NUMBER = 17;
        private java.lang.Object protocolSourceHash_;
        /**
         * <code>optional string protocolSourceHash = 17;</code>
         */
        public boolean hasProtocolSourceHash() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional string protocolSourceHash = 17;</code>
         */
        public java.lang.String getProtocolSourceHash() {
          java.lang.Object ref = protocolSourceHash_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              protocolSourceHash_ = s;
            }
            return s;
          }
        }
        /**
         * <code>optional string protocolSourceHash = 17;</code>
         */
        public com.google.protobuf.ByteString
            getProtocolSourceHashBytes() {
          java.lang.Object ref = protocolSourceHash_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            protocolSourceHash_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        // repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;
        public static final int INTERFACE_FIELD_NUMBER = 9;
        private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface> interface_;
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface> getInterfaceList() {
          return interface_;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder> 
            getInterfaceOrBuilderList() {
          return interface_;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        public int getInterfaceCount() {
          return interface_.size();
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface getInterface(int index) {
          return interface_.get(index);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
         *
         * <pre>
         * the interfaces for this device. one per interface.
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder getInterfaceOrBuilder(
            int index) {
          return interface_.get(index);
        }

        // optional int32 port = 10;
        public static final int PORT_FIELD_NUMBER = 10;
        private int port_;
        /**
         * <code>optional int32 port = 10;</code>
         *
         * <pre>
         * these are the port numbers for the software
         * </pre>
         */
        public boolean hasPort() {
          return ((bitField0_ & 0x00000400) == 0x00000400);
        }
        /**
         * <code>optional int32 port = 10;</code>
         *
         * <pre>
         * these are the port numbers for the software
         * </pre>
         */
        public int getPort() {
          return port_;
        }

        // optional int32 tlsPort = 11;
        public static final int TLSPORT_FIELD_NUMBER = 11;
        private int tlsPort_;
        /**
         * <code>optional int32 tlsPort = 11;</code>
         */
        public boolean hasTlsPort() {
          return ((bitField0_ & 0x00000800) == 0x00000800);
        }
        /**
         * <code>optional int32 tlsPort = 11;</code>
         */
        public int getTlsPort() {
          return tlsPort_;
        }

        private void initFields() {
          vendor_ = "";
          model_ = "";
          serialNumber_ = com.google.protobuf.ByteString.EMPTY;
          worldWideName_ = com.google.protobuf.ByteString.EMPTY;
          version_ = "";
          compilationDate_ = "";
          sourceHash_ = "";
          protocolVersion_ = "";
          protocolCompilationDate_ = "";
          protocolSourceHash_ = "";
          interface_ = java.util.Collections.emptyList();
          port_ = 0;
          tlsPort_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(5, getVendorBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(6, getModelBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeBytes(7, serialNumber_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeBytes(8, getVersionBytes());
          }
          for (int i = 0; i < interface_.size(); i++) {
            output.writeMessage(9, interface_.get(i));
          }
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            output.writeInt32(10, port_);
          }
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            output.writeInt32(11, tlsPort_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeBytes(12, getCompilationDateBytes());
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            output.writeBytes(13, getSourceHashBytes());
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeBytes(14, worldWideName_);
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            output.writeBytes(15, getProtocolVersionBytes());
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            output.writeBytes(16, getProtocolCompilationDateBytes());
          }
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            output.writeBytes(17, getProtocolSourceHashBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(5, getVendorBytes());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(6, getModelBytes());
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(7, serialNumber_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(8, getVersionBytes());
          }
          for (int i = 0; i < interface_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(9, interface_.get(i));
          }
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(10, port_);
          }
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(11, tlsPort_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(12, getCompilationDateBytes());
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(13, getSourceHashBytes());
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(14, worldWideName_);
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(15, getProtocolVersionBytes());
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(16, getProtocolCompilationDateBytes());
          }
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(17, getProtocolSourceHashBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Configuration}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.GetLog.ConfigurationOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getInterfaceFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            vendor_ = "";
            bitField0_ = (bitField0_ & ~0x00000001);
            model_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            serialNumber_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000004);
            worldWideName_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000008);
            version_ = "";
            bitField0_ = (bitField0_ & ~0x00000010);
            compilationDate_ = "";
            bitField0_ = (bitField0_ & ~0x00000020);
            sourceHash_ = "";
            bitField0_ = (bitField0_ & ~0x00000040);
            protocolVersion_ = "";
            bitField0_ = (bitField0_ & ~0x00000080);
            protocolCompilationDate_ = "";
            bitField0_ = (bitField0_ & ~0x00000100);
            protocolSourceHash_ = "";
            bitField0_ = (bitField0_ & ~0x00000200);
            if (interfaceBuilder_ == null) {
              interface_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              interfaceBuilder_.clear();
            }
            port_ = 0;
            bitField0_ = (bitField0_ & ~0x00000800);
            tlsPort_ = 0;
            bitField0_ = (bitField0_ & ~0x00001000);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration build() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.vendor_ = vendor_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.model_ = model_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.serialNumber_ = serialNumber_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.worldWideName_ = worldWideName_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.version_ = version_;
            if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
              to_bitField0_ |= 0x00000020;
            }
            result.compilationDate_ = compilationDate_;
            if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
              to_bitField0_ |= 0x00000040;
            }
            result.sourceHash_ = sourceHash_;
            if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
              to_bitField0_ |= 0x00000080;
            }
            result.protocolVersion_ = protocolVersion_;
            if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
              to_bitField0_ |= 0x00000100;
            }
            result.protocolCompilationDate_ = protocolCompilationDate_;
            if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
              to_bitField0_ |= 0x00000200;
            }
            result.protocolSourceHash_ = protocolSourceHash_;
            if (interfaceBuilder_ == null) {
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                interface_ = java.util.Collections.unmodifiableList(interface_);
                bitField0_ = (bitField0_ & ~0x00000400);
              }
              result.interface_ = interface_;
            } else {
              result.interface_ = interfaceBuilder_.build();
            }
            if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
              to_bitField0_ |= 0x00000400;
            }
            result.port_ = port_;
            if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
              to_bitField0_ |= 0x00000800;
            }
            result.tlsPort_ = tlsPort_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.getDefaultInstance()) return this;
            if (other.hasVendor()) {
              bitField0_ |= 0x00000001;
              vendor_ = other.vendor_;
              onChanged();
            }
            if (other.hasModel()) {
              bitField0_ |= 0x00000002;
              model_ = other.model_;
              onChanged();
            }
            if (other.hasSerialNumber()) {
              setSerialNumber(other.getSerialNumber());
            }
            if (other.hasWorldWideName()) {
              setWorldWideName(other.getWorldWideName());
            }
            if (other.hasVersion()) {
              bitField0_ |= 0x00000010;
              version_ = other.version_;
              onChanged();
            }
            if (other.hasCompilationDate()) {
              bitField0_ |= 0x00000020;
              compilationDate_ = other.compilationDate_;
              onChanged();
            }
            if (other.hasSourceHash()) {
              bitField0_ |= 0x00000040;
              sourceHash_ = other.sourceHash_;
              onChanged();
            }
            if (other.hasProtocolVersion()) {
              bitField0_ |= 0x00000080;
              protocolVersion_ = other.protocolVersion_;
              onChanged();
            }
            if (other.hasProtocolCompilationDate()) {
              bitField0_ |= 0x00000100;
              protocolCompilationDate_ = other.protocolCompilationDate_;
              onChanged();
            }
            if (other.hasProtocolSourceHash()) {
              bitField0_ |= 0x00000200;
              protocolSourceHash_ = other.protocolSourceHash_;
              onChanged();
            }
            if (interfaceBuilder_ == null) {
              if (!other.interface_.isEmpty()) {
                if (interface_.isEmpty()) {
                  interface_ = other.interface_;
                  bitField0_ = (bitField0_ & ~0x00000400);
                } else {
                  ensureInterfaceIsMutable();
                  interface_.addAll(other.interface_);
                }
                onChanged();
              }
            } else {
              if (!other.interface_.isEmpty()) {
                if (interfaceBuilder_.isEmpty()) {
                  interfaceBuilder_.dispose();
                  interfaceBuilder_ = null;
                  interface_ = other.interface_;
                  bitField0_ = (bitField0_ & ~0x00000400);
                  interfaceBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getInterfaceFieldBuilder() : null;
                } else {
                  interfaceBuilder_.addAllMessages(other.interface_);
                }
              }
            }
            if (other.hasPort()) {
              setPort(other.getPort());
            }
            if (other.hasTlsPort()) {
              setTlsPort(other.getTlsPort());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional string vendor = 5;
          private java.lang.Object vendor_ = "";
          /**
           * <code>optional string vendor = 5;</code>
           *
           * <pre>
           * name of the vendor. Should be "Seagate"
           * </pre>
           */
          public boolean hasVendor() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional string vendor = 5;</code>
           *
           * <pre>
           * name of the vendor. Should be "Seagate"
           * </pre>
           */
          public java.lang.String getVendor() {
            java.lang.Object ref = vendor_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              vendor_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string vendor = 5;</code>
           *
           * <pre>
           * name of the vendor. Should be "Seagate"
           * </pre>
           */
          public com.google.protobuf.ByteString
              getVendorBytes() {
            java.lang.Object ref = vendor_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              vendor_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string vendor = 5;</code>
           *
           * <pre>
           * name of the vendor. Should be "Seagate"
           * </pre>
           */
          public Builder setVendor(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            vendor_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string vendor = 5;</code>
           *
           * <pre>
           * name of the vendor. Should be "Seagate"
           * </pre>
           */
          public Builder clearVendor() {
            bitField0_ = (bitField0_ & ~0x00000001);
            vendor_ = getDefaultInstance().getVendor();
            onChanged();
            return this;
          }
          /**
           * <code>optional string vendor = 5;</code>
           *
           * <pre>
           * name of the vendor. Should be "Seagate"
           * </pre>
           */
          public Builder setVendorBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            vendor_ = value;
            onChanged();
            return this;
          }

          // optional string model = 6;
          private java.lang.Object model_ = "";
          /**
           * <code>optional string model = 6;</code>
           *
           * <pre>
           * The model of the device.
           * "Simulator" for the simulator.
           * </pre>
           */
          public boolean hasModel() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional string model = 6;</code>
           *
           * <pre>
           * The model of the device.
           * "Simulator" for the simulator.
           * </pre>
           */
          public java.lang.String getModel() {
            java.lang.Object ref = model_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              model_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string model = 6;</code>
           *
           * <pre>
           * The model of the device.
           * "Simulator" for the simulator.
           * </pre>
           */
          public com.google.protobuf.ByteString
              getModelBytes() {
            java.lang.Object ref = model_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              model_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string model = 6;</code>
           *
           * <pre>
           * The model of the device.
           * "Simulator" for the simulator.
           * </pre>
           */
          public Builder setModel(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            model_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string model = 6;</code>
           *
           * <pre>
           * The model of the device.
           * "Simulator" for the simulator.
           * </pre>
           */
          public Builder clearModel() {
            bitField0_ = (bitField0_ & ~0x00000002);
            model_ = getDefaultInstance().getModel();
            onChanged();
            return this;
          }
          /**
           * <code>optional string model = 6;</code>
           *
           * <pre>
           * The model of the device.
           * "Simulator" for the simulator.
           * </pre>
           */
          public Builder setModelBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            model_ = value;
            onChanged();
            return this;
          }

          // optional bytes serialNumber = 7;
          private com.google.protobuf.ByteString serialNumber_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes serialNumber = 7;</code>
           *
           * <pre>
           * Device Serial number (SN)
           * </pre>
           */
          public boolean hasSerialNumber() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional bytes serialNumber = 7;</code>
           *
           * <pre>
           * Device Serial number (SN)
           * </pre>
           */
          public com.google.protobuf.ByteString getSerialNumber() {
            return serialNumber_;
          }
          /**
           * <code>optional bytes serialNumber = 7;</code>
           *
           * <pre>
           * Device Serial number (SN)
           * </pre>
           */
          public Builder setSerialNumber(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
            serialNumber_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes serialNumber = 7;</code>
           *
           * <pre>
           * Device Serial number (SN)
           * </pre>
           */
          public Builder clearSerialNumber() {
            bitField0_ = (bitField0_ & ~0x00000004);
            serialNumber_ = getDefaultInstance().getSerialNumber();
            onChanged();
            return this;
          }

          // optional bytes worldWideName = 14;
          private com.google.protobuf.ByteString worldWideName_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes worldWideName = 14;</code>
           *
           * <pre>
           * Device world wide name (WWN)
           * </pre>
           */
          public boolean hasWorldWideName() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional bytes worldWideName = 14;</code>
           *
           * <pre>
           * Device world wide name (WWN)
           * </pre>
           */
          public com.google.protobuf.ByteString getWorldWideName() {
            return worldWideName_;
          }
          /**
           * <code>optional bytes worldWideName = 14;</code>
           *
           * <pre>
           * Device world wide name (WWN)
           * </pre>
           */
          public Builder setWorldWideName(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
            worldWideName_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes worldWideName = 14;</code>
           *
           * <pre>
           * Device world wide name (WWN)
           * </pre>
           */
          public Builder clearWorldWideName() {
            bitField0_ = (bitField0_ & ~0x00000008);
            worldWideName_ = getDefaultInstance().getWorldWideName();
            onChanged();
            return this;
          }

          // optional string version = 8;
          private java.lang.Object version_ = "";
          /**
           * <code>optional string version = 8;</code>
           *
           * <pre>
           * This is the vendor specific version of the software on the drive in dot notation
           * if this is not set or ends with "x" this is test code.
           * </pre>
           */
          public boolean hasVersion() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional string version = 8;</code>
           *
           * <pre>
           * This is the vendor specific version of the software on the drive in dot notation
           * if this is not set or ends with "x" this is test code.
           * </pre>
           */
          public java.lang.String getVersion() {
            java.lang.Object ref = version_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              version_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string version = 8;</code>
           *
           * <pre>
           * This is the vendor specific version of the software on the drive in dot notation
           * if this is not set or ends with "x" this is test code.
           * </pre>
           */
          public com.google.protobuf.ByteString
              getVersionBytes() {
            java.lang.Object ref = version_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              version_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string version = 8;</code>
           *
           * <pre>
           * This is the vendor specific version of the software on the drive in dot notation
           * if this is not set or ends with "x" this is test code.
           * </pre>
           */
          public Builder setVersion(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            version_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string version = 8;</code>
           *
           * <pre>
           * This is the vendor specific version of the software on the drive in dot notation
           * if this is not set or ends with "x" this is test code.
           * </pre>
           */
          public Builder clearVersion() {
            bitField0_ = (bitField0_ & ~0x00000010);
            version_ = getDefaultInstance().getVersion();
            onChanged();
            return this;
          }
          /**
           * <code>optional string version = 8;</code>
           *
           * <pre>
           * This is the vendor specific version of the software on the drive in dot notation
           * if this is not set or ends with "x" this is test code.
           * </pre>
           */
          public Builder setVersionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
            version_ = value;
            onChanged();
            return this;
          }

          // optional string compilationDate = 12;
          private java.lang.Object compilationDate_ = "";
          /**
           * <code>optional string compilationDate = 12;</code>
           */
          public boolean hasCompilationDate() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional string compilationDate = 12;</code>
           */
          public java.lang.String getCompilationDate() {
            java.lang.Object ref = compilationDate_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              compilationDate_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string compilationDate = 12;</code>
           */
          public com.google.protobuf.ByteString
              getCompilationDateBytes() {
            java.lang.Object ref = compilationDate_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              compilationDate_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string compilationDate = 12;</code>
           */
          public Builder setCompilationDate(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
            compilationDate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string compilationDate = 12;</code>
           */
          public Builder clearCompilationDate() {
            bitField0_ = (bitField0_ & ~0x00000020);
            compilationDate_ = getDefaultInstance().getCompilationDate();
            onChanged();
            return this;
          }
          /**
           * <code>optional string compilationDate = 12;</code>
           */
          public Builder setCompilationDateBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
            compilationDate_ = value;
            onChanged();
            return this;
          }

          // optional string sourceHash = 13;
          private java.lang.Object sourceHash_ = "";
          /**
           * <code>optional string sourceHash = 13;</code>
           */
          public boolean hasSourceHash() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
          }
          /**
           * <code>optional string sourceHash = 13;</code>
           */
          public java.lang.String getSourceHash() {
            java.lang.Object ref = sourceHash_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              sourceHash_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string sourceHash = 13;</code>
           */
          public com.google.protobuf.ByteString
              getSourceHashBytes() {
            java.lang.Object ref = sourceHash_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              sourceHash_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string sourceHash = 13;</code>
           */
          public Builder setSourceHash(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
            sourceHash_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string sourceHash = 13;</code>
           */
          public Builder clearSourceHash() {
            bitField0_ = (bitField0_ & ~0x00000040);
            sourceHash_ = getDefaultInstance().getSourceHash();
            onChanged();
            return this;
          }
          /**
           * <code>optional string sourceHash = 13;</code>
           */
          public Builder setSourceHashBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
            sourceHash_ = value;
            onChanged();
            return this;
          }

          // optional string protocolVersion = 15;
          private java.lang.Object protocolVersion_ = "";
          /**
           * <code>optional string protocolVersion = 15;</code>
           *
           * <pre>
           * This is the version of the protocol (.proto file) that the drive uses.
           * This is not the highest or lowest version that is supported, just
           * the version that was compiled.
           * </pre>
           */
          public boolean hasProtocolVersion() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
          }
          /**
           * <code>optional string protocolVersion = 15;</code>
           *
           * <pre>
           * This is the version of the protocol (.proto file) that the drive uses.
           * This is not the highest or lowest version that is supported, just
           * the version that was compiled.
           * </pre>
           */
          public java.lang.String getProtocolVersion() {
            java.lang.Object ref = protocolVersion_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              protocolVersion_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string protocolVersion = 15;</code>
           *
           * <pre>
           * This is the version of the protocol (.proto file) that the drive uses.
           * This is not the highest or lowest version that is supported, just
           * the version that was compiled.
           * </pre>
           */
          public com.google.protobuf.ByteString
              getProtocolVersionBytes() {
            java.lang.Object ref = protocolVersion_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              protocolVersion_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string protocolVersion = 15;</code>
           *
           * <pre>
           * This is the version of the protocol (.proto file) that the drive uses.
           * This is not the highest or lowest version that is supported, just
           * the version that was compiled.
           * </pre>
           */
          public Builder setProtocolVersion(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
            protocolVersion_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string protocolVersion = 15;</code>
           *
           * <pre>
           * This is the version of the protocol (.proto file) that the drive uses.
           * This is not the highest or lowest version that is supported, just
           * the version that was compiled.
           * </pre>
           */
          public Builder clearProtocolVersion() {
            bitField0_ = (bitField0_ & ~0x00000080);
            protocolVersion_ = getDefaultInstance().getProtocolVersion();
            onChanged();
            return this;
          }
          /**
           * <code>optional string protocolVersion = 15;</code>
           *
           * <pre>
           * This is the version of the protocol (.proto file) that the drive uses.
           * This is not the highest or lowest version that is supported, just
           * the version that was compiled.
           * </pre>
           */
          public Builder setProtocolVersionBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
            protocolVersion_ = value;
            onChanged();
            return this;
          }

          // optional string protocolCompilationDate = 16;
          private java.lang.Object protocolCompilationDate_ = "";
          /**
           * <code>optional string protocolCompilationDate = 16;</code>
           */
          public boolean hasProtocolCompilationDate() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
          }
          /**
           * <code>optional string protocolCompilationDate = 16;</code>
           */
          public java.lang.String getProtocolCompilationDate() {
            java.lang.Object ref = protocolCompilationDate_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              protocolCompilationDate_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string protocolCompilationDate = 16;</code>
           */
          public com.google.protobuf.ByteString
              getProtocolCompilationDateBytes() {
            java.lang.Object ref = protocolCompilationDate_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              protocolCompilationDate_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string protocolCompilationDate = 16;</code>
           */
          public Builder setProtocolCompilationDate(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
            protocolCompilationDate_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string protocolCompilationDate = 16;</code>
           */
          public Builder clearProtocolCompilationDate() {
            bitField0_ = (bitField0_ & ~0x00000100);
            protocolCompilationDate_ = getDefaultInstance().getProtocolCompilationDate();
            onChanged();
            return this;
          }
          /**
           * <code>optional string protocolCompilationDate = 16;</code>
           */
          public Builder setProtocolCompilationDateBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
            protocolCompilationDate_ = value;
            onChanged();
            return this;
          }

          // optional string protocolSourceHash = 17;
          private java.lang.Object protocolSourceHash_ = "";
          /**
           * <code>optional string protocolSourceHash = 17;</code>
           */
          public boolean hasProtocolSourceHash() {
            return ((bitField0_ & 0x00000200) == 0x00000200);
          }
          /**
           * <code>optional string protocolSourceHash = 17;</code>
           */
          public java.lang.String getProtocolSourceHash() {
            java.lang.Object ref = protocolSourceHash_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              protocolSourceHash_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>optional string protocolSourceHash = 17;</code>
           */
          public com.google.protobuf.ByteString
              getProtocolSourceHashBytes() {
            java.lang.Object ref = protocolSourceHash_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              protocolSourceHash_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>optional string protocolSourceHash = 17;</code>
           */
          public Builder setProtocolSourceHash(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
            protocolSourceHash_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional string protocolSourceHash = 17;</code>
           */
          public Builder clearProtocolSourceHash() {
            bitField0_ = (bitField0_ & ~0x00000200);
            protocolSourceHash_ = getDefaultInstance().getProtocolSourceHash();
            onChanged();
            return this;
          }
          /**
           * <code>optional string protocolSourceHash = 17;</code>
           */
          public Builder setProtocolSourceHashBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
            protocolSourceHash_ = value;
            onChanged();
            return this;
          }

          // repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;
          private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface> interface_ =
            java.util.Collections.emptyList();
          private void ensureInterfaceIsMutable() {
            if (!((bitField0_ & 0x00000400) == 0x00000400)) {
              interface_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface>(interface_);
              bitField0_ |= 0x00000400;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder> interfaceBuilder_;

          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface> getInterfaceList() {
            if (interfaceBuilder_ == null) {
              return java.util.Collections.unmodifiableList(interface_);
            } else {
              return interfaceBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public int getInterfaceCount() {
            if (interfaceBuilder_ == null) {
              return interface_.size();
            } else {
              return interfaceBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface getInterface(int index) {
            if (interfaceBuilder_ == null) {
              return interface_.get(index);
            } else {
              return interfaceBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder setInterface(
              int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface value) {
            if (interfaceBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureInterfaceIsMutable();
              interface_.set(index, value);
              onChanged();
            } else {
              interfaceBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder setInterface(
              int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder builderForValue) {
            if (interfaceBuilder_ == null) {
              ensureInterfaceIsMutable();
              interface_.set(index, builderForValue.build());
              onChanged();
            } else {
              interfaceBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder addInterface(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface value) {
            if (interfaceBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureInterfaceIsMutable();
              interface_.add(value);
              onChanged();
            } else {
              interfaceBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder addInterface(
              int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface value) {
            if (interfaceBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureInterfaceIsMutable();
              interface_.add(index, value);
              onChanged();
            } else {
              interfaceBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder addInterface(
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder builderForValue) {
            if (interfaceBuilder_ == null) {
              ensureInterfaceIsMutable();
              interface_.add(builderForValue.build());
              onChanged();
            } else {
              interfaceBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder addInterface(
              int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder builderForValue) {
            if (interfaceBuilder_ == null) {
              ensureInterfaceIsMutable();
              interface_.add(index, builderForValue.build());
              onChanged();
            } else {
              interfaceBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder addAllInterface(
              java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface> values) {
            if (interfaceBuilder_ == null) {
              ensureInterfaceIsMutable();
              super.addAll(values, interface_);
              onChanged();
            } else {
              interfaceBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder clearInterface() {
            if (interfaceBuilder_ == null) {
              interface_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000400);
              onChanged();
            } else {
              interfaceBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public Builder removeInterface(int index) {
            if (interfaceBuilder_ == null) {
              ensureInterfaceIsMutable();
              interface_.remove(index);
              onChanged();
            } else {
              interfaceBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder getInterfaceBuilder(
              int index) {
            return getInterfaceFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder getInterfaceOrBuilder(
              int index) {
            if (interfaceBuilder_ == null) {
              return interface_.get(index);  } else {
              return interfaceBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder> 
               getInterfaceOrBuilderList() {
            if (interfaceBuilder_ != null) {
              return interfaceBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(interface_);
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder addInterfaceBuilder() {
            return getInterfaceFieldBuilder().addBuilder(
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.getDefaultInstance());
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder addInterfaceBuilder(
              int index) {
            return getInterfaceFieldBuilder().addBuilder(
                index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.getDefaultInstance());
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Configuration.Interface interface = 9;</code>
           *
           * <pre>
           * the interfaces for this device. one per interface.
           * </pre>
           */
          public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder> 
               getInterfaceBuilderList() {
            return getInterfaceFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder> 
              getInterfaceFieldBuilder() {
            if (interfaceBuilder_ == null) {
              interfaceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Interface.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.InterfaceOrBuilder>(
                      interface_,
                      ((bitField0_ & 0x00000400) == 0x00000400),
                      getParentForChildren(),
                      isClean());
              interface_ = null;
            }
            return interfaceBuilder_;
          }

          // optional int32 port = 10;
          private int port_ ;
          /**
           * <code>optional int32 port = 10;</code>
           *
           * <pre>
           * these are the port numbers for the software
           * </pre>
           */
          public boolean hasPort() {
            return ((bitField0_ & 0x00000800) == 0x00000800);
          }
          /**
           * <code>optional int32 port = 10;</code>
           *
           * <pre>
           * these are the port numbers for the software
           * </pre>
           */
          public int getPort() {
            return port_;
          }
          /**
           * <code>optional int32 port = 10;</code>
           *
           * <pre>
           * these are the port numbers for the software
           * </pre>
           */
          public Builder setPort(int value) {
            bitField0_ |= 0x00000800;
            port_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 port = 10;</code>
           *
           * <pre>
           * these are the port numbers for the software
           * </pre>
           */
          public Builder clearPort() {
            bitField0_ = (bitField0_ & ~0x00000800);
            port_ = 0;
            onChanged();
            return this;
          }

          // optional int32 tlsPort = 11;
          private int tlsPort_ ;
          /**
           * <code>optional int32 tlsPort = 11;</code>
           */
          public boolean hasTlsPort() {
            return ((bitField0_ & 0x00001000) == 0x00001000);
          }
          /**
           * <code>optional int32 tlsPort = 11;</code>
           */
          public int getTlsPort() {
            return tlsPort_;
          }
          /**
           * <code>optional int32 tlsPort = 11;</code>
           */
          public Builder setTlsPort(int value) {
            bitField0_ |= 0x00001000;
            tlsPort_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int32 tlsPort = 11;</code>
           */
          public Builder clearTlsPort() {
            bitField0_ = (bitField0_ & ~0x00001000);
            tlsPort_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog.Configuration)
        }

        static {
          defaultInstance = new Configuration(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog.Configuration)
      }

      public interface StatisticsOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;</code>
         */
        boolean hasMessageType();
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;</code>
         */
        com.seagate.kinetic.proto.Kinetic.Message.MessageType getMessageType();

        // optional uint64 count = 4;
        /**
         * <code>optional uint64 count = 4;</code>
         *
         * <pre>
         * 2 and 3 are reserved, do not use
         * </pre>
         */
        boolean hasCount();
        /**
         * <code>optional uint64 count = 4;</code>
         *
         * <pre>
         * 2 and 3 are reserved, do not use
         * </pre>
         */
        long getCount();

        // optional uint64 bytes = 5;
        /**
         * <code>optional uint64 bytes = 5;</code>
         *
         * <pre>
         * This is the sum of the data that is in the data portion. This does not include t
         * the command description. For P2P operations, this is the amount of data moved between
         * drives
         * </pre>
         */
        boolean hasBytes();
        /**
         * <code>optional uint64 bytes = 5;</code>
         *
         * <pre>
         * This is the sum of the data that is in the data portion. This does not include t
         * the command description. For P2P operations, this is the amount of data moved between
         * drives
         * </pre>
         */
        long getBytes();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Statistics}
       *
       * <pre>
       * These numbers start at 0 when the drive starts up and never wraps or resets.
       * </pre>
       */
      public static final class Statistics extends
          com.google.protobuf.GeneratedMessage
          implements StatisticsOrBuilder {
        // Use Statistics.newBuilder() to construct.
        private Statistics(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Statistics(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Statistics defaultInstance;
        public static Statistics getDefaultInstance() {
          return defaultInstance;
        }

        public Statistics getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Statistics(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  com.seagate.kinetic.proto.Kinetic.Message.MessageType value = com.seagate.kinetic.proto.Kinetic.Message.MessageType.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    messageType_ = value;
                  }
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000002;
                  count_ = input.readUInt64();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000004;
                  bytes_ = input.readUInt64();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder.class);
        }

        public static com.google.protobuf.Parser<Statistics> PARSER =
            new com.google.protobuf.AbstractParser<Statistics>() {
          public Statistics parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Statistics(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Statistics> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;
        public static final int MESSAGETYPE_FIELD_NUMBER = 1;
        private com.seagate.kinetic.proto.Kinetic.Message.MessageType messageType_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;</code>
         */
        public boolean hasMessageType() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.MessageType getMessageType() {
          return messageType_;
        }

        // optional uint64 count = 4;
        public static final int COUNT_FIELD_NUMBER = 4;
        private long count_;
        /**
         * <code>optional uint64 count = 4;</code>
         *
         * <pre>
         * 2 and 3 are reserved, do not use
         * </pre>
         */
        public boolean hasCount() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint64 count = 4;</code>
         *
         * <pre>
         * 2 and 3 are reserved, do not use
         * </pre>
         */
        public long getCount() {
          return count_;
        }

        // optional uint64 bytes = 5;
        public static final int BYTES_FIELD_NUMBER = 5;
        private long bytes_;
        /**
         * <code>optional uint64 bytes = 5;</code>
         *
         * <pre>
         * This is the sum of the data that is in the data portion. This does not include t
         * the command description. For P2P operations, this is the amount of data moved between
         * drives
         * </pre>
         */
        public boolean hasBytes() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint64 bytes = 5;</code>
         *
         * <pre>
         * This is the sum of the data that is in the data portion. This does not include t
         * the command description. For P2P operations, this is the amount of data moved between
         * drives
         * </pre>
         */
        public long getBytes() {
          return bytes_;
        }

        private void initFields() {
          messageType_ = com.seagate.kinetic.proto.Kinetic.Message.MessageType.INVALID_MESSAGE_TYPE;
          count_ = 0L;
          bytes_ = 0L;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, messageType_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt64(4, count_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt64(5, bytes_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, messageType_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(4, count_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(5, bytes_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Statistics}
         *
         * <pre>
         * These numbers start at 0 when the drive starts up and never wraps or resets.
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            messageType_ = com.seagate.kinetic.proto.Kinetic.Message.MessageType.INVALID_MESSAGE_TYPE;
            bitField0_ = (bitField0_ & ~0x00000001);
            count_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000002);
            bytes_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000004);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics build() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.messageType_ = messageType_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.count_ = count_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.bytes_ = bytes_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.getDefaultInstance()) return this;
            if (other.hasMessageType()) {
              setMessageType(other.getMessageType());
            }
            if (other.hasCount()) {
              setCount(other.getCount());
            }
            if (other.hasBytes()) {
              setBytes(other.getBytes());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;
          private com.seagate.kinetic.proto.Kinetic.Message.MessageType messageType_ = com.seagate.kinetic.proto.Kinetic.Message.MessageType.INVALID_MESSAGE_TYPE;
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;</code>
           */
          public boolean hasMessageType() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;</code>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.MessageType getMessageType() {
            return messageType_;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;</code>
           */
          public Builder setMessageType(com.seagate.kinetic.proto.Kinetic.Message.MessageType value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            messageType_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.MessageType messageType = 1;</code>
           */
          public Builder clearMessageType() {
            bitField0_ = (bitField0_ & ~0x00000001);
            messageType_ = com.seagate.kinetic.proto.Kinetic.Message.MessageType.INVALID_MESSAGE_TYPE;
            onChanged();
            return this;
          }

          // optional uint64 count = 4;
          private long count_ ;
          /**
           * <code>optional uint64 count = 4;</code>
           *
           * <pre>
           * 2 and 3 are reserved, do not use
           * </pre>
           */
          public boolean hasCount() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint64 count = 4;</code>
           *
           * <pre>
           * 2 and 3 are reserved, do not use
           * </pre>
           */
          public long getCount() {
            return count_;
          }
          /**
           * <code>optional uint64 count = 4;</code>
           *
           * <pre>
           * 2 and 3 are reserved, do not use
           * </pre>
           */
          public Builder setCount(long value) {
            bitField0_ |= 0x00000002;
            count_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 count = 4;</code>
           *
           * <pre>
           * 2 and 3 are reserved, do not use
           * </pre>
           */
          public Builder clearCount() {
            bitField0_ = (bitField0_ & ~0x00000002);
            count_ = 0L;
            onChanged();
            return this;
          }

          // optional uint64 bytes = 5;
          private long bytes_ ;
          /**
           * <code>optional uint64 bytes = 5;</code>
           *
           * <pre>
           * This is the sum of the data that is in the data portion. This does not include t
           * the command description. For P2P operations, this is the amount of data moved between
           * drives
           * </pre>
           */
          public boolean hasBytes() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint64 bytes = 5;</code>
           *
           * <pre>
           * This is the sum of the data that is in the data portion. This does not include t
           * the command description. For P2P operations, this is the amount of data moved between
           * drives
           * </pre>
           */
          public long getBytes() {
            return bytes_;
          }
          /**
           * <code>optional uint64 bytes = 5;</code>
           *
           * <pre>
           * This is the sum of the data that is in the data portion. This does not include t
           * the command description. For P2P operations, this is the amount of data moved between
           * drives
           * </pre>
           */
          public Builder setBytes(long value) {
            bitField0_ |= 0x00000004;
            bytes_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint64 bytes = 5;</code>
           *
           * <pre>
           * This is the sum of the data that is in the data portion. This does not include t
           * the command description. For P2P operations, this is the amount of data moved between
           * drives
           * </pre>
           */
          public Builder clearBytes() {
            bitField0_ = (bitField0_ & ~0x00000004);
            bytes_ = 0L;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog.Statistics)
        }

        static {
          defaultInstance = new Statistics(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog.Statistics)
      }

      public interface LimitsOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional uint32 maxKeySize = 1;
        /**
         * <code>optional uint32 maxKeySize = 1;</code>
         */
        boolean hasMaxKeySize();
        /**
         * <code>optional uint32 maxKeySize = 1;</code>
         */
        int getMaxKeySize();

        // optional uint32 maxValueSize = 2;
        /**
         * <code>optional uint32 maxValueSize = 2;</code>
         */
        boolean hasMaxValueSize();
        /**
         * <code>optional uint32 maxValueSize = 2;</code>
         */
        int getMaxValueSize();

        // optional uint32 maxVersionSize = 3;
        /**
         * <code>optional uint32 maxVersionSize = 3;</code>
         */
        boolean hasMaxVersionSize();
        /**
         * <code>optional uint32 maxVersionSize = 3;</code>
         */
        int getMaxVersionSize();

        // optional uint32 maxTagSize = 4;
        /**
         * <code>optional uint32 maxTagSize = 4;</code>
         */
        boolean hasMaxTagSize();
        /**
         * <code>optional uint32 maxTagSize = 4;</code>
         */
        int getMaxTagSize();

        // optional uint32 maxConnections = 5;
        /**
         * <code>optional uint32 maxConnections = 5;</code>
         */
        boolean hasMaxConnections();
        /**
         * <code>optional uint32 maxConnections = 5;</code>
         */
        int getMaxConnections();

        // optional uint32 maxOutstandingReadRequests = 6;
        /**
         * <code>optional uint32 maxOutstandingReadRequests = 6;</code>
         */
        boolean hasMaxOutstandingReadRequests();
        /**
         * <code>optional uint32 maxOutstandingReadRequests = 6;</code>
         */
        int getMaxOutstandingReadRequests();

        // optional uint32 maxOutstandingWriteRequests = 7;
        /**
         * <code>optional uint32 maxOutstandingWriteRequests = 7;</code>
         */
        boolean hasMaxOutstandingWriteRequests();
        /**
         * <code>optional uint32 maxOutstandingWriteRequests = 7;</code>
         */
        int getMaxOutstandingWriteRequests();

        // optional uint32 maxMessageSize = 8;
        /**
         * <code>optional uint32 maxMessageSize = 8;</code>
         */
        boolean hasMaxMessageSize();
        /**
         * <code>optional uint32 maxMessageSize = 8;</code>
         */
        int getMaxMessageSize();

        // optional uint32 maxKeyRangeCount = 9;
        /**
         * <code>optional uint32 maxKeyRangeCount = 9;</code>
         */
        boolean hasMaxKeyRangeCount();
        /**
         * <code>optional uint32 maxKeyRangeCount = 9;</code>
         */
        int getMaxKeyRangeCount();

        // optional uint32 maxIdentityCount = 10;
        /**
         * <code>optional uint32 maxIdentityCount = 10;</code>
         */
        boolean hasMaxIdentityCount();
        /**
         * <code>optional uint32 maxIdentityCount = 10;</code>
         */
        int getMaxIdentityCount();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Limits}
       */
      public static final class Limits extends
          com.google.protobuf.GeneratedMessage
          implements LimitsOrBuilder {
        // Use Limits.newBuilder() to construct.
        private Limits(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Limits(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Limits defaultInstance;
        public static Limits getDefaultInstance() {
          return defaultInstance;
        }

        public Limits getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Limits(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  maxKeySize_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  maxValueSize_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  maxVersionSize_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  maxTagSize_ = input.readUInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  maxConnections_ = input.readUInt32();
                  break;
                }
                case 48: {
                  bitField0_ |= 0x00000020;
                  maxOutstandingReadRequests_ = input.readUInt32();
                  break;
                }
                case 56: {
                  bitField0_ |= 0x00000040;
                  maxOutstandingWriteRequests_ = input.readUInt32();
                  break;
                }
                case 64: {
                  bitField0_ |= 0x00000080;
                  maxMessageSize_ = input.readUInt32();
                  break;
                }
                case 72: {
                  bitField0_ |= 0x00000100;
                  maxKeyRangeCount_ = input.readUInt32();
                  break;
                }
                case 80: {
                  bitField0_ |= 0x00000200;
                  maxIdentityCount_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.Builder.class);
        }

        public static com.google.protobuf.Parser<Limits> PARSER =
            new com.google.protobuf.AbstractParser<Limits>() {
          public Limits parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Limits(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Limits> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional uint32 maxKeySize = 1;
        public static final int MAXKEYSIZE_FIELD_NUMBER = 1;
        private int maxKeySize_;
        /**
         * <code>optional uint32 maxKeySize = 1;</code>
         */
        public boolean hasMaxKeySize() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional uint32 maxKeySize = 1;</code>
         */
        public int getMaxKeySize() {
          return maxKeySize_;
        }

        // optional uint32 maxValueSize = 2;
        public static final int MAXVALUESIZE_FIELD_NUMBER = 2;
        private int maxValueSize_;
        /**
         * <code>optional uint32 maxValueSize = 2;</code>
         */
        public boolean hasMaxValueSize() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional uint32 maxValueSize = 2;</code>
         */
        public int getMaxValueSize() {
          return maxValueSize_;
        }

        // optional uint32 maxVersionSize = 3;
        public static final int MAXVERSIONSIZE_FIELD_NUMBER = 3;
        private int maxVersionSize_;
        /**
         * <code>optional uint32 maxVersionSize = 3;</code>
         */
        public boolean hasMaxVersionSize() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 maxVersionSize = 3;</code>
         */
        public int getMaxVersionSize() {
          return maxVersionSize_;
        }

        // optional uint32 maxTagSize = 4;
        public static final int MAXTAGSIZE_FIELD_NUMBER = 4;
        private int maxTagSize_;
        /**
         * <code>optional uint32 maxTagSize = 4;</code>
         */
        public boolean hasMaxTagSize() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional uint32 maxTagSize = 4;</code>
         */
        public int getMaxTagSize() {
          return maxTagSize_;
        }

        // optional uint32 maxConnections = 5;
        public static final int MAXCONNECTIONS_FIELD_NUMBER = 5;
        private int maxConnections_;
        /**
         * <code>optional uint32 maxConnections = 5;</code>
         */
        public boolean hasMaxConnections() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 maxConnections = 5;</code>
         */
        public int getMaxConnections() {
          return maxConnections_;
        }

        // optional uint32 maxOutstandingReadRequests = 6;
        public static final int MAXOUTSTANDINGREADREQUESTS_FIELD_NUMBER = 6;
        private int maxOutstandingReadRequests_;
        /**
         * <code>optional uint32 maxOutstandingReadRequests = 6;</code>
         */
        public boolean hasMaxOutstandingReadRequests() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 maxOutstandingReadRequests = 6;</code>
         */
        public int getMaxOutstandingReadRequests() {
          return maxOutstandingReadRequests_;
        }

        // optional uint32 maxOutstandingWriteRequests = 7;
        public static final int MAXOUTSTANDINGWRITEREQUESTS_FIELD_NUMBER = 7;
        private int maxOutstandingWriteRequests_;
        /**
         * <code>optional uint32 maxOutstandingWriteRequests = 7;</code>
         */
        public boolean hasMaxOutstandingWriteRequests() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 maxOutstandingWriteRequests = 7;</code>
         */
        public int getMaxOutstandingWriteRequests() {
          return maxOutstandingWriteRequests_;
        }

        // optional uint32 maxMessageSize = 8;
        public static final int MAXMESSAGESIZE_FIELD_NUMBER = 8;
        private int maxMessageSize_;
        /**
         * <code>optional uint32 maxMessageSize = 8;</code>
         */
        public boolean hasMaxMessageSize() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 maxMessageSize = 8;</code>
         */
        public int getMaxMessageSize() {
          return maxMessageSize_;
        }

        // optional uint32 maxKeyRangeCount = 9;
        public static final int MAXKEYRANGECOUNT_FIELD_NUMBER = 9;
        private int maxKeyRangeCount_;
        /**
         * <code>optional uint32 maxKeyRangeCount = 9;</code>
         */
        public boolean hasMaxKeyRangeCount() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 maxKeyRangeCount = 9;</code>
         */
        public int getMaxKeyRangeCount() {
          return maxKeyRangeCount_;
        }

        // optional uint32 maxIdentityCount = 10;
        public static final int MAXIDENTITYCOUNT_FIELD_NUMBER = 10;
        private int maxIdentityCount_;
        /**
         * <code>optional uint32 maxIdentityCount = 10;</code>
         */
        public boolean hasMaxIdentityCount() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 maxIdentityCount = 10;</code>
         */
        public int getMaxIdentityCount() {
          return maxIdentityCount_;
        }

        private void initFields() {
          maxKeySize_ = 0;
          maxValueSize_ = 0;
          maxVersionSize_ = 0;
          maxTagSize_ = 0;
          maxConnections_ = 0;
          maxOutstandingReadRequests_ = 0;
          maxOutstandingWriteRequests_ = 0;
          maxMessageSize_ = 0;
          maxKeyRangeCount_ = 0;
          maxIdentityCount_ = 0;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeUInt32(1, maxKeySize_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeUInt32(2, maxValueSize_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeUInt32(3, maxVersionSize_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            output.writeUInt32(4, maxTagSize_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            output.writeUInt32(5, maxConnections_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            output.writeUInt32(6, maxOutstandingReadRequests_);
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            output.writeUInt32(7, maxOutstandingWriteRequests_);
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            output.writeUInt32(8, maxMessageSize_);
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            output.writeUInt32(9, maxKeyRangeCount_);
          }
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            output.writeUInt32(10, maxIdentityCount_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(1, maxKeySize_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(2, maxValueSize_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(3, maxVersionSize_);
          }
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(4, maxTagSize_);
          }
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(5, maxConnections_);
          }
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(6, maxOutstandingReadRequests_);
          }
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(7, maxOutstandingWriteRequests_);
          }
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(8, maxMessageSize_);
          }
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(9, maxKeyRangeCount_);
          }
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32Size(10, maxIdentityCount_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Limits}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.GetLog.LimitsOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            maxKeySize_ = 0;
            bitField0_ = (bitField0_ & ~0x00000001);
            maxValueSize_ = 0;
            bitField0_ = (bitField0_ & ~0x00000002);
            maxVersionSize_ = 0;
            bitField0_ = (bitField0_ & ~0x00000004);
            maxTagSize_ = 0;
            bitField0_ = (bitField0_ & ~0x00000008);
            maxConnections_ = 0;
            bitField0_ = (bitField0_ & ~0x00000010);
            maxOutstandingReadRequests_ = 0;
            bitField0_ = (bitField0_ & ~0x00000020);
            maxOutstandingWriteRequests_ = 0;
            bitField0_ = (bitField0_ & ~0x00000040);
            maxMessageSize_ = 0;
            bitField0_ = (bitField0_ & ~0x00000080);
            maxKeyRangeCount_ = 0;
            bitField0_ = (bitField0_ & ~0x00000100);
            maxIdentityCount_ = 0;
            bitField0_ = (bitField0_ & ~0x00000200);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits build() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.maxKeySize_ = maxKeySize_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.maxValueSize_ = maxValueSize_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.maxVersionSize_ = maxVersionSize_;
            if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
              to_bitField0_ |= 0x00000008;
            }
            result.maxTagSize_ = maxTagSize_;
            if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
              to_bitField0_ |= 0x00000010;
            }
            result.maxConnections_ = maxConnections_;
            if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
              to_bitField0_ |= 0x00000020;
            }
            result.maxOutstandingReadRequests_ = maxOutstandingReadRequests_;
            if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
              to_bitField0_ |= 0x00000040;
            }
            result.maxOutstandingWriteRequests_ = maxOutstandingWriteRequests_;
            if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
              to_bitField0_ |= 0x00000080;
            }
            result.maxMessageSize_ = maxMessageSize_;
            if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
              to_bitField0_ |= 0x00000100;
            }
            result.maxKeyRangeCount_ = maxKeyRangeCount_;
            if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
              to_bitField0_ |= 0x00000200;
            }
            result.maxIdentityCount_ = maxIdentityCount_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.getDefaultInstance()) return this;
            if (other.hasMaxKeySize()) {
              setMaxKeySize(other.getMaxKeySize());
            }
            if (other.hasMaxValueSize()) {
              setMaxValueSize(other.getMaxValueSize());
            }
            if (other.hasMaxVersionSize()) {
              setMaxVersionSize(other.getMaxVersionSize());
            }
            if (other.hasMaxTagSize()) {
              setMaxTagSize(other.getMaxTagSize());
            }
            if (other.hasMaxConnections()) {
              setMaxConnections(other.getMaxConnections());
            }
            if (other.hasMaxOutstandingReadRequests()) {
              setMaxOutstandingReadRequests(other.getMaxOutstandingReadRequests());
            }
            if (other.hasMaxOutstandingWriteRequests()) {
              setMaxOutstandingWriteRequests(other.getMaxOutstandingWriteRequests());
            }
            if (other.hasMaxMessageSize()) {
              setMaxMessageSize(other.getMaxMessageSize());
            }
            if (other.hasMaxKeyRangeCount()) {
              setMaxKeyRangeCount(other.getMaxKeyRangeCount());
            }
            if (other.hasMaxIdentityCount()) {
              setMaxIdentityCount(other.getMaxIdentityCount());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional uint32 maxKeySize = 1;
          private int maxKeySize_ ;
          /**
           * <code>optional uint32 maxKeySize = 1;</code>
           */
          public boolean hasMaxKeySize() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional uint32 maxKeySize = 1;</code>
           */
          public int getMaxKeySize() {
            return maxKeySize_;
          }
          /**
           * <code>optional uint32 maxKeySize = 1;</code>
           */
          public Builder setMaxKeySize(int value) {
            bitField0_ |= 0x00000001;
            maxKeySize_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxKeySize = 1;</code>
           */
          public Builder clearMaxKeySize() {
            bitField0_ = (bitField0_ & ~0x00000001);
            maxKeySize_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxValueSize = 2;
          private int maxValueSize_ ;
          /**
           * <code>optional uint32 maxValueSize = 2;</code>
           */
          public boolean hasMaxValueSize() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional uint32 maxValueSize = 2;</code>
           */
          public int getMaxValueSize() {
            return maxValueSize_;
          }
          /**
           * <code>optional uint32 maxValueSize = 2;</code>
           */
          public Builder setMaxValueSize(int value) {
            bitField0_ |= 0x00000002;
            maxValueSize_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxValueSize = 2;</code>
           */
          public Builder clearMaxValueSize() {
            bitField0_ = (bitField0_ & ~0x00000002);
            maxValueSize_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxVersionSize = 3;
          private int maxVersionSize_ ;
          /**
           * <code>optional uint32 maxVersionSize = 3;</code>
           */
          public boolean hasMaxVersionSize() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional uint32 maxVersionSize = 3;</code>
           */
          public int getMaxVersionSize() {
            return maxVersionSize_;
          }
          /**
           * <code>optional uint32 maxVersionSize = 3;</code>
           */
          public Builder setMaxVersionSize(int value) {
            bitField0_ |= 0x00000004;
            maxVersionSize_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxVersionSize = 3;</code>
           */
          public Builder clearMaxVersionSize() {
            bitField0_ = (bitField0_ & ~0x00000004);
            maxVersionSize_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxTagSize = 4;
          private int maxTagSize_ ;
          /**
           * <code>optional uint32 maxTagSize = 4;</code>
           */
          public boolean hasMaxTagSize() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
          }
          /**
           * <code>optional uint32 maxTagSize = 4;</code>
           */
          public int getMaxTagSize() {
            return maxTagSize_;
          }
          /**
           * <code>optional uint32 maxTagSize = 4;</code>
           */
          public Builder setMaxTagSize(int value) {
            bitField0_ |= 0x00000008;
            maxTagSize_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxTagSize = 4;</code>
           */
          public Builder clearMaxTagSize() {
            bitField0_ = (bitField0_ & ~0x00000008);
            maxTagSize_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxConnections = 5;
          private int maxConnections_ ;
          /**
           * <code>optional uint32 maxConnections = 5;</code>
           */
          public boolean hasMaxConnections() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
          }
          /**
           * <code>optional uint32 maxConnections = 5;</code>
           */
          public int getMaxConnections() {
            return maxConnections_;
          }
          /**
           * <code>optional uint32 maxConnections = 5;</code>
           */
          public Builder setMaxConnections(int value) {
            bitField0_ |= 0x00000010;
            maxConnections_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxConnections = 5;</code>
           */
          public Builder clearMaxConnections() {
            bitField0_ = (bitField0_ & ~0x00000010);
            maxConnections_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxOutstandingReadRequests = 6;
          private int maxOutstandingReadRequests_ ;
          /**
           * <code>optional uint32 maxOutstandingReadRequests = 6;</code>
           */
          public boolean hasMaxOutstandingReadRequests() {
            return ((bitField0_ & 0x00000020) == 0x00000020);
          }
          /**
           * <code>optional uint32 maxOutstandingReadRequests = 6;</code>
           */
          public int getMaxOutstandingReadRequests() {
            return maxOutstandingReadRequests_;
          }
          /**
           * <code>optional uint32 maxOutstandingReadRequests = 6;</code>
           */
          public Builder setMaxOutstandingReadRequests(int value) {
            bitField0_ |= 0x00000020;
            maxOutstandingReadRequests_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxOutstandingReadRequests = 6;</code>
           */
          public Builder clearMaxOutstandingReadRequests() {
            bitField0_ = (bitField0_ & ~0x00000020);
            maxOutstandingReadRequests_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxOutstandingWriteRequests = 7;
          private int maxOutstandingWriteRequests_ ;
          /**
           * <code>optional uint32 maxOutstandingWriteRequests = 7;</code>
           */
          public boolean hasMaxOutstandingWriteRequests() {
            return ((bitField0_ & 0x00000040) == 0x00000040);
          }
          /**
           * <code>optional uint32 maxOutstandingWriteRequests = 7;</code>
           */
          public int getMaxOutstandingWriteRequests() {
            return maxOutstandingWriteRequests_;
          }
          /**
           * <code>optional uint32 maxOutstandingWriteRequests = 7;</code>
           */
          public Builder setMaxOutstandingWriteRequests(int value) {
            bitField0_ |= 0x00000040;
            maxOutstandingWriteRequests_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxOutstandingWriteRequests = 7;</code>
           */
          public Builder clearMaxOutstandingWriteRequests() {
            bitField0_ = (bitField0_ & ~0x00000040);
            maxOutstandingWriteRequests_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxMessageSize = 8;
          private int maxMessageSize_ ;
          /**
           * <code>optional uint32 maxMessageSize = 8;</code>
           */
          public boolean hasMaxMessageSize() {
            return ((bitField0_ & 0x00000080) == 0x00000080);
          }
          /**
           * <code>optional uint32 maxMessageSize = 8;</code>
           */
          public int getMaxMessageSize() {
            return maxMessageSize_;
          }
          /**
           * <code>optional uint32 maxMessageSize = 8;</code>
           */
          public Builder setMaxMessageSize(int value) {
            bitField0_ |= 0x00000080;
            maxMessageSize_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxMessageSize = 8;</code>
           */
          public Builder clearMaxMessageSize() {
            bitField0_ = (bitField0_ & ~0x00000080);
            maxMessageSize_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxKeyRangeCount = 9;
          private int maxKeyRangeCount_ ;
          /**
           * <code>optional uint32 maxKeyRangeCount = 9;</code>
           */
          public boolean hasMaxKeyRangeCount() {
            return ((bitField0_ & 0x00000100) == 0x00000100);
          }
          /**
           * <code>optional uint32 maxKeyRangeCount = 9;</code>
           */
          public int getMaxKeyRangeCount() {
            return maxKeyRangeCount_;
          }
          /**
           * <code>optional uint32 maxKeyRangeCount = 9;</code>
           */
          public Builder setMaxKeyRangeCount(int value) {
            bitField0_ |= 0x00000100;
            maxKeyRangeCount_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxKeyRangeCount = 9;</code>
           */
          public Builder clearMaxKeyRangeCount() {
            bitField0_ = (bitField0_ & ~0x00000100);
            maxKeyRangeCount_ = 0;
            onChanged();
            return this;
          }

          // optional uint32 maxIdentityCount = 10;
          private int maxIdentityCount_ ;
          /**
           * <code>optional uint32 maxIdentityCount = 10;</code>
           */
          public boolean hasMaxIdentityCount() {
            return ((bitField0_ & 0x00000200) == 0x00000200);
          }
          /**
           * <code>optional uint32 maxIdentityCount = 10;</code>
           */
          public int getMaxIdentityCount() {
            return maxIdentityCount_;
          }
          /**
           * <code>optional uint32 maxIdentityCount = 10;</code>
           */
          public Builder setMaxIdentityCount(int value) {
            bitField0_ |= 0x00000200;
            maxIdentityCount_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional uint32 maxIdentityCount = 10;</code>
           */
          public Builder clearMaxIdentityCount() {
            bitField0_ = (bitField0_ & ~0x00000200);
            maxIdentityCount_ = 0;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog.Limits)
        }

        static {
          defaultInstance = new Limits(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog.Limits)
      }

      public interface DeviceOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional bytes name = 1;
        /**
         * <code>optional bytes name = 1;</code>
         */
        boolean hasName();
        /**
         * <code>optional bytes name = 1;</code>
         */
        com.google.protobuf.ByteString getName();
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Device}
       *
       * <pre>
       * The Device GetLog message is to ask the device to send back the
       * log of a certain name in the value field. The limit of each
       * log is 1m byte.
       *
       * Proprietary names should be prefaced by the vendor name so that name
       * collisions do not happen in the future. An example could be names that
       * start with “com.WD” would be for Western Digital devices.
       *
       * If the name is not found, the get log returns NOT_FOUND.
       *
       * There can be only one Device in the list of logs that can be retrieved.!
       * </pre>
       */
      public static final class Device extends
          com.google.protobuf.GeneratedMessage
          implements DeviceOrBuilder {
        // Use Device.newBuilder() to construct.
        private Device(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Device(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Device defaultInstance;
        public static Device getDefaultInstance() {
          return defaultInstance;
        }

        public Device getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Device(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  bitField0_ |= 0x00000001;
                  name_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.Builder.class);
        }

        public static com.google.protobuf.Parser<Device> PARSER =
            new com.google.protobuf.AbstractParser<Device>() {
          public Device parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Device(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Device> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // optional bytes name = 1;
        public static final int NAME_FIELD_NUMBER = 1;
        private com.google.protobuf.ByteString name_;
        /**
         * <code>optional bytes name = 1;</code>
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional bytes name = 1;</code>
         */
        public com.google.protobuf.ByteString getName() {
          return name_;
        }

        private void initFields() {
          name_ = com.google.protobuf.ByteString.EMPTY;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeBytes(1, name_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(1, name_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog.Device}
         *
         * <pre>
         * The Device GetLog message is to ask the device to send back the
         * log of a certain name in the value field. The limit of each
         * log is 1m byte.
         *
         * Proprietary names should be prefaced by the vendor name so that name
         * collisions do not happen in the future. An example could be names that
         * start with “com.WD” would be for Western Digital devices.
         *
         * If the name is not found, the get log returns NOT_FOUND.
         *
         * There can be only one Device in the list of logs that can be retrieved.!
         * </pre>
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.GetLog.DeviceOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            name_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device build() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.name_ = name_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.getDefaultInstance()) return this;
            if (other.hasName()) {
              setName(other.getName());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional bytes name = 1;
          private com.google.protobuf.ByteString name_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes name = 1;</code>
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional bytes name = 1;</code>
           */
          public com.google.protobuf.ByteString getName() {
            return name_;
          }
          /**
           * <code>optional bytes name = 1;</code>
           */
          public Builder setName(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
            name_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes name = 1;</code>
           */
          public Builder clearName() {
            bitField0_ = (bitField0_ & ~0x00000001);
            name_ = getDefaultInstance().getName();
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog.Device)
        }

        static {
          defaultInstance = new Device(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog.Device)
      }

      private int bitField0_;
      // repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;
      public static final int TYPE_FIELD_NUMBER = 1;
      private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type> type_;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
       */
      public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type> getTypeList() {
        return type_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
       */
      public int getTypeCount() {
        return type_.size();
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type getType(int index) {
        return type_.get(index);
      }

      // repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;
      public static final int UTILIZATION_FIELD_NUMBER = 2;
      private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization> utilization_;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization> getUtilizationList() {
        return utilization_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder> 
          getUtilizationOrBuilderList() {
        return utilization_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      public int getUtilizationCount() {
        return utilization_.size();
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization getUtilization(int index) {
        return utilization_.get(index);
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder getUtilizationOrBuilder(
          int index) {
        return utilization_.get(index);
      }

      // repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;
      public static final int TEMPERATURE_FIELD_NUMBER = 3;
      private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature> temperature_;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature> getTemperatureList() {
        return temperature_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder> 
          getTemperatureOrBuilderList() {
        return temperature_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      public int getTemperatureCount() {
        return temperature_.size();
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature getTemperature(int index) {
        return temperature_.get(index);
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder getTemperatureOrBuilder(
          int index) {
        return temperature_.get(index);
      }

      // optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;
      public static final int CAPACITY_FIELD_NUMBER = 4;
      private com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity capacity_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
       */
      public boolean hasCapacity() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity getCapacity() {
        return capacity_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.CapacityOrBuilder getCapacityOrBuilder() {
        return capacity_;
      }

      // optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;
      public static final int CONFIGURATION_FIELD_NUMBER = 5;
      private com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration configuration_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
       */
      public boolean hasConfiguration() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration getConfiguration() {
        return configuration_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.ConfigurationOrBuilder getConfigurationOrBuilder() {
        return configuration_;
      }

      // repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;
      public static final int STATISTICS_FIELD_NUMBER = 6;
      private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics> statistics_;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics> getStatisticsList() {
        return statistics_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder> 
          getStatisticsOrBuilderList() {
        return statistics_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      public int getStatisticsCount() {
        return statistics_.size();
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics getStatistics(int index) {
        return statistics_.get(index);
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder getStatisticsOrBuilder(
          int index) {
        return statistics_.get(index);
      }

      // optional bytes messages = 7;
      public static final int MESSAGES_FIELD_NUMBER = 7;
      private com.google.protobuf.ByteString messages_;
      /**
       * <code>optional bytes messages = 7;</code>
       */
      public boolean hasMessages() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes messages = 7;</code>
       */
      public com.google.protobuf.ByteString getMessages() {
        return messages_;
      }

      // optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;
      public static final int LIMITS_FIELD_NUMBER = 8;
      private com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits limits_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
       */
      public boolean hasLimits() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits getLimits() {
        return limits_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.LimitsOrBuilder getLimitsOrBuilder() {
        return limits_;
      }

      // optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;
      public static final int DEVICE_FIELD_NUMBER = 9;
      private com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device device_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
       */
      public boolean hasDevice() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device getDevice() {
        return device_;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.GetLog.DeviceOrBuilder getDeviceOrBuilder() {
        return device_;
      }

      private void initFields() {
        type_ = java.util.Collections.emptyList();
        utilization_ = java.util.Collections.emptyList();
        temperature_ = java.util.Collections.emptyList();
        capacity_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.getDefaultInstance();
        configuration_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.getDefaultInstance();
        statistics_ = java.util.Collections.emptyList();
        messages_ = com.google.protobuf.ByteString.EMPTY;
        limits_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.getDefaultInstance();
        device_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < type_.size(); i++) {
          output.writeEnum(1, type_.get(i).getNumber());
        }
        for (int i = 0; i < utilization_.size(); i++) {
          output.writeMessage(2, utilization_.get(i));
        }
        for (int i = 0; i < temperature_.size(); i++) {
          output.writeMessage(3, temperature_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeMessage(4, capacity_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeMessage(5, configuration_);
        }
        for (int i = 0; i < statistics_.size(); i++) {
          output.writeMessage(6, statistics_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(7, messages_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeMessage(8, limits_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeMessage(9, device_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < type_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(type_.get(i).getNumber());
          }
          size += dataSize;
          size += 1 * type_.size();
        }
        for (int i = 0; i < utilization_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, utilization_.get(i));
        }
        for (int i = 0; i < temperature_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, temperature_.get(i));
        }
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, capacity_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, configuration_);
        }
        for (int i = 0; i < statistics_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, statistics_.get(i));
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(7, messages_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, limits_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, device_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.GetLog parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.GetLog prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.GetLog}
       *
       * <pre>
       *get log
       * </pre>
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.GetLogOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.GetLog.class, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.GetLog.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getUtilizationFieldBuilder();
            getTemperatureFieldBuilder();
            getCapacityFieldBuilder();
            getConfigurationFieldBuilder();
            getStatisticsFieldBuilder();
            getLimitsFieldBuilder();
            getDeviceFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          type_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          if (utilizationBuilder_ == null) {
            utilization_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            utilizationBuilder_.clear();
          }
          if (temperatureBuilder_ == null) {
            temperature_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            temperatureBuilder_.clear();
          }
          if (capacityBuilder_ == null) {
            capacity_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.getDefaultInstance();
          } else {
            capacityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          if (configurationBuilder_ == null) {
            configuration_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.getDefaultInstance();
          } else {
            configurationBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          if (statisticsBuilder_ == null) {
            statistics_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            statisticsBuilder_.clear();
          }
          messages_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000040);
          if (limitsBuilder_ == null) {
            limits_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.getDefaultInstance();
          } else {
            limitsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000080);
          if (deviceBuilder_ == null) {
            device_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.getDefaultInstance();
          } else {
            deviceBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.GetLog getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.GetLog.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.GetLog build() {
          com.seagate.kinetic.proto.Kinetic.Message.GetLog result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.GetLog buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.GetLog result = new com.seagate.kinetic.proto.Kinetic.Message.GetLog(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            type_ = java.util.Collections.unmodifiableList(type_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.type_ = type_;
          if (utilizationBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              utilization_ = java.util.Collections.unmodifiableList(utilization_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.utilization_ = utilization_;
          } else {
            result.utilization_ = utilizationBuilder_.build();
          }
          if (temperatureBuilder_ == null) {
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              temperature_ = java.util.Collections.unmodifiableList(temperature_);
              bitField0_ = (bitField0_ & ~0x00000004);
            }
            result.temperature_ = temperature_;
          } else {
            result.temperature_ = temperatureBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000001;
          }
          if (capacityBuilder_ == null) {
            result.capacity_ = capacity_;
          } else {
            result.capacity_ = capacityBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000002;
          }
          if (configurationBuilder_ == null) {
            result.configuration_ = configuration_;
          } else {
            result.configuration_ = configurationBuilder_.build();
          }
          if (statisticsBuilder_ == null) {
            if (((bitField0_ & 0x00000020) == 0x00000020)) {
              statistics_ = java.util.Collections.unmodifiableList(statistics_);
              bitField0_ = (bitField0_ & ~0x00000020);
            }
            result.statistics_ = statistics_;
          } else {
            result.statistics_ = statisticsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000004;
          }
          result.messages_ = messages_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000008;
          }
          if (limitsBuilder_ == null) {
            result.limits_ = limits_;
          } else {
            result.limits_ = limitsBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000010;
          }
          if (deviceBuilder_ == null) {
            result.device_ = device_;
          } else {
            result.device_ = deviceBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.GetLog) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.GetLog)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.GetLog other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.GetLog.getDefaultInstance()) return this;
          if (!other.type_.isEmpty()) {
            if (type_.isEmpty()) {
              type_ = other.type_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTypeIsMutable();
              type_.addAll(other.type_);
            }
            onChanged();
          }
          if (utilizationBuilder_ == null) {
            if (!other.utilization_.isEmpty()) {
              if (utilization_.isEmpty()) {
                utilization_ = other.utilization_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureUtilizationIsMutable();
                utilization_.addAll(other.utilization_);
              }
              onChanged();
            }
          } else {
            if (!other.utilization_.isEmpty()) {
              if (utilizationBuilder_.isEmpty()) {
                utilizationBuilder_.dispose();
                utilizationBuilder_ = null;
                utilization_ = other.utilization_;
                bitField0_ = (bitField0_ & ~0x00000002);
                utilizationBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getUtilizationFieldBuilder() : null;
              } else {
                utilizationBuilder_.addAllMessages(other.utilization_);
              }
            }
          }
          if (temperatureBuilder_ == null) {
            if (!other.temperature_.isEmpty()) {
              if (temperature_.isEmpty()) {
                temperature_ = other.temperature_;
                bitField0_ = (bitField0_ & ~0x00000004);
              } else {
                ensureTemperatureIsMutable();
                temperature_.addAll(other.temperature_);
              }
              onChanged();
            }
          } else {
            if (!other.temperature_.isEmpty()) {
              if (temperatureBuilder_.isEmpty()) {
                temperatureBuilder_.dispose();
                temperatureBuilder_ = null;
                temperature_ = other.temperature_;
                bitField0_ = (bitField0_ & ~0x00000004);
                temperatureBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getTemperatureFieldBuilder() : null;
              } else {
                temperatureBuilder_.addAllMessages(other.temperature_);
              }
            }
          }
          if (other.hasCapacity()) {
            mergeCapacity(other.getCapacity());
          }
          if (other.hasConfiguration()) {
            mergeConfiguration(other.getConfiguration());
          }
          if (statisticsBuilder_ == null) {
            if (!other.statistics_.isEmpty()) {
              if (statistics_.isEmpty()) {
                statistics_ = other.statistics_;
                bitField0_ = (bitField0_ & ~0x00000020);
              } else {
                ensureStatisticsIsMutable();
                statistics_.addAll(other.statistics_);
              }
              onChanged();
            }
          } else {
            if (!other.statistics_.isEmpty()) {
              if (statisticsBuilder_.isEmpty()) {
                statisticsBuilder_.dispose();
                statisticsBuilder_ = null;
                statistics_ = other.statistics_;
                bitField0_ = (bitField0_ & ~0x00000020);
                statisticsBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getStatisticsFieldBuilder() : null;
              } else {
                statisticsBuilder_.addAllMessages(other.statistics_);
              }
            }
          }
          if (other.hasMessages()) {
            setMessages(other.getMessages());
          }
          if (other.hasLimits()) {
            mergeLimits(other.getLimits());
          }
          if (other.hasDevice()) {
            mergeDevice(other.getDevice());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.GetLog parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.GetLog) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;
        private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type> type_ =
          java.util.Collections.emptyList();
        private void ensureTypeIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            type_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type>(type_);
            bitField0_ |= 0x00000001;
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type> getTypeList() {
          return java.util.Collections.unmodifiableList(type_);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
         */
        public int getTypeCount() {
          return type_.size();
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type getType(int index) {
          return type_.get(index);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
         */
        public Builder setType(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeIsMutable();
          type_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
         */
        public Builder addType(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeIsMutable();
          type_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
         */
        public Builder addAllType(
            java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.Type> values) {
          ensureTypeIsMutable();
          super.addAll(values, type_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Type type = 1;</code>
         */
        public Builder clearType() {
          type_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        // repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;
        private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization> utilization_ =
          java.util.Collections.emptyList();
        private void ensureUtilizationIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            utilization_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization>(utilization_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder> utilizationBuilder_;

        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization> getUtilizationList() {
          if (utilizationBuilder_ == null) {
            return java.util.Collections.unmodifiableList(utilization_);
          } else {
            return utilizationBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public int getUtilizationCount() {
          if (utilizationBuilder_ == null) {
            return utilization_.size();
          } else {
            return utilizationBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization getUtilization(int index) {
          if (utilizationBuilder_ == null) {
            return utilization_.get(index);
          } else {
            return utilizationBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder setUtilization(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization value) {
          if (utilizationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureUtilizationIsMutable();
            utilization_.set(index, value);
            onChanged();
          } else {
            utilizationBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder setUtilization(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder builderForValue) {
          if (utilizationBuilder_ == null) {
            ensureUtilizationIsMutable();
            utilization_.set(index, builderForValue.build());
            onChanged();
          } else {
            utilizationBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder addUtilization(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization value) {
          if (utilizationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureUtilizationIsMutable();
            utilization_.add(value);
            onChanged();
          } else {
            utilizationBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder addUtilization(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization value) {
          if (utilizationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureUtilizationIsMutable();
            utilization_.add(index, value);
            onChanged();
          } else {
            utilizationBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder addUtilization(
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder builderForValue) {
          if (utilizationBuilder_ == null) {
            ensureUtilizationIsMutable();
            utilization_.add(builderForValue.build());
            onChanged();
          } else {
            utilizationBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder addUtilization(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder builderForValue) {
          if (utilizationBuilder_ == null) {
            ensureUtilizationIsMutable();
            utilization_.add(index, builderForValue.build());
            onChanged();
          } else {
            utilizationBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder addAllUtilization(
            java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization> values) {
          if (utilizationBuilder_ == null) {
            ensureUtilizationIsMutable();
            super.addAll(values, utilization_);
            onChanged();
          } else {
            utilizationBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder clearUtilization() {
          if (utilizationBuilder_ == null) {
            utilization_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            utilizationBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public Builder removeUtilization(int index) {
          if (utilizationBuilder_ == null) {
            ensureUtilizationIsMutable();
            utilization_.remove(index);
            onChanged();
          } else {
            utilizationBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder getUtilizationBuilder(
            int index) {
          return getUtilizationFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder getUtilizationOrBuilder(
            int index) {
          if (utilizationBuilder_ == null) {
            return utilization_.get(index);  } else {
            return utilizationBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder> 
             getUtilizationOrBuilderList() {
          if (utilizationBuilder_ != null) {
            return utilizationBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(utilization_);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder addUtilizationBuilder() {
          return getUtilizationFieldBuilder().addBuilder(
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder addUtilizationBuilder(
            int index) {
          return getUtilizationFieldBuilder().addBuilder(
              index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Utilization utilization = 2;</code>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder> 
             getUtilizationBuilderList() {
          return getUtilizationFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder> 
            getUtilizationFieldBuilder() {
          if (utilizationBuilder_ == null) {
            utilizationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Utilization.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.UtilizationOrBuilder>(
                    utilization_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            utilization_ = null;
          }
          return utilizationBuilder_;
        }

        // repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;
        private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature> temperature_ =
          java.util.Collections.emptyList();
        private void ensureTemperatureIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            temperature_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature>(temperature_);
            bitField0_ |= 0x00000004;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder> temperatureBuilder_;

        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature> getTemperatureList() {
          if (temperatureBuilder_ == null) {
            return java.util.Collections.unmodifiableList(temperature_);
          } else {
            return temperatureBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public int getTemperatureCount() {
          if (temperatureBuilder_ == null) {
            return temperature_.size();
          } else {
            return temperatureBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature getTemperature(int index) {
          if (temperatureBuilder_ == null) {
            return temperature_.get(index);
          } else {
            return temperatureBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder setTemperature(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature value) {
          if (temperatureBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTemperatureIsMutable();
            temperature_.set(index, value);
            onChanged();
          } else {
            temperatureBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder setTemperature(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder builderForValue) {
          if (temperatureBuilder_ == null) {
            ensureTemperatureIsMutable();
            temperature_.set(index, builderForValue.build());
            onChanged();
          } else {
            temperatureBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder addTemperature(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature value) {
          if (temperatureBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTemperatureIsMutable();
            temperature_.add(value);
            onChanged();
          } else {
            temperatureBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder addTemperature(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature value) {
          if (temperatureBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureTemperatureIsMutable();
            temperature_.add(index, value);
            onChanged();
          } else {
            temperatureBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder addTemperature(
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder builderForValue) {
          if (temperatureBuilder_ == null) {
            ensureTemperatureIsMutable();
            temperature_.add(builderForValue.build());
            onChanged();
          } else {
            temperatureBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder addTemperature(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder builderForValue) {
          if (temperatureBuilder_ == null) {
            ensureTemperatureIsMutable();
            temperature_.add(index, builderForValue.build());
            onChanged();
          } else {
            temperatureBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder addAllTemperature(
            java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature> values) {
          if (temperatureBuilder_ == null) {
            ensureTemperatureIsMutable();
            super.addAll(values, temperature_);
            onChanged();
          } else {
            temperatureBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder clearTemperature() {
          if (temperatureBuilder_ == null) {
            temperature_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000004);
            onChanged();
          } else {
            temperatureBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public Builder removeTemperature(int index) {
          if (temperatureBuilder_ == null) {
            ensureTemperatureIsMutable();
            temperature_.remove(index);
            onChanged();
          } else {
            temperatureBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder getTemperatureBuilder(
            int index) {
          return getTemperatureFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder getTemperatureOrBuilder(
            int index) {
          if (temperatureBuilder_ == null) {
            return temperature_.get(index);  } else {
            return temperatureBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder> 
             getTemperatureOrBuilderList() {
          if (temperatureBuilder_ != null) {
            return temperatureBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(temperature_);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder addTemperatureBuilder() {
          return getTemperatureFieldBuilder().addBuilder(
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder addTemperatureBuilder(
            int index) {
          return getTemperatureFieldBuilder().addBuilder(
              index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Temperature temperature = 3;</code>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder> 
             getTemperatureBuilderList() {
          return getTemperatureFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder> 
            getTemperatureFieldBuilder() {
          if (temperatureBuilder_ == null) {
            temperatureBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Temperature.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.TemperatureOrBuilder>(
                    temperature_,
                    ((bitField0_ & 0x00000004) == 0x00000004),
                    getParentForChildren(),
                    isClean());
            temperature_ = null;
          }
          return temperatureBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;
        private com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity capacity_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.CapacityOrBuilder> capacityBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        public boolean hasCapacity() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity getCapacity() {
          if (capacityBuilder_ == null) {
            return capacity_;
          } else {
            return capacityBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        public Builder setCapacity(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity value) {
          if (capacityBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            capacity_ = value;
            onChanged();
          } else {
            capacityBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        public Builder setCapacity(
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.Builder builderForValue) {
          if (capacityBuilder_ == null) {
            capacity_ = builderForValue.build();
            onChanged();
          } else {
            capacityBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        public Builder mergeCapacity(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity value) {
          if (capacityBuilder_ == null) {
            if (((bitField0_ & 0x00000008) == 0x00000008) &&
                capacity_ != com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.getDefaultInstance()) {
              capacity_ =
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.newBuilder(capacity_).mergeFrom(value).buildPartial();
            } else {
              capacity_ = value;
            }
            onChanged();
          } else {
            capacityBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        public Builder clearCapacity() {
          if (capacityBuilder_ == null) {
            capacity_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.getDefaultInstance();
            onChanged();
          } else {
            capacityBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000008);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.Builder getCapacityBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getCapacityFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.CapacityOrBuilder getCapacityOrBuilder() {
          if (capacityBuilder_ != null) {
            return capacityBuilder_.getMessageOrBuilder();
          } else {
            return capacity_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Capacity capacity = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.CapacityOrBuilder> 
            getCapacityFieldBuilder() {
          if (capacityBuilder_ == null) {
            capacityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Capacity.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.CapacityOrBuilder>(
                    capacity_,
                    getParentForChildren(),
                    isClean());
            capacity_ = null;
          }
          return capacityBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;
        private com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration configuration_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.ConfigurationOrBuilder> configurationBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        public boolean hasConfiguration() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration getConfiguration() {
          if (configurationBuilder_ == null) {
            return configuration_;
          } else {
            return configurationBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        public Builder setConfiguration(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration value) {
          if (configurationBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            configuration_ = value;
            onChanged();
          } else {
            configurationBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        public Builder setConfiguration(
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Builder builderForValue) {
          if (configurationBuilder_ == null) {
            configuration_ = builderForValue.build();
            onChanged();
          } else {
            configurationBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        public Builder mergeConfiguration(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration value) {
          if (configurationBuilder_ == null) {
            if (((bitField0_ & 0x00000010) == 0x00000010) &&
                configuration_ != com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.getDefaultInstance()) {
              configuration_ =
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.newBuilder(configuration_).mergeFrom(value).buildPartial();
            } else {
              configuration_ = value;
            }
            onChanged();
          } else {
            configurationBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000010;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        public Builder clearConfiguration() {
          if (configurationBuilder_ == null) {
            configuration_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.getDefaultInstance();
            onChanged();
          } else {
            configurationBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000010);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Builder getConfigurationBuilder() {
          bitField0_ |= 0x00000010;
          onChanged();
          return getConfigurationFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.ConfigurationOrBuilder getConfigurationOrBuilder() {
          if (configurationBuilder_ != null) {
            return configurationBuilder_.getMessageOrBuilder();
          } else {
            return configuration_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Configuration configuration = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.ConfigurationOrBuilder> 
            getConfigurationFieldBuilder() {
          if (configurationBuilder_ == null) {
            configurationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Configuration.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.ConfigurationOrBuilder>(
                    configuration_,
                    getParentForChildren(),
                    isClean());
            configuration_ = null;
          }
          return configurationBuilder_;
        }

        // repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;
        private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics> statistics_ =
          java.util.Collections.emptyList();
        private void ensureStatisticsIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            statistics_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics>(statistics_);
            bitField0_ |= 0x00000020;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder> statisticsBuilder_;

        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics> getStatisticsList() {
          if (statisticsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(statistics_);
          } else {
            return statisticsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public int getStatisticsCount() {
          if (statisticsBuilder_ == null) {
            return statistics_.size();
          } else {
            return statisticsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics getStatistics(int index) {
          if (statisticsBuilder_ == null) {
            return statistics_.get(index);
          } else {
            return statisticsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder setStatistics(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics value) {
          if (statisticsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatisticsIsMutable();
            statistics_.set(index, value);
            onChanged();
          } else {
            statisticsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder setStatistics(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder builderForValue) {
          if (statisticsBuilder_ == null) {
            ensureStatisticsIsMutable();
            statistics_.set(index, builderForValue.build());
            onChanged();
          } else {
            statisticsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder addStatistics(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics value) {
          if (statisticsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatisticsIsMutable();
            statistics_.add(value);
            onChanged();
          } else {
            statisticsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder addStatistics(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics value) {
          if (statisticsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureStatisticsIsMutable();
            statistics_.add(index, value);
            onChanged();
          } else {
            statisticsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder addStatistics(
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder builderForValue) {
          if (statisticsBuilder_ == null) {
            ensureStatisticsIsMutable();
            statistics_.add(builderForValue.build());
            onChanged();
          } else {
            statisticsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder addStatistics(
            int index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder builderForValue) {
          if (statisticsBuilder_ == null) {
            ensureStatisticsIsMutable();
            statistics_.add(index, builderForValue.build());
            onChanged();
          } else {
            statisticsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder addAllStatistics(
            java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics> values) {
          if (statisticsBuilder_ == null) {
            ensureStatisticsIsMutable();
            super.addAll(values, statistics_);
            onChanged();
          } else {
            statisticsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder clearStatistics() {
          if (statisticsBuilder_ == null) {
            statistics_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000020);
            onChanged();
          } else {
            statisticsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public Builder removeStatistics(int index) {
          if (statisticsBuilder_ == null) {
            ensureStatisticsIsMutable();
            statistics_.remove(index);
            onChanged();
          } else {
            statisticsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder getStatisticsBuilder(
            int index) {
          return getStatisticsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder getStatisticsOrBuilder(
            int index) {
          if (statisticsBuilder_ == null) {
            return statistics_.get(index);  } else {
            return statisticsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder> 
             getStatisticsOrBuilderList() {
          if (statisticsBuilder_ != null) {
            return statisticsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(statistics_);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder addStatisticsBuilder() {
          return getStatisticsFieldBuilder().addBuilder(
              com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder addStatisticsBuilder(
            int index) {
          return getStatisticsFieldBuilder().addBuilder(
              index, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.GetLog.Statistics statistics = 6;</code>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder> 
             getStatisticsBuilderList() {
          return getStatisticsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder> 
            getStatisticsFieldBuilder() {
          if (statisticsBuilder_ == null) {
            statisticsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Statistics.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.StatisticsOrBuilder>(
                    statistics_,
                    ((bitField0_ & 0x00000020) == 0x00000020),
                    getParentForChildren(),
                    isClean());
            statistics_ = null;
          }
          return statisticsBuilder_;
        }

        // optional bytes messages = 7;
        private com.google.protobuf.ByteString messages_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes messages = 7;</code>
         */
        public boolean hasMessages() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional bytes messages = 7;</code>
         */
        public com.google.protobuf.ByteString getMessages() {
          return messages_;
        }
        /**
         * <code>optional bytes messages = 7;</code>
         */
        public Builder setMessages(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          messages_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes messages = 7;</code>
         */
        public Builder clearMessages() {
          bitField0_ = (bitField0_ & ~0x00000040);
          messages_ = getDefaultInstance().getMessages();
          onChanged();
          return this;
        }

        // optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;
        private com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits limits_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.LimitsOrBuilder> limitsBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        public boolean hasLimits() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits getLimits() {
          if (limitsBuilder_ == null) {
            return limits_;
          } else {
            return limitsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        public Builder setLimits(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits value) {
          if (limitsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            limits_ = value;
            onChanged();
          } else {
            limitsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000080;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        public Builder setLimits(
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.Builder builderForValue) {
          if (limitsBuilder_ == null) {
            limits_ = builderForValue.build();
            onChanged();
          } else {
            limitsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000080;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        public Builder mergeLimits(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits value) {
          if (limitsBuilder_ == null) {
            if (((bitField0_ & 0x00000080) == 0x00000080) &&
                limits_ != com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.getDefaultInstance()) {
              limits_ =
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.newBuilder(limits_).mergeFrom(value).buildPartial();
            } else {
              limits_ = value;
            }
            onChanged();
          } else {
            limitsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000080;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        public Builder clearLimits() {
          if (limitsBuilder_ == null) {
            limits_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.getDefaultInstance();
            onChanged();
          } else {
            limitsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.Builder getLimitsBuilder() {
          bitField0_ |= 0x00000080;
          onChanged();
          return getLimitsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.LimitsOrBuilder getLimitsOrBuilder() {
          if (limitsBuilder_ != null) {
            return limitsBuilder_.getMessageOrBuilder();
          } else {
            return limits_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Limits limits = 8;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.LimitsOrBuilder> 
            getLimitsFieldBuilder() {
          if (limitsBuilder_ == null) {
            limitsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Limits.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.LimitsOrBuilder>(
                    limits_,
                    getParentForChildren(),
                    isClean());
            limits_ = null;
          }
          return limitsBuilder_;
        }

        // optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;
        private com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device device_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.DeviceOrBuilder> deviceBuilder_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        public boolean hasDevice() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device getDevice() {
          if (deviceBuilder_ == null) {
            return device_;
          } else {
            return deviceBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        public Builder setDevice(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device value) {
          if (deviceBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            device_ = value;
            onChanged();
          } else {
            deviceBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        public Builder setDevice(
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.Builder builderForValue) {
          if (deviceBuilder_ == null) {
            device_ = builderForValue.build();
            onChanged();
          } else {
            deviceBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        public Builder mergeDevice(com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device value) {
          if (deviceBuilder_ == null) {
            if (((bitField0_ & 0x00000100) == 0x00000100) &&
                device_ != com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.getDefaultInstance()) {
              device_ =
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.newBuilder(device_).mergeFrom(value).buildPartial();
            } else {
              device_ = value;
            }
            onChanged();
          } else {
            deviceBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000100;
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        public Builder clearDevice() {
          if (deviceBuilder_ == null) {
            device_ = com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.getDefaultInstance();
            onChanged();
          } else {
            deviceBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000100);
          return this;
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.Builder getDeviceBuilder() {
          bitField0_ |= 0x00000100;
          onChanged();
          return getDeviceFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.GetLog.DeviceOrBuilder getDeviceOrBuilder() {
          if (deviceBuilder_ != null) {
            return deviceBuilder_.getMessageOrBuilder();
          } else {
            return device_;
          }
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.GetLog.Device device = 9;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.DeviceOrBuilder> 
            getDeviceFieldBuilder() {
          if (deviceBuilder_ == null) {
            deviceBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device, com.seagate.kinetic.proto.Kinetic.Message.GetLog.Device.Builder, com.seagate.kinetic.proto.Kinetic.Message.GetLog.DeviceOrBuilder>(
                    device_,
                    getParentForChildren(),
                    isClean());
            device_ = null;
          }
          return deviceBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.GetLog)
      }

      static {
        defaultInstance = new GetLog(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.GetLog)
    }

    public interface SecurityOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL> 
          getAclList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Security.ACL getAcl(int index);
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      int getAclCount();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder> 
          getAclOrBuilderList();
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder getAclOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message.Security}
     */
    public static final class Security extends
        com.google.protobuf.GeneratedMessage
        implements SecurityOrBuilder {
      // Use Security.newBuilder() to construct.
      private Security(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Security(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Security defaultInstance;
      public static Security getDefaultInstance() {
        return defaultInstance;
      }

      public Security getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Security(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  acl_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL>();
                  mutable_bitField0_ |= 0x00000001;
                }
                acl_.add(input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.PARSER, extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            acl_ = java.util.Collections.unmodifiableList(acl_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.Security.class, com.seagate.kinetic.proto.Kinetic.Message.Security.Builder.class);
      }

      public static com.google.protobuf.Parser<Security> PARSER =
          new com.google.protobuf.AbstractParser<Security>() {
        public Security parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Security(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Security> getParserForType() {
        return PARSER;
      }

      public interface ACLOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // optional int64 identity = 1;
        /**
         * <code>optional int64 identity = 1;</code>
         */
        boolean hasIdentity();
        /**
         * <code>optional int64 identity = 1;</code>
         */
        long getIdentity();

        // optional bytes key = 2;
        /**
         * <code>optional bytes key = 2;</code>
         *
         * <pre>
         * the HMAC key
         * </pre>
         */
        boolean hasKey();
        /**
         * <code>optional bytes key = 2;</code>
         *
         * <pre>
         * the HMAC key
         * </pre>
         */
        com.google.protobuf.ByteString getKey();

        // optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;</code>
         */
        boolean hasHmacAlgorithm();
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;</code>
         */
        com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm getHmacAlgorithm();

        // repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope> 
            getScopeList();
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope getScope(int index);
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        int getScopeCount();
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder> 
            getScopeOrBuilderList();
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder getScopeOrBuilder(
            int index);
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.Security.ACL}
       */
      public static final class ACL extends
          com.google.protobuf.GeneratedMessage
          implements ACLOrBuilder {
        // Use ACL.newBuilder() to construct.
        private ACL(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private ACL(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final ACL defaultInstance;
        public static ACL getDefaultInstance() {
          return defaultInstance;
        }

        public ACL getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private ACL(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  identity_ = input.readInt64();
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  key_ = input.readBytes();
                  break;
                }
                case 24: {
                  int rawValue = input.readEnum();
                  com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm value = com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(3, rawValue);
                  } else {
                    bitField0_ |= 0x00000004;
                    hmacAlgorithm_ = value;
                  }
                  break;
                }
                case 34: {
                  if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                    scope_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope>();
                    mutable_bitField0_ |= 0x00000008;
                  }
                  scope_.add(input.readMessage(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.PARSER, extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              scope_ = java.util.Collections.unmodifiableList(scope_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.class, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder.class);
        }

        public static com.google.protobuf.Parser<ACL> PARSER =
            new com.google.protobuf.AbstractParser<ACL>() {
          public ACL parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new ACL(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<ACL> getParserForType() {
          return PARSER;
        }

        /**
         * Protobuf enum {@code com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm}
         */
        public enum HMACAlgorithm
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>INVALID_HMAC_ALGORITHM = -1;</code>
           *
           * <pre>
           * Must come first, so default is invalid
           * </pre>
           */
          INVALID_HMAC_ALGORITHM(0, -1),
          /**
           * <code>HmacSHA1 = 1;</code>
           *
           * <pre>
           * 0 is reserved; do not use
           * </pre>
           */
          HmacSHA1(1, 1),
          ;

          /**
           * <code>INVALID_HMAC_ALGORITHM = -1;</code>
           *
           * <pre>
           * Must come first, so default is invalid
           * </pre>
           */
          public static final int INVALID_HMAC_ALGORITHM_VALUE = -1;
          /**
           * <code>HmacSHA1 = 1;</code>
           *
           * <pre>
           * 0 is reserved; do not use
           * </pre>
           */
          public static final int HmacSHA1_VALUE = 1;


          public final int getNumber() { return value; }

          public static HMACAlgorithm valueOf(int value) {
            switch (value) {
              case -1: return INVALID_HMAC_ALGORITHM;
              case 1: return HmacSHA1;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<HMACAlgorithm>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<HMACAlgorithm>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<HMACAlgorithm>() {
                  public HMACAlgorithm findValueByNumber(int number) {
                    return HMACAlgorithm.valueOf(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(index);
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.getDescriptor().getEnumTypes().get(0);
          }

          private static final HMACAlgorithm[] VALUES = values();

          public static HMACAlgorithm valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
          }

          private final int index;
          private final int value;

          private HMACAlgorithm(int index, int value) {
            this.index = index;
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm)
        }

        /**
         * Protobuf enum {@code com.seagate.kinetic.proto.Message.Security.ACL.Permission}
         */
        public enum Permission
            implements com.google.protobuf.ProtocolMessageEnum {
          /**
           * <code>INVALID_PERMISSION = -1;</code>
           *
           * <pre>
           * place holder for backward .proto file compatibility
           * </pre>
           */
          INVALID_PERMISSION(0, -1),
          /**
           * <code>READ = 0;</code>
           *
           * <pre>
           * can read key/values
           * </pre>
           */
          READ(1, 0),
          /**
           * <code>WRITE = 1;</code>
           *
           * <pre>
           * can write key/values
           * </pre>
           */
          WRITE(2, 1),
          /**
           * <code>DELETE = 2;</code>
           */
          DELETE(3, 2),
          /**
           * <code>RANGE = 3;</code>
           *
           * <pre>
           * can do a range
           * </pre>
           */
          RANGE(4, 3),
          /**
           * <code>SETUP = 4;</code>
           *
           * <pre>
           * can set up and a device
           * </pre>
           */
          SETUP(5, 4),
          /**
           * <code>P2POP = 5;</code>
           *
           * <pre>
           * can do a peer to peer operation
           * </pre>
           */
          P2POP(6, 5),
          /**
           * <code>GETLOG = 7;</code>
           *
           * <pre>
           * can get log
           * </pre>
           */
          GETLOG(7, 7),
          /**
           * <code>SECURITY = 8;</code>
           *
           * <pre>
           * can set up the security roles of the device
           * </pre>
           */
          SECURITY(8, 8),
          ;

          /**
           * <code>INVALID_PERMISSION = -1;</code>
           *
           * <pre>
           * place holder for backward .proto file compatibility
           * </pre>
           */
          public static final int INVALID_PERMISSION_VALUE = -1;
          /**
           * <code>READ = 0;</code>
           *
           * <pre>
           * can read key/values
           * </pre>
           */
          public static final int READ_VALUE = 0;
          /**
           * <code>WRITE = 1;</code>
           *
           * <pre>
           * can write key/values
           * </pre>
           */
          public static final int WRITE_VALUE = 1;
          /**
           * <code>DELETE = 2;</code>
           */
          public static final int DELETE_VALUE = 2;
          /**
           * <code>RANGE = 3;</code>
           *
           * <pre>
           * can do a range
           * </pre>
           */
          public static final int RANGE_VALUE = 3;
          /**
           * <code>SETUP = 4;</code>
           *
           * <pre>
           * can set up and a device
           * </pre>
           */
          public static final int SETUP_VALUE = 4;
          /**
           * <code>P2POP = 5;</code>
           *
           * <pre>
           * can do a peer to peer operation
           * </pre>
           */
          public static final int P2POP_VALUE = 5;
          /**
           * <code>GETLOG = 7;</code>
           *
           * <pre>
           * can get log
           * </pre>
           */
          public static final int GETLOG_VALUE = 7;
          /**
           * <code>SECURITY = 8;</code>
           *
           * <pre>
           * can set up the security roles of the device
           * </pre>
           */
          public static final int SECURITY_VALUE = 8;


          public final int getNumber() { return value; }

          public static Permission valueOf(int value) {
            switch (value) {
              case -1: return INVALID_PERMISSION;
              case 0: return READ;
              case 1: return WRITE;
              case 2: return DELETE;
              case 3: return RANGE;
              case 4: return SETUP;
              case 5: return P2POP;
              case 7: return GETLOG;
              case 8: return SECURITY;
              default: return null;
            }
          }

          public static com.google.protobuf.Internal.EnumLiteMap<Permission>
              internalGetValueMap() {
            return internalValueMap;
          }
          private static com.google.protobuf.Internal.EnumLiteMap<Permission>
              internalValueMap =
                new com.google.protobuf.Internal.EnumLiteMap<Permission>() {
                  public Permission findValueByNumber(int number) {
                    return Permission.valueOf(number);
                  }
                };

          public final com.google.protobuf.Descriptors.EnumValueDescriptor
              getValueDescriptor() {
            return getDescriptor().getValues().get(index);
          }
          public final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptorForType() {
            return getDescriptor();
          }
          public static final com.google.protobuf.Descriptors.EnumDescriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.getDescriptor().getEnumTypes().get(1);
          }

          private static final Permission[] VALUES = values();

          public static Permission valueOf(
              com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
            if (desc.getType() != getDescriptor()) {
              throw new java.lang.IllegalArgumentException(
                "EnumValueDescriptor is not for this type.");
            }
            return VALUES[desc.getIndex()];
          }

          private final int index;
          private final int value;

          private Permission(int index, int value) {
            this.index = index;
            this.value = value;
          }

          // @@protoc_insertion_point(enum_scope:com.seagate.kinetic.proto.Message.Security.ACL.Permission)
        }

        public interface ScopeOrBuilder
            extends com.google.protobuf.MessageOrBuilder {

          // optional int64 offset = 1;
          /**
           * <code>optional int64 offset = 1;</code>
           */
          boolean hasOffset();
          /**
           * <code>optional int64 offset = 1;</code>
           */
          long getOffset();

          // optional bytes value = 2;
          /**
           * <code>optional bytes value = 2;</code>
           */
          boolean hasValue();
          /**
           * <code>optional bytes value = 2;</code>
           */
          com.google.protobuf.ByteString getValue();

          // repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
           *
           * <pre>
           * one per role
           * </pre>
           */
          java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission> getPermissionList();
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
           *
           * <pre>
           * one per role
           * </pre>
           */
          int getPermissionCount();
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
           *
           * <pre>
           * one per role
           * </pre>
           */
          com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission getPermission(int index);

          // optional bool TlsRequired = 4;
          /**
           * <code>optional bool TlsRequired = 4;</code>
           *
           * <pre>
           * This is only allowed over the the TLS connection
           * </pre>
           */
          boolean hasTlsRequired();
          /**
           * <code>optional bool TlsRequired = 4;</code>
           *
           * <pre>
           * This is only allowed over the the TLS connection
           * </pre>
           */
          boolean getTlsRequired();
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.Security.ACL.Scope}
         */
        public static final class Scope extends
            com.google.protobuf.GeneratedMessage
            implements ScopeOrBuilder {
          // Use Scope.newBuilder() to construct.
          private Scope(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
          }
          private Scope(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

          private static final Scope defaultInstance;
          public static Scope getDefaultInstance() {
            return defaultInstance;
          }

          public Scope getDefaultInstanceForType() {
            return defaultInstance;
          }

          private final com.google.protobuf.UnknownFieldSet unknownFields;
          @java.lang.Override
          public final com.google.protobuf.UnknownFieldSet
              getUnknownFields() {
            return this.unknownFields;
          }
          private Scope(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(input, unknownFields,
                                           extensionRegistry, tag)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    offset_ = input.readInt64();
                    break;
                  }
                  case 18: {
                    bitField0_ |= 0x00000002;
                    value_ = input.readBytes();
                    break;
                  }
                  case 24: {
                    int rawValue = input.readEnum();
                    com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission value = com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission.valueOf(rawValue);
                    if (value == null) {
                      unknownFields.mergeVarintField(3, rawValue);
                    } else {
                      if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                        permission_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission>();
                        mutable_bitField0_ |= 0x00000004;
                      }
                      permission_.add(value);
                    }
                    break;
                  }
                  case 26: {
                    int length = input.readRawVarint32();
                    int oldLimit = input.pushLimit(length);
                    while(input.getBytesUntilLimit() > 0) {
                      int rawValue = input.readEnum();
                      com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission value = com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission.valueOf(rawValue);
                      if (value == null) {
                        unknownFields.mergeVarintField(3, rawValue);
                      } else {
                        if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                          permission_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission>();
                          mutable_bitField0_ |= 0x00000004;
                        }
                        permission_.add(value);
                      }
                    }
                    input.popLimit(oldLimit);
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000004;
                    tlsRequired_ = input.readBool();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this);
            } finally {
              if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                permission_ = java.util.Collections.unmodifiableList(permission_);
              }
              this.unknownFields = unknownFields.build();
              makeExtensionsImmutable();
            }
          }
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.class, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder.class);
          }

          public static com.google.protobuf.Parser<Scope> PARSER =
              new com.google.protobuf.AbstractParser<Scope>() {
            public Scope parsePartialFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
              return new Scope(input, extensionRegistry);
            }
          };

          @java.lang.Override
          public com.google.protobuf.Parser<Scope> getParserForType() {
            return PARSER;
          }

          private int bitField0_;
          // optional int64 offset = 1;
          public static final int OFFSET_FIELD_NUMBER = 1;
          private long offset_;
          /**
           * <code>optional int64 offset = 1;</code>
           */
          public boolean hasOffset() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional int64 offset = 1;</code>
           */
          public long getOffset() {
            return offset_;
          }

          // optional bytes value = 2;
          public static final int VALUE_FIELD_NUMBER = 2;
          private com.google.protobuf.ByteString value_;
          /**
           * <code>optional bytes value = 2;</code>
           */
          public boolean hasValue() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional bytes value = 2;</code>
           */
          public com.google.protobuf.ByteString getValue() {
            return value_;
          }

          // repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;
          public static final int PERMISSION_FIELD_NUMBER = 3;
          private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission> permission_;
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
           *
           * <pre>
           * one per role
           * </pre>
           */
          public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission> getPermissionList() {
            return permission_;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
           *
           * <pre>
           * one per role
           * </pre>
           */
          public int getPermissionCount() {
            return permission_.size();
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
           *
           * <pre>
           * one per role
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission getPermission(int index) {
            return permission_.get(index);
          }

          // optional bool TlsRequired = 4;
          public static final int TLSREQUIRED_FIELD_NUMBER = 4;
          private boolean tlsRequired_;
          /**
           * <code>optional bool TlsRequired = 4;</code>
           *
           * <pre>
           * This is only allowed over the the TLS connection
           * </pre>
           */
          public boolean hasTlsRequired() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional bool TlsRequired = 4;</code>
           *
           * <pre>
           * This is only allowed over the the TLS connection
           * </pre>
           */
          public boolean getTlsRequired() {
            return tlsRequired_;
          }

          private void initFields() {
            offset_ = 0L;
            value_ = com.google.protobuf.ByteString.EMPTY;
            permission_ = java.util.Collections.emptyList();
            tlsRequired_ = false;
          }
          private byte memoizedIsInitialized = -1;
          public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized != -1) return isInitialized == 1;

            memoizedIsInitialized = 1;
            return true;
          }

          public void writeTo(com.google.protobuf.CodedOutputStream output)
                              throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              output.writeInt64(1, offset_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              output.writeBytes(2, value_);
            }
            for (int i = 0; i < permission_.size(); i++) {
              output.writeEnum(3, permission_.get(i).getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              output.writeBool(4, tlsRequired_);
            }
            getUnknownFields().writeTo(output);
          }

          private int memoizedSerializedSize = -1;
          public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              size += com.google.protobuf.CodedOutputStream
                .computeInt64Size(1, offset_);
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBytesSize(2, value_);
            }
            {
              int dataSize = 0;
              for (int i = 0; i < permission_.size(); i++) {
                dataSize += com.google.protobuf.CodedOutputStream
                  .computeEnumSizeNoTag(permission_.get(i).getNumber());
              }
              size += dataSize;
              size += 1 * permission_.size();
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
              size += com.google.protobuf.CodedOutputStream
                .computeBoolSize(4, tlsRequired_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
          }

          private static final long serialVersionUID = 0L;
          @java.lang.Override
          protected java.lang.Object writeReplace()
              throws java.io.ObjectStreamException {
            return super.writeReplace();
          }

          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseFrom(
              com.google.protobuf.ByteString data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseFrom(
              com.google.protobuf.ByteString data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseFrom(byte[] data)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseFrom(
              byte[] data,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseDelimitedFrom(java.io.InputStream input)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseDelimitedFrom(
              java.io.InputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseFrom(
              com.google.protobuf.CodedInputStream input)
              throws java.io.IOException {
            return PARSER.parseFrom(input);
          }
          public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parseFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
          }

          public static Builder newBuilder() { return Builder.create(); }
          public Builder newBuilderForType() { return newBuilder(); }
          public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope prototype) {
            return newBuilder().mergeFrom(prototype);
          }
          public Builder toBuilder() { return newBuilder(this); }

          @java.lang.Override
          protected Builder newBuilderForType(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
          }
          /**
           * Protobuf type {@code com.seagate.kinetic.proto.Message.Security.ACL.Scope}
           */
          public static final class Builder extends
              com.google.protobuf.GeneratedMessage.Builder<Builder>
             implements com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
                getDescriptor() {
              return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
                internalGetFieldAccessorTable() {
              return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_fieldAccessorTable
                  .ensureFieldAccessorsInitialized(
                      com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.class, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder.class);
            }

            // Construct using com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.newBuilder()
            private Builder() {
              maybeForceBuilderInitialization();
            }

            private Builder(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
              super(parent);
              maybeForceBuilderInitialization();
            }
            private void maybeForceBuilderInitialization() {
              if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              }
            }
            private static Builder create() {
              return new Builder();
            }

            public Builder clear() {
              super.clear();
              offset_ = 0L;
              bitField0_ = (bitField0_ & ~0x00000001);
              value_ = com.google.protobuf.ByteString.EMPTY;
              bitField0_ = (bitField0_ & ~0x00000002);
              permission_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000004);
              tlsRequired_ = false;
              bitField0_ = (bitField0_ & ~0x00000008);
              return this;
            }

            public Builder clone() {
              return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
                getDescriptorForType() {
              return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_descriptor;
            }

            public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope getDefaultInstanceForType() {
              return com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.getDefaultInstance();
            }

            public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope build() {
              com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope result = buildPartial();
              if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
              }
              return result;
            }

            public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope buildPartial() {
              com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope result = new com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope(this);
              int from_bitField0_ = bitField0_;
              int to_bitField0_ = 0;
              if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                to_bitField0_ |= 0x00000001;
              }
              result.offset_ = offset_;
              if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                to_bitField0_ |= 0x00000002;
              }
              result.value_ = value_;
              if (((bitField0_ & 0x00000004) == 0x00000004)) {
                permission_ = java.util.Collections.unmodifiableList(permission_);
                bitField0_ = (bitField0_ & ~0x00000004);
              }
              result.permission_ = permission_;
              if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                to_bitField0_ |= 0x00000004;
              }
              result.tlsRequired_ = tlsRequired_;
              result.bitField0_ = to_bitField0_;
              onBuilt();
              return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
              if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope) {
                return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope)other);
              } else {
                super.mergeFrom(other);
                return this;
              }
            }

            public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope other) {
              if (other == com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.getDefaultInstance()) return this;
              if (other.hasOffset()) {
                setOffset(other.getOffset());
              }
              if (other.hasValue()) {
                setValue(other.getValue());
              }
              if (!other.permission_.isEmpty()) {
                if (permission_.isEmpty()) {
                  permission_ = other.permission_;
                  bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                  ensurePermissionIsMutable();
                  permission_.addAll(other.permission_);
                }
                onChanged();
              }
              if (other.hasTlsRequired()) {
                setTlsRequired(other.getTlsRequired());
              }
              this.mergeUnknownFields(other.getUnknownFields());
              return this;
            }

            public final boolean isInitialized() {
              return true;
            }

            public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
              com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope parsedMessage = null;
              try {
                parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
              } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope) e.getUnfinishedMessage();
                throw e;
              } finally {
                if (parsedMessage != null) {
                  mergeFrom(parsedMessage);
                }
              }
              return this;
            }
            private int bitField0_;

            // optional int64 offset = 1;
            private long offset_ ;
            /**
             * <code>optional int64 offset = 1;</code>
             */
            public boolean hasOffset() {
              return ((bitField0_ & 0x00000001) == 0x00000001);
            }
            /**
             * <code>optional int64 offset = 1;</code>
             */
            public long getOffset() {
              return offset_;
            }
            /**
             * <code>optional int64 offset = 1;</code>
             */
            public Builder setOffset(long value) {
              bitField0_ |= 0x00000001;
              offset_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional int64 offset = 1;</code>
             */
            public Builder clearOffset() {
              bitField0_ = (bitField0_ & ~0x00000001);
              offset_ = 0L;
              onChanged();
              return this;
            }

            // optional bytes value = 2;
            private com.google.protobuf.ByteString value_ = com.google.protobuf.ByteString.EMPTY;
            /**
             * <code>optional bytes value = 2;</code>
             */
            public boolean hasValue() {
              return ((bitField0_ & 0x00000002) == 0x00000002);
            }
            /**
             * <code>optional bytes value = 2;</code>
             */
            public com.google.protobuf.ByteString getValue() {
              return value_;
            }
            /**
             * <code>optional bytes value = 2;</code>
             */
            public Builder setValue(com.google.protobuf.ByteString value) {
              if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
              value_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional bytes value = 2;</code>
             */
            public Builder clearValue() {
              bitField0_ = (bitField0_ & ~0x00000002);
              value_ = getDefaultInstance().getValue();
              onChanged();
              return this;
            }

            // repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;
            private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission> permission_ =
              java.util.Collections.emptyList();
            private void ensurePermissionIsMutable() {
              if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                permission_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission>(permission_);
                bitField0_ |= 0x00000004;
              }
            }
            /**
             * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
             *
             * <pre>
             * one per role
             * </pre>
             */
            public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission> getPermissionList() {
              return java.util.Collections.unmodifiableList(permission_);
            }
            /**
             * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
             *
             * <pre>
             * one per role
             * </pre>
             */
            public int getPermissionCount() {
              return permission_.size();
            }
            /**
             * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
             *
             * <pre>
             * one per role
             * </pre>
             */
            public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission getPermission(int index) {
              return permission_.get(index);
            }
            /**
             * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
             *
             * <pre>
             * one per role
             * </pre>
             */
            public Builder setPermission(
                int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission value) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensurePermissionIsMutable();
              permission_.set(index, value);
              onChanged();
              return this;
            }
            /**
             * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
             *
             * <pre>
             * one per role
             * </pre>
             */
            public Builder addPermission(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission value) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensurePermissionIsMutable();
              permission_.add(value);
              onChanged();
              return this;
            }
            /**
             * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
             *
             * <pre>
             * one per role
             * </pre>
             */
            public Builder addAllPermission(
                java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Permission> values) {
              ensurePermissionIsMutable();
              super.addAll(values, permission_);
              onChanged();
              return this;
            }
            /**
             * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Permission permission = 3;</code>
             *
             * <pre>
             * one per role
             * </pre>
             */
            public Builder clearPermission() {
              permission_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000004);
              onChanged();
              return this;
            }

            // optional bool TlsRequired = 4;
            private boolean tlsRequired_ ;
            /**
             * <code>optional bool TlsRequired = 4;</code>
             *
             * <pre>
             * This is only allowed over the the TLS connection
             * </pre>
             */
            public boolean hasTlsRequired() {
              return ((bitField0_ & 0x00000008) == 0x00000008);
            }
            /**
             * <code>optional bool TlsRequired = 4;</code>
             *
             * <pre>
             * This is only allowed over the the TLS connection
             * </pre>
             */
            public boolean getTlsRequired() {
              return tlsRequired_;
            }
            /**
             * <code>optional bool TlsRequired = 4;</code>
             *
             * <pre>
             * This is only allowed over the the TLS connection
             * </pre>
             */
            public Builder setTlsRequired(boolean value) {
              bitField0_ |= 0x00000008;
              tlsRequired_ = value;
              onChanged();
              return this;
            }
            /**
             * <code>optional bool TlsRequired = 4;</code>
             *
             * <pre>
             * This is only allowed over the the TLS connection
             * </pre>
             */
            public Builder clearTlsRequired() {
              bitField0_ = (bitField0_ & ~0x00000008);
              tlsRequired_ = false;
              onChanged();
              return this;
            }

            // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Security.ACL.Scope)
          }

          static {
            defaultInstance = new Scope(true);
            defaultInstance.initFields();
          }

          // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Security.ACL.Scope)
        }

        private int bitField0_;
        // optional int64 identity = 1;
        public static final int IDENTITY_FIELD_NUMBER = 1;
        private long identity_;
        /**
         * <code>optional int64 identity = 1;</code>
         */
        public boolean hasIdentity() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int64 identity = 1;</code>
         */
        public long getIdentity() {
          return identity_;
        }

        // optional bytes key = 2;
        public static final int KEY_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString key_;
        /**
         * <code>optional bytes key = 2;</code>
         *
         * <pre>
         * the HMAC key
         * </pre>
         */
        public boolean hasKey() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional bytes key = 2;</code>
         *
         * <pre>
         * the HMAC key
         * </pre>
         */
        public com.google.protobuf.ByteString getKey() {
          return key_;
        }

        // optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;
        public static final int HMACALGORITHM_FIELD_NUMBER = 3;
        private com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm hmacAlgorithm_;
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;</code>
         */
        public boolean hasHmacAlgorithm() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;</code>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm getHmacAlgorithm() {
          return hmacAlgorithm_;
        }

        // repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;
        public static final int SCOPE_FIELD_NUMBER = 4;
        private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope> scope_;
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope> getScopeList() {
          return scope_;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder> 
            getScopeOrBuilderList() {
          return scope_;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        public int getScopeCount() {
          return scope_.size();
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope getScope(int index) {
          return scope_.get(index);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
         *
         * <pre>
         * value that must be in the key for read, write, range requests. If none are specified
         * then no checking occurs. If one or more is specified, one must match or the request
         * is rejected
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder getScopeOrBuilder(
            int index) {
          return scope_.get(index);
        }

        private void initFields() {
          identity_ = 0L;
          key_ = com.google.protobuf.ByteString.EMPTY;
          hmacAlgorithm_ = com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm.INVALID_HMAC_ALGORITHM;
          scope_ = java.util.Collections.emptyList();
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeInt64(1, identity_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, key_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            output.writeEnum(3, hmacAlgorithm_.getNumber());
          }
          for (int i = 0; i < scope_.size(); i++) {
            output.writeMessage(4, scope_.get(i));
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt64Size(1, identity_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, key_);
          }
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(3, hmacAlgorithm_.getNumber());
          }
          for (int i = 0; i < scope_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(4, scope_.get(i));
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code com.seagate.kinetic.proto.Message.Security.ACL}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.class, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder.class);
          }

          // Construct using com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
              getScopeFieldBuilder();
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            identity_ = 0L;
            bitField0_ = (bitField0_ & ~0x00000001);
            key_ = com.google.protobuf.ByteString.EMPTY;
            bitField0_ = (bitField0_ & ~0x00000002);
            hmacAlgorithm_ = com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm.INVALID_HMAC_ALGORITHM;
            bitField0_ = (bitField0_ & ~0x00000004);
            if (scopeBuilder_ == null) {
              scope_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              scopeBuilder_.clear();
            }
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_ACL_descriptor;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL getDefaultInstanceForType() {
            return com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.getDefaultInstance();
          }

          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL build() {
            com.seagate.kinetic.proto.Kinetic.Message.Security.ACL result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL buildPartial() {
            com.seagate.kinetic.proto.Kinetic.Message.Security.ACL result = new com.seagate.kinetic.proto.Kinetic.Message.Security.ACL(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.identity_ = identity_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.key_ = key_;
            if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
              to_bitField0_ |= 0x00000004;
            }
            result.hmacAlgorithm_ = hmacAlgorithm_;
            if (scopeBuilder_ == null) {
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                scope_ = java.util.Collections.unmodifiableList(scope_);
                bitField0_ = (bitField0_ & ~0x00000008);
              }
              result.scope_ = scope_;
            } else {
              result.scope_ = scopeBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Security.ACL) {
              return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Security.ACL)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL other) {
            if (other == com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.getDefaultInstance()) return this;
            if (other.hasIdentity()) {
              setIdentity(other.getIdentity());
            }
            if (other.hasKey()) {
              setKey(other.getKey());
            }
            if (other.hasHmacAlgorithm()) {
              setHmacAlgorithm(other.getHmacAlgorithm());
            }
            if (scopeBuilder_ == null) {
              if (!other.scope_.isEmpty()) {
                if (scope_.isEmpty()) {
                  scope_ = other.scope_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                } else {
                  ensureScopeIsMutable();
                  scope_.addAll(other.scope_);
                }
                onChanged();
              }
            } else {
              if (!other.scope_.isEmpty()) {
                if (scopeBuilder_.isEmpty()) {
                  scopeBuilder_.dispose();
                  scopeBuilder_ = null;
                  scope_ = other.scope_;
                  bitField0_ = (bitField0_ & ~0x00000008);
                  scopeBuilder_ = 
                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                       getScopeFieldBuilder() : null;
                } else {
                  scopeBuilder_.addAllMessages(other.scope_);
                }
              }
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            com.seagate.kinetic.proto.Kinetic.Message.Security.ACL parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Security.ACL) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // optional int64 identity = 1;
          private long identity_ ;
          /**
           * <code>optional int64 identity = 1;</code>
           */
          public boolean hasIdentity() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>optional int64 identity = 1;</code>
           */
          public long getIdentity() {
            return identity_;
          }
          /**
           * <code>optional int64 identity = 1;</code>
           */
          public Builder setIdentity(long value) {
            bitField0_ |= 0x00000001;
            identity_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional int64 identity = 1;</code>
           */
          public Builder clearIdentity() {
            bitField0_ = (bitField0_ & ~0x00000001);
            identity_ = 0L;
            onChanged();
            return this;
          }

          // optional bytes key = 2;
          private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <code>optional bytes key = 2;</code>
           *
           * <pre>
           * the HMAC key
           * </pre>
           */
          public boolean hasKey() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>optional bytes key = 2;</code>
           *
           * <pre>
           * the HMAC key
           * </pre>
           */
          public com.google.protobuf.ByteString getKey() {
            return key_;
          }
          /**
           * <code>optional bytes key = 2;</code>
           *
           * <pre>
           * the HMAC key
           * </pre>
           */
          public Builder setKey(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            key_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional bytes key = 2;</code>
           *
           * <pre>
           * the HMAC key
           * </pre>
           */
          public Builder clearKey() {
            bitField0_ = (bitField0_ & ~0x00000002);
            key_ = getDefaultInstance().getKey();
            onChanged();
            return this;
          }

          // optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;
          private com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm hmacAlgorithm_ = com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm.INVALID_HMAC_ALGORITHM;
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;</code>
           */
          public boolean hasHmacAlgorithm() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;</code>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm getHmacAlgorithm() {
            return hmacAlgorithm_;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;</code>
           */
          public Builder setHmacAlgorithm(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000004;
            hmacAlgorithm_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>optional .com.seagate.kinetic.proto.Message.Security.ACL.HMACAlgorithm hmacAlgorithm = 3;</code>
           */
          public Builder clearHmacAlgorithm() {
            bitField0_ = (bitField0_ & ~0x00000004);
            hmacAlgorithm_ = com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.HMACAlgorithm.INVALID_HMAC_ALGORITHM;
            onChanged();
            return this;
          }

          // repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;
          private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope> scope_ =
            java.util.Collections.emptyList();
          private void ensureScopeIsMutable() {
            if (!((bitField0_ & 0x00000008) == 0x00000008)) {
              scope_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope>(scope_);
              bitField0_ |= 0x00000008;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder> scopeBuilder_;

          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope> getScopeList() {
            if (scopeBuilder_ == null) {
              return java.util.Collections.unmodifiableList(scope_);
            } else {
              return scopeBuilder_.getMessageList();
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public int getScopeCount() {
            if (scopeBuilder_ == null) {
              return scope_.size();
            } else {
              return scopeBuilder_.getCount();
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope getScope(int index) {
            if (scopeBuilder_ == null) {
              return scope_.get(index);
            } else {
              return scopeBuilder_.getMessage(index);
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder setScope(
              int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope value) {
            if (scopeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureScopeIsMutable();
              scope_.set(index, value);
              onChanged();
            } else {
              scopeBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder setScope(
              int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder builderForValue) {
            if (scopeBuilder_ == null) {
              ensureScopeIsMutable();
              scope_.set(index, builderForValue.build());
              onChanged();
            } else {
              scopeBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder addScope(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope value) {
            if (scopeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureScopeIsMutable();
              scope_.add(value);
              onChanged();
            } else {
              scopeBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder addScope(
              int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope value) {
            if (scopeBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureScopeIsMutable();
              scope_.add(index, value);
              onChanged();
            } else {
              scopeBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder addScope(
              com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder builderForValue) {
            if (scopeBuilder_ == null) {
              ensureScopeIsMutable();
              scope_.add(builderForValue.build());
              onChanged();
            } else {
              scopeBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder addScope(
              int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder builderForValue) {
            if (scopeBuilder_ == null) {
              ensureScopeIsMutable();
              scope_.add(index, builderForValue.build());
              onChanged();
            } else {
              scopeBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder addAllScope(
              java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope> values) {
            if (scopeBuilder_ == null) {
              ensureScopeIsMutable();
              super.addAll(values, scope_);
              onChanged();
            } else {
              scopeBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder clearScope() {
            if (scopeBuilder_ == null) {
              scope_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000008);
              onChanged();
            } else {
              scopeBuilder_.clear();
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public Builder removeScope(int index) {
            if (scopeBuilder_ == null) {
              ensureScopeIsMutable();
              scope_.remove(index);
              onChanged();
            } else {
              scopeBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder getScopeBuilder(
              int index) {
            return getScopeFieldBuilder().getBuilder(index);
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder getScopeOrBuilder(
              int index) {
            if (scopeBuilder_ == null) {
              return scope_.get(index);  } else {
              return scopeBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder> 
               getScopeOrBuilderList() {
            if (scopeBuilder_ != null) {
              return scopeBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(scope_);
            }
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder addScopeBuilder() {
            return getScopeFieldBuilder().addBuilder(
                com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.getDefaultInstance());
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder addScopeBuilder(
              int index) {
            return getScopeFieldBuilder().addBuilder(
                index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.getDefaultInstance());
          }
          /**
           * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL.Scope scope = 4;</code>
           *
           * <pre>
           * value that must be in the key for read, write, range requests. If none are specified
           * then no checking occurs. If one or more is specified, one must match or the request
           * is rejected
           * </pre>
           */
          public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder> 
               getScopeBuilderList() {
            return getScopeFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder> 
              getScopeFieldBuilder() {
            if (scopeBuilder_ == null) {
              scopeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                  com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Scope.Builder, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.ScopeOrBuilder>(
                      scope_,
                      ((bitField0_ & 0x00000008) == 0x00000008),
                      getParentForChildren(),
                      isClean());
              scope_ = null;
            }
            return scopeBuilder_;
          }

          // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Security.ACL)
        }

        static {
          defaultInstance = new ACL(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Security.ACL)
      }

      // repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;
      public static final int ACL_FIELD_NUMBER = 2;
      private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL> acl_;
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL> getAclList() {
        return acl_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder> 
          getAclOrBuilderList() {
        return acl_;
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      public int getAclCount() {
        return acl_.size();
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL getAcl(int index) {
        return acl_.get(index);
      }
      /**
       * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
       *
       * <pre>
       * one per identity
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder getAclOrBuilder(
          int index) {
        return acl_.get(index);
      }

      private void initFields() {
        acl_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < acl_.size(); i++) {
          output.writeMessage(2, acl_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < acl_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, acl_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static com.seagate.kinetic.proto.Kinetic.Message.Security parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message.Security prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code com.seagate.kinetic.proto.Message.Security}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements com.seagate.kinetic.proto.Kinetic.Message.SecurityOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  com.seagate.kinetic.proto.Kinetic.Message.Security.class, com.seagate.kinetic.proto.Kinetic.Message.Security.Builder.class);
        }

        // Construct using com.seagate.kinetic.proto.Kinetic.Message.Security.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getAclFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          if (aclBuilder_ == null) {
            acl_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            aclBuilder_.clear();
          }
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_Security_descriptor;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Security getDefaultInstanceForType() {
          return com.seagate.kinetic.proto.Kinetic.Message.Security.getDefaultInstance();
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Security build() {
          com.seagate.kinetic.proto.Kinetic.Message.Security result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public com.seagate.kinetic.proto.Kinetic.Message.Security buildPartial() {
          com.seagate.kinetic.proto.Kinetic.Message.Security result = new com.seagate.kinetic.proto.Kinetic.Message.Security(this);
          int from_bitField0_ = bitField0_;
          if (aclBuilder_ == null) {
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
              acl_ = java.util.Collections.unmodifiableList(acl_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.acl_ = acl_;
          } else {
            result.acl_ = aclBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof com.seagate.kinetic.proto.Kinetic.Message.Security) {
            return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message.Security)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message.Security other) {
          if (other == com.seagate.kinetic.proto.Kinetic.Message.Security.getDefaultInstance()) return this;
          if (aclBuilder_ == null) {
            if (!other.acl_.isEmpty()) {
              if (acl_.isEmpty()) {
                acl_ = other.acl_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureAclIsMutable();
                acl_.addAll(other.acl_);
              }
              onChanged();
            }
          } else {
            if (!other.acl_.isEmpty()) {
              if (aclBuilder_.isEmpty()) {
                aclBuilder_.dispose();
                aclBuilder_ = null;
                acl_ = other.acl_;
                bitField0_ = (bitField0_ & ~0x00000001);
                aclBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getAclFieldBuilder() : null;
              } else {
                aclBuilder_.addAllMessages(other.acl_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          com.seagate.kinetic.proto.Kinetic.Message.Security parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message.Security) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;
        private java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL> acl_ =
          java.util.Collections.emptyList();
        private void ensureAclIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            acl_ = new java.util.ArrayList<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL>(acl_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Security.ACL, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder, com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder> aclBuilder_;

        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL> getAclList() {
          if (aclBuilder_ == null) {
            return java.util.Collections.unmodifiableList(acl_);
          } else {
            return aclBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public int getAclCount() {
          if (aclBuilder_ == null) {
            return acl_.size();
          } else {
            return aclBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL getAcl(int index) {
          if (aclBuilder_ == null) {
            return acl_.get(index);
          } else {
            return aclBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder setAcl(
            int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL value) {
          if (aclBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAclIsMutable();
            acl_.set(index, value);
            onChanged();
          } else {
            aclBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder setAcl(
            int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder builderForValue) {
          if (aclBuilder_ == null) {
            ensureAclIsMutable();
            acl_.set(index, builderForValue.build());
            onChanged();
          } else {
            aclBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder addAcl(com.seagate.kinetic.proto.Kinetic.Message.Security.ACL value) {
          if (aclBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAclIsMutable();
            acl_.add(value);
            onChanged();
          } else {
            aclBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder addAcl(
            int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL value) {
          if (aclBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureAclIsMutable();
            acl_.add(index, value);
            onChanged();
          } else {
            aclBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder addAcl(
            com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder builderForValue) {
          if (aclBuilder_ == null) {
            ensureAclIsMutable();
            acl_.add(builderForValue.build());
            onChanged();
          } else {
            aclBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder addAcl(
            int index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder builderForValue) {
          if (aclBuilder_ == null) {
            ensureAclIsMutable();
            acl_.add(index, builderForValue.build());
            onChanged();
          } else {
            aclBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder addAllAcl(
            java.lang.Iterable<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACL> values) {
          if (aclBuilder_ == null) {
            ensureAclIsMutable();
            super.addAll(values, acl_);
            onChanged();
          } else {
            aclBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder clearAcl() {
          if (aclBuilder_ == null) {
            acl_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            aclBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public Builder removeAcl(int index) {
          if (aclBuilder_ == null) {
            ensureAclIsMutable();
            acl_.remove(index);
            onChanged();
          } else {
            aclBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder getAclBuilder(
            int index) {
          return getAclFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder getAclOrBuilder(
            int index) {
          if (aclBuilder_ == null) {
            return acl_.get(index);  } else {
            return aclBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public java.util.List<? extends com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder> 
             getAclOrBuilderList() {
          if (aclBuilder_ != null) {
            return aclBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(acl_);
          }
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder addAclBuilder() {
          return getAclFieldBuilder().addBuilder(
              com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder addAclBuilder(
            int index) {
          return getAclFieldBuilder().addBuilder(
              index, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.getDefaultInstance());
        }
        /**
         * <code>repeated .com.seagate.kinetic.proto.Message.Security.ACL acl = 2;</code>
         *
         * <pre>
         * one per identity
         * </pre>
         */
        public java.util.List<com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder> 
             getAclBuilderList() {
          return getAclFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            com.seagate.kinetic.proto.Kinetic.Message.Security.ACL, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder, com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder> 
            getAclFieldBuilder() {
          if (aclBuilder_ == null) {
            aclBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                com.seagate.kinetic.proto.Kinetic.Message.Security.ACL, com.seagate.kinetic.proto.Kinetic.Message.Security.ACL.Builder, com.seagate.kinetic.proto.Kinetic.Message.Security.ACLOrBuilder>(
                    acl_,
                    ((bitField0_ & 0x00000001) == 0x00000001),
                    getParentForChildren(),
                    isClean());
            acl_ = null;
          }
          return aclBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message.Security)
      }

      static {
        defaultInstance = new Security(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message.Security)
    }

    private int bitField0_;
    // optional .com.seagate.kinetic.proto.Message.Command command = 1;
    public static final int COMMAND_FIELD_NUMBER = 1;
    private com.seagate.kinetic.proto.Kinetic.Message.Command command_;
    /**
     * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
     *
     * <pre>
     * The command contains the header, body and status as a single
     * unit that will be used to calculate the HMAC.
     * </pre>
     */
    public boolean hasCommand() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
     *
     * <pre>
     * The command contains the header, body and status as a single
     * unit that will be used to calculate the HMAC.
     * </pre>
     */
    public com.seagate.kinetic.proto.Kinetic.Message.Command getCommand() {
      return command_;
    }
    /**
     * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
     *
     * <pre>
     * The command contains the header, body and status as a single
     * unit that will be used to calculate the HMAC.
     * </pre>
     */
    public com.seagate.kinetic.proto.Kinetic.Message.CommandOrBuilder getCommandOrBuilder() {
      return command_;
    }

    // optional bytes hmac = 3;
    public static final int HMAC_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString hmac_;
    /**
     * <code>optional bytes hmac = 3;</code>
     *
     * <pre>
     *HMAC
     * </pre>
     */
    public boolean hasHmac() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes hmac = 3;</code>
     *
     * <pre>
     *HMAC
     * </pre>
     */
    public com.google.protobuf.ByteString getHmac() {
      return hmac_;
    }

    private void initFields() {
      command_ = com.seagate.kinetic.proto.Kinetic.Message.Command.getDefaultInstance();
      hmac_ = com.google.protobuf.ByteString.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, command_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, hmac_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, command_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, hmac_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.seagate.kinetic.proto.Kinetic.Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.seagate.kinetic.proto.Kinetic.Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.seagate.kinetic.proto.Kinetic.Message prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.seagate.kinetic.proto.Message}
     *
     * <pre>
     **
     * Update summary:
     *
     * 1. Message is divided into the following logical sections.
     *
     * 1.1 Header.
     * 1.2 Body.
     * 1.3 Status.
     * 1.4 value.
     * 1.5 HMAC.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.seagate.kinetic.proto.Kinetic.MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.seagate.kinetic.proto.Kinetic.Message.class, com.seagate.kinetic.proto.Kinetic.Message.Builder.class);
      }

      // Construct using com.seagate.kinetic.proto.Kinetic.Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCommandFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (commandBuilder_ == null) {
          command_ = com.seagate.kinetic.proto.Kinetic.Message.Command.getDefaultInstance();
        } else {
          commandBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        hmac_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.seagate.kinetic.proto.Kinetic.internal_static_com_seagate_kinetic_proto_Message_descriptor;
      }

      public com.seagate.kinetic.proto.Kinetic.Message getDefaultInstanceForType() {
        return com.seagate.kinetic.proto.Kinetic.Message.getDefaultInstance();
      }

      public com.seagate.kinetic.proto.Kinetic.Message build() {
        com.seagate.kinetic.proto.Kinetic.Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.seagate.kinetic.proto.Kinetic.Message buildPartial() {
        com.seagate.kinetic.proto.Kinetic.Message result = new com.seagate.kinetic.proto.Kinetic.Message(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (commandBuilder_ == null) {
          result.command_ = command_;
        } else {
          result.command_ = commandBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.hmac_ = hmac_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.seagate.kinetic.proto.Kinetic.Message) {
          return mergeFrom((com.seagate.kinetic.proto.Kinetic.Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.seagate.kinetic.proto.Kinetic.Message other) {
        if (other == com.seagate.kinetic.proto.Kinetic.Message.getDefaultInstance()) return this;
        if (other.hasCommand()) {
          mergeCommand(other.getCommand());
        }
        if (other.hasHmac()) {
          setHmac(other.getHmac());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.seagate.kinetic.proto.Kinetic.Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.seagate.kinetic.proto.Kinetic.Message) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .com.seagate.kinetic.proto.Message.Command command = 1;
      private com.seagate.kinetic.proto.Kinetic.Message.Command command_ = com.seagate.kinetic.proto.Kinetic.Message.Command.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.seagate.kinetic.proto.Kinetic.Message.Command, com.seagate.kinetic.proto.Kinetic.Message.Command.Builder, com.seagate.kinetic.proto.Kinetic.Message.CommandOrBuilder> commandBuilder_;
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      public boolean hasCommand() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Command getCommand() {
        if (commandBuilder_ == null) {
          return command_;
        } else {
          return commandBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      public Builder setCommand(com.seagate.kinetic.proto.Kinetic.Message.Command value) {
        if (commandBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          command_ = value;
          onChanged();
        } else {
          commandBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      public Builder setCommand(
          com.seagate.kinetic.proto.Kinetic.Message.Command.Builder builderForValue) {
        if (commandBuilder_ == null) {
          command_ = builderForValue.build();
          onChanged();
        } else {
          commandBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      public Builder mergeCommand(com.seagate.kinetic.proto.Kinetic.Message.Command value) {
        if (commandBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              command_ != com.seagate.kinetic.proto.Kinetic.Message.Command.getDefaultInstance()) {
            command_ =
              com.seagate.kinetic.proto.Kinetic.Message.Command.newBuilder(command_).mergeFrom(value).buildPartial();
          } else {
            command_ = value;
          }
          onChanged();
        } else {
          commandBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      public Builder clearCommand() {
        if (commandBuilder_ == null) {
          command_ = com.seagate.kinetic.proto.Kinetic.Message.Command.getDefaultInstance();
          onChanged();
        } else {
          commandBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.Command.Builder getCommandBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCommandFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      public com.seagate.kinetic.proto.Kinetic.Message.CommandOrBuilder getCommandOrBuilder() {
        if (commandBuilder_ != null) {
          return commandBuilder_.getMessageOrBuilder();
        } else {
          return command_;
        }
      }
      /**
       * <code>optional .com.seagate.kinetic.proto.Message.Command command = 1;</code>
       *
       * <pre>
       * The command contains the header, body and status as a single
       * unit that will be used to calculate the HMAC.
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.seagate.kinetic.proto.Kinetic.Message.Command, com.seagate.kinetic.proto.Kinetic.Message.Command.Builder, com.seagate.kinetic.proto.Kinetic.Message.CommandOrBuilder> 
          getCommandFieldBuilder() {
        if (commandBuilder_ == null) {
          commandBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.seagate.kinetic.proto.Kinetic.Message.Command, com.seagate.kinetic.proto.Kinetic.Message.Command.Builder, com.seagate.kinetic.proto.Kinetic.Message.CommandOrBuilder>(
                  command_,
                  getParentForChildren(),
                  isClean());
          command_ = null;
        }
        return commandBuilder_;
      }

      // optional bytes hmac = 3;
      private com.google.protobuf.ByteString hmac_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes hmac = 3;</code>
       *
       * <pre>
       *HMAC
       * </pre>
       */
      public boolean hasHmac() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional bytes hmac = 3;</code>
       *
       * <pre>
       *HMAC
       * </pre>
       */
      public com.google.protobuf.ByteString getHmac() {
        return hmac_;
      }
      /**
       * <code>optional bytes hmac = 3;</code>
       *
       * <pre>
       *HMAC
       * </pre>
       */
      public Builder setHmac(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        hmac_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes hmac = 3;</code>
       *
       * <pre>
       *HMAC
       * </pre>
       */
      public Builder clearHmac() {
        bitField0_ = (bitField0_ & ~0x00000002);
        hmac_ = getDefaultInstance().getHmac();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.seagate.kinetic.proto.Message)
    }

    static {
      defaultInstance = new Message(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.seagate.kinetic.proto.Message)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Command_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Command_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Header_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Header_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Body_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Body_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Status_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Status_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_KeyValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_KeyValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Range_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Range_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Setup_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Setup_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_P2POperation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_P2POperation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Security_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Security_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Security_ACL_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Security_ACL_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rkinetic.proto\022\031com.seagate.kinetic.pro" +
      "to\"\260+\n\007Message\022;\n\007command\030\001 \001(\0132*.com.se" +
      "agate.kinetic.proto.Message.Command\022\014\n\004h" +
      "mac\030\003 \001(\014\032\266\001\n\007Command\0229\n\006header\030\001 \001(\0132)." +
      "com.seagate.kinetic.proto.Message.Header" +
      "\0225\n\004body\030\002 \001(\0132\'.com.seagate.kinetic.pro" +
      "to.Message.Body\0229\n\006status\030\003 \001(\0132).com.se" +
      "agate.kinetic.proto.Message.Status\032\360\001\n\006H" +
      "eader\022\026\n\016clusterVersion\030\001 \001(\003\022\020\n\010identit" +
      "y\030\002 \001(\003\022\024\n\014connectionID\030\003 \001(\003\022\020\n\010sequenc",
      "e\030\004 \001(\003\022\023\n\013ackSequence\030\006 \001(\003\022C\n\013messageT" +
      "ype\030\007 \001(\0162..com.seagate.kinetic.proto.Me" +
      "ssage.MessageType\022\017\n\007timeout\030\t \001(\003\022\021\n\tea" +
      "rlyExit\030\n \001(\010\022\026\n\016backgroundScan\030\013 \001(\010\032\370\002" +
      "\n\004Body\022=\n\010keyValue\030\001 \001(\0132+.com.seagate.k" +
      "inetic.proto.Message.KeyValue\0227\n\005range\030\002" +
      " \001(\0132(.com.seagate.kinetic.proto.Message" +
      ".Range\0227\n\005setup\030\003 \001(\0132(.com.seagate.kine" +
      "tic.proto.Message.Setup\022E\n\014p2pOperation\030" +
      "\004 \001(\0132/.com.seagate.kinetic.proto.Messag",
      "e.P2POperation\0229\n\006getLog\030\006 \001(\0132).com.sea" +
      "gate.kinetic.proto.Message.GetLog\022=\n\010sec" +
      "urity\030\007 \001(\0132+.com.seagate.kinetic.proto." +
      "Message.Security\032\223\004\n\006Status\022B\n\004code\030\001 \001(" +
      "\01624.com.seagate.kinetic.proto.Message.St" +
      "atus.StatusCode\022\025\n\rstatusMessage\030\002 \001(\t\022\027" +
      "\n\017detailedMessage\030\003 \001(\014\"\224\003\n\nStatusCode\022 " +
      "\n\023INVALID_STATUS_CODE\020\377\377\377\377\377\377\377\377\377\001\022\021\n\rNOT_" +
      "ATTEMPTED\020\000\022\013\n\007SUCCESS\020\001\022\020\n\014HMAC_FAILURE" +
      "\020\002\022\022\n\016NOT_AUTHORIZED\020\003\022\023\n\017VERSION_FAILUR",
      "E\020\004\022\022\n\016INTERNAL_ERROR\020\005\022\023\n\017HEADER_REQUIR" +
      "ED\020\006\022\r\n\tNOT_FOUND\020\007\022\024\n\020VERSION_MISMATCH\020" +
      "\010\022\020\n\014SERVICE_BUSY\020\t\022\013\n\007EXPIRED\020\n\022\016\n\nDATA" +
      "_ERROR\020\013\022\023\n\017PERM_DATA_ERROR\020\014\022\033\n\027REMOTE_" +
      "CONNECTION_ERROR\020\r\022\014\n\010NO_SPACE\020\016\022\032\n\026NO_S" +
      "UCH_HMAC_ALGORITHM\020\017\022\023\n\017INVALID_REQUEST\020" +
      "\020\022\033\n\027NESTED_OPERATION_ERRORS\020\021\032\376\001\n\010KeyVa" +
      "lue\022\022\n\nnewVersion\030\002 \001(\014\022\r\n\005force\030\010 \001(\010\022\013" +
      "\n\003key\030\003 \001(\014\022\021\n\tdbVersion\030\004 \001(\014\022\013\n\003tag\030\005 " +
      "\001(\014\022?\n\talgorithm\030\006 \001(\0162,.com.seagate.kin",
      "etic.proto.Message.Algorithm\022\024\n\014metadata" +
      "Only\030\007 \001(\010\022K\n\017synchronization\030\t \001(\01622.co" +
      "m.seagate.kinetic.proto.Message.Synchron" +
      "ization\032\220\001\n\005Range\022\020\n\010startKey\030\001 \001(\014\022\016\n\006e" +
      "ndKey\030\002 \001(\014\022\031\n\021startKeyInclusive\030\003 \001(\010\022\027" +
      "\n\017endKeyInclusive\030\004 \001(\010\022\023\n\013maxReturned\030\005" +
      " \001(\005\022\017\n\007reverse\030\006 \001(\010\022\013\n\003key\030\010 \003(\014\032u\n\005Se" +
      "tup\022\031\n\021newClusterVersion\030\001 \001(\003\022\032\n\022instan" +
      "tSecureErase\030\002 \001(\010\022\016\n\006setPin\030\003 \001(\014\022\013\n\003pi" +
      "n\030\004 \001(\014\022\030\n\020firmwareDownload\030\005 \001(\010\032\300\003\n\014P2",
      "POperation\022B\n\004peer\030\001 \001(\01324.com.seagate.k" +
      "inetic.proto.Message.P2POperation.Peer\022L" +
      "\n\toperation\030\002 \003(\01329.com.seagate.kinetic." +
      "proto.Message.P2POperation.Operation\022#\n\033" +
      "allChildOperationsSucceeded\030\003 \001(\010\032\303\001\n\tOp" +
      "eration\022\013\n\003key\030\003 \001(\014\022\017\n\007version\030\004 \001(\014\022\016\n" +
      "\006newKey\030\005 \001(\014\022\r\n\005force\030\006 \001(\010\0229\n\006status\030\007" +
      " \001(\0132).com.seagate.kinetic.proto.Message" +
      ".Status\022>\n\005p2pop\030\010 \001(\0132/.com.seagate.kin" +
      "etic.proto.Message.P2POperation\0323\n\004Peer\022",
      "\020\n\010hostname\030\001 \001(\t\022\014\n\004port\030\002 \001(\005\022\013\n\003tls\030\003" +
      " \001(\010\032\222\016\n\006GetLog\022<\n\004type\030\001 \003(\0162..com.seag" +
      "ate.kinetic.proto.Message.GetLog.Type\022J\n" +
      "\013utilization\030\002 \003(\01325.com.seagate.kinetic" +
      ".proto.Message.GetLog.Utilization\022J\n\013tem" +
      "perature\030\003 \003(\01325.com.seagate.kinetic.pro" +
      "to.Message.GetLog.Temperature\022D\n\010capacit" +
      "y\030\004 \001(\01322.com.seagate.kinetic.proto.Mess" +
      "age.GetLog.Capacity\022N\n\rconfiguration\030\005 \001" +
      "(\01327.com.seagate.kinetic.proto.Message.G",
      "etLog.Configuration\022H\n\nstatistics\030\006 \003(\0132" +
      "4.com.seagate.kinetic.proto.Message.GetL" +
      "og.Statistics\022\020\n\010messages\030\007 \001(\014\022@\n\006limit" +
      "s\030\010 \001(\01320.com.seagate.kinetic.proto.Mess" +
      "age.GetLog.Limits\022@\n\006device\030\t \001(\01320.com." +
      "seagate.kinetic.proto.Message.GetLog.Dev" +
      "ice\032*\n\013Utilization\022\014\n\004name\030\001 \001(\t\022\r\n\005valu" +
      "e\030\002 \001(\002\032^\n\013Temperature\022\014\n\004name\030\001 \001(\t\022\017\n\007" +
      "current\030\002 \001(\002\022\017\n\007minimum\030\003 \001(\002\022\017\n\007maximu" +
      "m\030\004 \001(\002\022\016\n\006target\030\005 \001(\002\032?\n\010Capacity\022\036\n\026n",
      "ominalCapacityInBytes\030\004 \001(\004\022\023\n\013portionFu" +
      "ll\030\005 \001(\002\032\266\003\n\rConfiguration\022\016\n\006vendor\030\005 \001" +
      "(\t\022\r\n\005model\030\006 \001(\t\022\024\n\014serialNumber\030\007 \001(\014\022" +
      "\025\n\rworldWideName\030\016 \001(\014\022\017\n\007version\030\010 \001(\t\022" +
      "\027\n\017compilationDate\030\014 \001(\t\022\022\n\nsourceHash\030\r" +
      " \001(\t\022\027\n\017protocolVersion\030\017 \001(\t\022\037\n\027protoco" +
      "lCompilationDate\030\020 \001(\t\022\032\n\022protocolSource" +
      "Hash\030\021 \001(\t\022T\n\tinterface\030\t \003(\0132A.com.seag" +
      "ate.kinetic.proto.Message.GetLog.Configu" +
      "ration.Interface\022\014\n\004port\030\n \001(\005\022\017\n\007tlsPor",
      "t\030\013 \001(\005\032P\n\tInterface\022\014\n\004name\030\001 \001(\t\022\013\n\003MA" +
      "C\030\002 \001(\014\022\023\n\013ipv4Address\030\003 \001(\014\022\023\n\013ipv6Addr" +
      "ess\030\004 \001(\014\032o\n\nStatistics\022C\n\013messageType\030\001" +
      " \001(\0162..com.seagate.kinetic.proto.Message" +
      ".MessageType\022\r\n\005count\030\004 \001(\004\022\r\n\005bytes\030\005 \001" +
      "(\004\032\213\002\n\006Limits\022\022\n\nmaxKeySize\030\001 \001(\r\022\024\n\014max" +
      "ValueSize\030\002 \001(\r\022\026\n\016maxVersionSize\030\003 \001(\r\022" +
      "\022\n\nmaxTagSize\030\004 \001(\r\022\026\n\016maxConnections\030\005 " +
      "\001(\r\022\"\n\032maxOutstandingReadRequests\030\006 \001(\r\022" +
      "#\n\033maxOutstandingWriteRequests\030\007 \001(\r\022\026\n\016",
      "maxMessageSize\030\010 \001(\r\022\030\n\020maxKeyRangeCount" +
      "\030\t \001(\r\022\030\n\020maxIdentityCount\030\n \001(\r\032\026\n\006Devi" +
      "ce\022\014\n\004name\030\001 \001(\014\"\236\001\n\004Type\022\031\n\014INVALID_TYP" +
      "E\020\377\377\377\377\377\377\377\377\377\001\022\020\n\014UTILIZATIONS\020\000\022\020\n\014TEMPER" +
      "ATURES\020\001\022\016\n\nCAPACITIES\020\002\022\021\n\rCONFIGURATIO" +
      "N\020\003\022\016\n\nSTATISTICS\020\004\022\014\n\010MESSAGES\020\005\022\n\n\006LIM" +
      "ITS\020\006\022\n\n\006DEVICE\020\007\032\351\004\n\010Security\022<\n\003acl\030\002 " +
      "\003(\0132/.com.seagate.kinetic.proto.Message." +
      "Security.ACL\032\236\004\n\003ACL\022\020\n\010identity\030\001 \001(\003\022\013" +
      "\n\003key\030\002 \001(\014\022T\n\rhmacAlgorithm\030\003 \001(\0162=.com",
      ".seagate.kinetic.proto.Message.Security." +
      "ACL.HMACAlgorithm\022D\n\005scope\030\004 \003(\01325.com.s" +
      "eagate.kinetic.proto.Message.Security.AC" +
      "L.Scope\032\213\001\n\005Scope\022\016\n\006offset\030\001 \001(\003\022\r\n\005val" +
      "ue\030\002 \001(\014\022N\n\npermission\030\003 \003(\0162:.com.seaga" +
      "te.kinetic.proto.Message.Security.ACL.Pe" +
      "rmission\022\023\n\013TlsRequired\030\004 \001(\010\"B\n\rHMACAlg" +
      "orithm\022#\n\026INVALID_HMAC_ALGORITHM\020\377\377\377\377\377\377\377" +
      "\377\377\001\022\014\n\010HmacSHA1\020\001\"\211\001\n\nPermission\022\037\n\022INVA" +
      "LID_PERMISSION\020\377\377\377\377\377\377\377\377\377\001\022\010\n\004READ\020\000\022\t\n\005W",
      "RITE\020\001\022\n\n\006DELETE\020\002\022\t\n\005RANGE\020\003\022\t\n\005SETUP\020\004" +
      "\022\t\n\005P2POP\020\005\022\n\n\006GETLOG\020\007\022\014\n\010SECURITY\020\010\"c\n" +
      "\017Synchronization\022$\n\027INVALID_SYNCHRONIZAT" +
      "ION\020\377\377\377\377\377\377\377\377\377\001\022\020\n\014WRITETHROUGH\020\001\022\r\n\tWRIT" +
      "EBACK\020\002\022\t\n\005FLUSH\020\003\"_\n\tAlgorithm\022\036\n\021INVAL" +
      "ID_ALGORITHM\020\377\377\377\377\377\377\377\377\377\001\022\010\n\004SHA1\020\001\022\010\n\004SHA" +
      "2\020\002\022\010\n\004SHA3\020\003\022\t\n\005CRC32\020\004\022\t\n\005CRC64\020\005\"\207\004\n\013" +
      "MessageType\022!\n\024INVALID_MESSAGE_TYPE\020\377\377\377\377" +
      "\377\377\377\377\377\001\022\007\n\003GET\020\002\022\020\n\014GET_RESPONSE\020\001\022\007\n\003PUT" +
      "\020\004\022\020\n\014PUT_RESPONSE\020\003\022\n\n\006DELETE\020\006\022\023\n\017DELE",
      "TE_RESPONSE\020\005\022\013\n\007GETNEXT\020\010\022\024\n\020GETNEXT_RE" +
      "SPONSE\020\007\022\017\n\013GETPREVIOUS\020\n\022\030\n\024GETPREVIOUS" +
      "_RESPONSE\020\t\022\017\n\013GETKEYRANGE\020\014\022\030\n\024GETKEYRA" +
      "NGE_RESPONSE\020\013\022\016\n\nGETVERSION\020\020\022\027\n\023GETVER" +
      "SION_RESPONSE\020\017\022\t\n\005SETUP\020\026\022\022\n\016SETUP_RESP" +
      "ONSE\020\025\022\n\n\006GETLOG\020\030\022\023\n\017GETLOG_RESPONSE\020\027\022" +
      "\014\n\010SECURITY\020\032\022\025\n\021SECURITY_RESPONSE\020\031\022\021\n\r" +
      "PEER2PEERPUSH\020\034\022\032\n\026PEER2PEERPUSH_RESPONS" +
      "E\020\033\022\010\n\004NOOP\020\036\022\021\n\rNOOP_RESPONSE\020\035\022\020\n\014FLUS" +
      "HALLDATA\020 \022\031\n\025FLUSHALLDATA_RESPONSE\020\037B\tB",
      "\007Kinetic"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_seagate_kinetic_proto_Message_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_seagate_kinetic_proto_Message_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_descriptor,
              new java.lang.String[] { "Command", "Hmac", });
          internal_static_com_seagate_kinetic_proto_Message_Command_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(0);
          internal_static_com_seagate_kinetic_proto_Message_Command_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Command_descriptor,
              new java.lang.String[] { "Header", "Body", "Status", });
          internal_static_com_seagate_kinetic_proto_Message_Header_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(1);
          internal_static_com_seagate_kinetic_proto_Message_Header_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Header_descriptor,
              new java.lang.String[] { "ClusterVersion", "Identity", "ConnectionID", "Sequence", "AckSequence", "MessageType", "Timeout", "EarlyExit", "BackgroundScan", });
          internal_static_com_seagate_kinetic_proto_Message_Body_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(2);
          internal_static_com_seagate_kinetic_proto_Message_Body_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Body_descriptor,
              new java.lang.String[] { "KeyValue", "Range", "Setup", "P2POperation", "GetLog", "Security", });
          internal_static_com_seagate_kinetic_proto_Message_Status_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(3);
          internal_static_com_seagate_kinetic_proto_Message_Status_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Status_descriptor,
              new java.lang.String[] { "Code", "StatusMessage", "DetailedMessage", });
          internal_static_com_seagate_kinetic_proto_Message_KeyValue_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(4);
          internal_static_com_seagate_kinetic_proto_Message_KeyValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_KeyValue_descriptor,
              new java.lang.String[] { "NewVersion", "Force", "Key", "DbVersion", "Tag", "Algorithm", "MetadataOnly", "Synchronization", });
          internal_static_com_seagate_kinetic_proto_Message_Range_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(5);
          internal_static_com_seagate_kinetic_proto_Message_Range_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Range_descriptor,
              new java.lang.String[] { "StartKey", "EndKey", "StartKeyInclusive", "EndKeyInclusive", "MaxReturned", "Reverse", "Key", });
          internal_static_com_seagate_kinetic_proto_Message_Setup_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(6);
          internal_static_com_seagate_kinetic_proto_Message_Setup_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Setup_descriptor,
              new java.lang.String[] { "NewClusterVersion", "InstantSecureErase", "SetPin", "Pin", "FirmwareDownload", });
          internal_static_com_seagate_kinetic_proto_Message_P2POperation_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(7);
          internal_static_com_seagate_kinetic_proto_Message_P2POperation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_P2POperation_descriptor,
              new java.lang.String[] { "Peer", "Operation", "AllChildOperationsSucceeded", });
          internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_P2POperation_descriptor.getNestedTypes().get(0);
          internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_P2POperation_Operation_descriptor,
              new java.lang.String[] { "Key", "Version", "NewKey", "Force", "Status", "P2Pop", });
          internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_P2POperation_descriptor.getNestedTypes().get(1);
          internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_P2POperation_Peer_descriptor,
              new java.lang.String[] { "Hostname", "Port", "Tls", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(8);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor,
              new java.lang.String[] { "Type", "Utilization", "Temperature", "Capacity", "Configuration", "Statistics", "Messages", "Limits", "Device", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor.getNestedTypes().get(0);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_Utilization_descriptor,
              new java.lang.String[] { "Name", "Value", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor.getNestedTypes().get(1);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_Temperature_descriptor,
              new java.lang.String[] { "Name", "Current", "Minimum", "Maximum", "Target", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor.getNestedTypes().get(2);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_Capacity_descriptor,
              new java.lang.String[] { "NominalCapacityInBytes", "PortionFull", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor.getNestedTypes().get(3);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_descriptor,
              new java.lang.String[] { "Vendor", "Model", "SerialNumber", "WorldWideName", "Version", "CompilationDate", "SourceHash", "ProtocolVersion", "ProtocolCompilationDate", "ProtocolSourceHash", "Interface", "Port", "TlsPort", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_descriptor.getNestedTypes().get(0);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_Configuration_Interface_descriptor,
              new java.lang.String[] { "Name", "MAC", "Ipv4Address", "Ipv6Address", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor.getNestedTypes().get(4);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_Statistics_descriptor,
              new java.lang.String[] { "MessageType", "Count", "Bytes", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor.getNestedTypes().get(5);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_Limits_descriptor,
              new java.lang.String[] { "MaxKeySize", "MaxValueSize", "MaxVersionSize", "MaxTagSize", "MaxConnections", "MaxOutstandingReadRequests", "MaxOutstandingWriteRequests", "MaxMessageSize", "MaxKeyRangeCount", "MaxIdentityCount", });
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_GetLog_descriptor.getNestedTypes().get(6);
          internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_GetLog_Device_descriptor,
              new java.lang.String[] { "Name", });
          internal_static_com_seagate_kinetic_proto_Message_Security_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_descriptor.getNestedTypes().get(9);
          internal_static_com_seagate_kinetic_proto_Message_Security_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Security_descriptor,
              new java.lang.String[] { "Acl", });
          internal_static_com_seagate_kinetic_proto_Message_Security_ACL_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_Security_descriptor.getNestedTypes().get(0);
          internal_static_com_seagate_kinetic_proto_Message_Security_ACL_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Security_ACL_descriptor,
              new java.lang.String[] { "Identity", "Key", "HmacAlgorithm", "Scope", });
          internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_descriptor =
            internal_static_com_seagate_kinetic_proto_Message_Security_ACL_descriptor.getNestedTypes().get(0);
          internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_seagate_kinetic_proto_Message_Security_ACL_Scope_descriptor,
              new java.lang.String[] { "Offset", "Value", "Permission", "TlsRequired", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
